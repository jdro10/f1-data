{"version":3,"sources":["components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitTab.js","components/Stats/RaceData/EventTabs.js","components/Stats/RaceData/FutureRace.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","components/Countdown/ClockCountdown.js"],"names":["boldFont","fontWeight","margin","padding","display","RaceClassification","raceClassification","history","useHistory","Table","className","responsive","style","overflow","map","driver","index","cursor","onClick","driverId","Driver","push","position","number","Row","Col","xs","TeamColor","constructorId","Constructor","height","md","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","time","FastestLap","rank","points","grid","RaceQualifying","raceQualifying","hasOwnProperty","code","substring","Q1","Q2","Q3","RaceTab","raceInfo","eventCountryCode","raceName","convertDate","date","raceDate","Date","getHours","getMinutes","getLocalRaceDate","countryCode","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","url","Marker","Popup","CircuitTab","fastestLap","setFastestLap","firstGrandPrix","setFirstGrandPrix","wikiPageId","setWikiPageId","circuitInformation","setCircuitInformation","loadingWikiData","setLoadingWikiData","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","fetch","Circuit","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","Results","season","method","Object","keys","query","pages","Location","country","locality","textAlign","href","lat","long","mapHeight","marginTop","fontSize","CountriesCodeNationality","nationality","toLowerCase","width","EventTabs","setEventCountryCode","a","alpha2Code","catch","error","fetchCountryCode","Tabs","defaultActiveKey","id","Tab","eventKey","title","ClockCountdown","FutureRace","round","setRaceInfo","setRaceQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceInfo","parseInt","fetchRaceQualifying","QualifyingResults","Container","fluid","minHeight","to","Race","setRaceClassification","loadingRaceResult","setLoadingRaceResult","fetchRaceResult","Spinner","animation","RaceResult","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","backgroundColor","NavBar","bg","variant","Brand","size","textDecoration","Collapse","color","dateToConvert","split","now","getTime","renderer","days","hours","minutes","seconds","completed","sm","lg"],"mappings":"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","file":"static/js/9.9133d6a2.chunk.js","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\nconst RaceClassification = ({ raceClassification }) => {\n  const history = useHistory();\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div>\n      <Table\n        className=\"table-hover\"\n        responsive=\"sm\"\n        style={{ overflow: \"hidden\" }}\n      >\n        <thead>\n          <tr>\n            <th>POS</th>\n            <th className=\"hideXS\">NUMBER</th>\n            <th>DRIVER</th>\n            <th className=\"hideXS\">TEAM</th>\n            <th className=\"hideXS\">LAPS</th>\n            <th>TIME/RETIRED</th>\n            <th>PTS</th>\n            <th className=\"hideXS\">+/-</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr\n              key={index}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td>\n                <Row className=\"g-2\">\n                  <Col xs={1} className=\"showXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                      height=\"45px\"\n                    />\n                  </Col>\n                  <Col xs={1} className=\"hideXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6} md={10}>\n                    {driver.Driver.givenName}{\" \"}\n                    <p style={boldFont}>\n                      {driver.Driver.familyName.toUpperCase()}\n                    </p>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col xs={2}>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n              <td className=\"hideXS\">{driver.grid - driver.position}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../../SharedStyles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  const history = useHistory();\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <Table responsive=\"sm\" className=\"table-hover\">\n      <thead>\n        <tr>\n          <th>POS</th>\n          <th className=\"hideXS\">NUMBER</th>\n          <th>DRIVER</th>\n          <th className=\"hideXS\">TEAM</th>\n          <th>Q1</th>\n          <th>Q2</th>\n          <th>Q3</th>\n        </tr>\n      </thead>\n      <tbody>\n        {raceQualifying.map((driver, index) => (\n          <tr\n            key={index}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => rowClick(driver.Driver.driverId)}\n          >\n            <td>{driver.position}</td>\n            <td className=\"hideXS\">{driver.number}</td>\n            <td className=\"hideXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col>\n                  {driver.Driver.givenName}{\" \"}\n                  <p style={boldFont}>\n                    {driver.Driver.familyName.toUpperCase()}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"showXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col xs={6}>\n                  <p style={boldFont}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"hideXS\">{driver.Constructor.name}</td>\n            <td>\n              {driver.hasOwnProperty(\"Q1\")\n                ? driver.Q1 === \"\"\n                  ? \"-\"\n                  : driver.Q1\n                : \"-\"}\n            </td>\n            <td>{driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}</td>\n            <td>{driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default RaceQualifying;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { convertDate } from \"../../../helpers/Helpers\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  const getLocalRaceDate = (date, time) => {\n    const raceDate = new Date(date + \"T\" + time);\n    const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n    const minutes =\n      (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n    return hours + \":\" + minutes + \":00\";\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1>{raceInfo.raceName.toUpperCase()}</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{convertDate(raceInfo.date)}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag countryCode={eventCountryCode} height=\"100\" />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={14}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [circuitInformation, setCircuitInformation] = useState(null);\n  const [loadingWikiData, setLoadingWikiData] = useState(true);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGrandPrix(result.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${raceInfo.Circuit.circuitName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setCircuitInformation(result.query.pages);\n          setLoadingWikiData(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [raceInfo.Circuit.circuitId, raceInfo.Circuit.circuitName]);\n\n  return (\n    <div>\n      <Row className=\"text-center\">\n        <h1>{raceInfo.Circuit.circuitName}</h1>\n        <h3>\n          <CircleFlag countryCode={eventCountryCode} height=\"30\" />{\" \"}\n          {raceInfo.Circuit.Location.country}\n        </h3>\n        <h3>{raceInfo.Circuit.Location.locality}</h3>\n      </Row>\n\n      {loadingWikiData ? null : (\n        <Row>\n          <p style={{ textAlign: \"justify\" }}>\n            {circuitInformation[wikiPageId][\"extract\"]} (Source:{\" \"}\n            <a\n              href={`https://en.wikipedia.org/wiki/${circuitInformation[wikiPageId][\"title\"]}`}\n            >\n              Wikipedia\n            </a>\n            )\n          </p>\n        </Row>\n      )}\n\n      <Row>\n        <Col>\n          <Map\n            coordinates={[\n              raceInfo.Circuit.Location.lat,\n              raceInfo.Circuit.Location.long,\n            ]}\n            circuitName={raceInfo.Circuit.circuitName}\n            mapHeight={{ height: \"700px\" }}\n          />\n        </Col>\n        <Col style={{ marginTop: \"5%\" }}>\n          {loadingFastestLap || loadingFirstGrandPrix ? null : (\n            <>\n              <Row className=\"text-center\">\n                <h5 style={{ fontSize: \"30px\" }}>First Grand Prix</h5>\n                <h5>{firstGrandPrix}</h5>\n              </Row>\n              {fastestLap === undefined ? null : (\n                <div>\n                  <Row className=\"text-center\">\n                    <h5 style={{ fontSize: \"30px\" }}>Lap record</h5>\n                    <h5>{fastestLap.Results[0].FastestLap.Time.time}</h5>\n                    <h5 style={{ fontSize: \"25px\" }}>{fastestLap.season}</h5>\n                  </Row>\n                  <Row className=\"justify-content-center text-center\">\n                    <Col xs=\"auto\">\n                      <TeamColor\n                        constructorId={\n                          fastestLap.Results[0].Constructor.constructorId\n                        }\n                        height=\"50px\"\n                      />\n                    </Col>\n                    <Col xs={4}>\n                      <h5 style={{ fontSize: \"20px\" }}>\n                        {fastestLap.Results[0].Driver.givenName}{\" \"}\n                        <p style={boldFont}>\n                          {fastestLap.Results[0].Driver.familyName.toUpperCase()}\n                        </p>\n                      </h5>\n                    </Col>\n                    <Col xs={2}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          fastestLap.Results[0].Driver.nationality\n                        ].toLowerCase()}\n                        height={40}\n                        width={50}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"text-center\">\n                    <h5 style={{ fontSize: \"25px\" }}>\n                      {fastestLap.Results[0].Constructor.name}{\" \"}\n                    </h5>\n                  </Row>\n                </div>\n              )}\n            </>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","import React, { useState, useEffect } from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\nimport Row from \"react-bootstrap/Row\";\nimport ClockCountdown from \"../../Countdown/ClockCountdown\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  const [eventCountryCode, setEventCountryCode] = useState(null);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${raceInfo.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setEventCountryCode(result[0].alpha2Code.toLowerCase());\n        })\n        .catch((error) => {\n          setEventCountryCode(\n            CountriesCodeNationality[\n              raceInfo.Circuit.Location.country\n            ].toLowerCase()\n          );\n        });\n    };\n\n    fetchCountryCode();\n  }, [raceInfo.Circuit.Location.country]);\n\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"race\" title=\"Race\">\n          <RaceTab raceInfo={raceInfo} eventCountryCode={eventCountryCode} />\n\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : (\n            <Row className=\"justify-content-center text-center\">\n              <p></p>\n              <ClockCountdown date={raceInfo.date} time={raceInfo.time} />\n            </Row>\n          )}\n        </Tab>\n\n        <Tab eventKey=\"circuit\" title=\"Circuit\">\n          <CircuitTab raceInfo={raceInfo} eventCountryCode={eventCountryCode} />\n        </Tab>\n\n        {raceQualifying != null ? (\n          <Tab eventKey=\"qualifying\" title=\"Qualifying\">\n            <RaceQualifying raceQualifying={raceQualifying} />\n          </Tab>\n        ) : null}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport { Redirect } from \"react-router-dom\";\n\nconst FutureRace = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceInfo();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"500px\" }}>\n        {loadingRaceInfo || loadingRaceQualifying ? null : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <EventTabs\n              season={season}\n              round={round}\n              raceInfo={raceInfo}\n              raceQualifying={raceQualifying}\n            />\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default FutureRace;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport FutureRace from \"./FutureRace\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"500px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <FutureRace season={season} round={round} />\n        ) : (\n          <EventTabs\n            raceInfo={raceInfo}\n            raceClassification={raceClassification}\n            raceQualifying={raceQualifying}\n          />\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </>\n  );\n};\n\nexport default RaceResult;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea:  \"KR\"\n};\n","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\" aria-label=\"Github\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries' data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\" style={{ color: \"white\" }}>\n              REST Countries API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export function getLocalRaceDate(date, time) {\n  const raceDate = new Date(date + \"T\" + time);\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n  const minutes =\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n  return hours + \":\" + minutes + \":00\";\n}\n\nexport function convertDate(dateToConvert) {\n  const date = dateToConvert.split(\"-\");\n\n  return `${date[2]}/${date[1]}/${date[0]}`;\n}\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return (\n        <Col>\n          <h1>Race in progress</h1>\n          <h5>Waiting for race results</h5>\n        </Col>\n      );\n    } else {\n      return (\n        <>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{days}</h1>\n            <h5>DAYS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{hours}</h1>\n            <h5>HRS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{minutes}</h1>\n            <h5>MIN</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{seconds}</h1>\n            <h5>SEC</h5>\n          </Col>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n"],"sourceRoot":""}