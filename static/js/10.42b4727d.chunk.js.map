{"version":3,"sources":["../node_modules/react-bootstrap/esm/Alert.js","components/Calendar/RaceInformation.js","components/Calendar/Calendar.js","pages/SeasonCalendar.js","data/CountryCodeNationality.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","data/config.js"],"names":["DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","variant","show","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","className","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","RaceInformation","race","Row","Col","xs","lg","countryCode","CountriesCodeNationality","Circuit","Location","country","toLowerCase","height","style","marginBottom","to","season","round","raceName","toUpperCase","circuitName","convertDate","date","hasOwnProperty","getLocalRaceDate","time","Calendar","theme","useContext","ThemeContext","useState","sessionStorage","getItem","config","current_season","setSeason","seasonSchedule","setSeasonSchedule","seasonsYearsList","setSeasonsYearsList","loadingSeasonSchedule","setLoadingSchedule","useEffect","fetchSeasonSchedule","fetch","then","res","json","result","MRData","RaceTable","Races","Array","first_season","fill","map","_","i","reverse","Container","minHeight","Spinner","animation","Dropdown","Toggle","id","Menu","index","Item","text","target","textContent","setItem","responsive","SeasonSchedule","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","NavBar","setTheme","localStorage","bg","textDecoration","Brand","size","Collapse","marginTop","onChange","toggle","themeToggler","checked","href","md","textAlign","color","raceDate","Date","getHours","getMinutes","dateToConvert","split","previous_season_n_races","current_season_n_races"],"mappings":"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","file":"static/js/10.42b4727d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\n\r\nconst RaceInformation = ({ race }) => {\r\n  return (\r\n    <Row className=\"center-xs justify-content-between g-0\">\r\n      <Col xs={12} lg=\"auto\" className=\"text-center\">\r\n        <CircleFlag\r\n          countryCode={CountriesCodeNationality[\r\n            race.Circuit.Location.country\r\n          ].toLowerCase()}\r\n          height={75}\r\n          style={{ marginBottom: \"2%\" }}\r\n        />\r\n      </Col>\r\n\r\n      <Col xs={12} lg=\"auto\" className=\"align-self-center\">\r\n        <Link to={`/race/${race.season}/${race.round}`}>\r\n          <Alert variant=\"primary\">Round #{race.round}</Alert>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Col xs={12} lg={6} className=\"center-xs align-self-center\">\r\n        <h3>{race.raceName.toUpperCase()}</h3>\r\n        <h5>{race.Circuit.circuitName}</h5>\r\n      </Col>\r\n\r\n      <Col xs={12} lg={3} className=\"center-xs center align-self-center\">\r\n        <h5>{convertDate(race.date)}</h5>\r\n        <h5>\r\n          {race.hasOwnProperty(\"time\")\r\n            ? getLocalRaceDate(race.date, race.time)\r\n            : null}\r\n        </h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RaceInformation;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport RaceInformation from \"./RaceInformation\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Styles.css\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { config } from \"../../data/config\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst Calendar = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [season, setSeason] = useState(\r\n    sessionStorage.getItem(\"seasonScheduleInput\") !== null\r\n      ? sessionStorage.getItem(\"seasonScheduleInput\")\r\n      : config.current_season\r\n  );\r\n  const [seasonSchedule, setSeasonSchedule] = useState(null);\r\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\r\n  const [loadingSeasonSchedule, setLoadingSchedule] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSeasonSchedule = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setSeasonSchedule(result.MRData.RaceTable.Races);\r\n          setLoadingSchedule(false);\r\n        });\r\n    };\r\n\r\n    fetchSeasonSchedule();\r\n    setSeasonsYearsList(\r\n      Array(config.current_season - config.first_season + 1)\r\n        .fill()\r\n        .map((_, i) => config.first_season + i)\r\n        .reverse()\r\n    );\r\n  }, [season]);\r\n\r\n  const seasonYearChange = (text) => {\r\n    setSeason(text);\r\n    sessionStorage.setItem(\"seasonScheduleInput\", text);\r\n    setLoadingSchedule(true);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ minHeight: \"650px\" }}>\r\n      {loadingSeasonSchedule ? (\r\n        <Row className=\"justify-content-center text-center\">\r\n          <h1>{season} FORMULA 1</h1>\r\n          <Spinner animation=\"border\" />\r\n        </Row>\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center text-center\">\r\n            <h1>{season} FORMULA 1</h1>\r\n          </Row>\r\n\r\n          <Row\r\n            className=\"justify-content-center text-center\"\r\n            style={{ marginBottom: \"5px\" }}\r\n          >\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                className=\"main-btn\"\r\n                id=\"dropdown-basic\"\r\n                variant=\"secondary\"\r\n              >\r\n                {season}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dropdown-menu\">\r\n                {seasonsYearsList.map((season, index) => (\r\n                  <Dropdown.Item\r\n                    key={index}\r\n                    onClick={(e) => seasonYearChange(e.target.textContent)}\r\n                  >\r\n                    {season}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Table\r\n              className=\"standings-table table-striped\"\r\n              responsive\r\n              variant={theme}\r\n            >\r\n              <tbody>\r\n                {seasonSchedule.map((race, index) => (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <RaceInformation race={race} />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Calendar from \"../components/Calendar/Calendar\";\r\n\r\nconst SeasonSchedule = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Calendar />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeasonSchedule;\r\n","export const CountriesCodeNationality = {\r\n  British: \"GB\",\r\n  Finnish: \"FI\",\r\n  Dutch: \"NL\",\r\n  Mexican: \"MX\",\r\n  Spanish: \"ES\",\r\n  Australian: \"AU\",\r\n  Monegasque: \"MC\",\r\n  French: \"FR\",\r\n  German: \"DE\",\r\n  Japanese: \"JP\",\r\n  Canadian: \"CA\",\r\n  Italian: \"IT\",\r\n  Russian: \"RU\",\r\n  Austrian: \"AT\",\r\n  Swiss: \"CH\",\r\n  American: \"US\",\r\n  Thai: \"TH\",\r\n  \"New Zealander\": \"NZ\",\r\n  \"New Zealand\": \"NZ\",\r\n  Swedish: \"SE\",\r\n  Portuguese: \"PT\",\r\n  Brazilian: \"BR\",\r\n  Hungarian: \"HU\",\r\n  Argentine: \"AR\",\r\n  Belgian: \"BE\",\r\n  Belgium: \"BE\",\r\n  \"South African\": \"ZA\",\r\n  Danish: \"DK\",\r\n  Liechtensteiner: \"LI\",\r\n  \"Hong Kong\": \"HK\",\r\n  Irish: \"IE\",\r\n  Chilean: \"CL\",\r\n  Venezuelan: \"VE\",\r\n  Colombian: \"CO\",\r\n  Czech: \"CZ\",\r\n  Malaysia: \"MY\",\r\n  Indian: \"IN\",\r\n  Polish: \"PL\",\r\n  Indonesian: \"ID\",\r\n  Rhodesian: \"ZW\",\r\n  Russia: \"RU\",\r\n  Korea: \"KR\",\r\n  Argentina: \"AR\",\r\n  UAE: \"AE\",\r\n  Australia: \"AU\",\r\n  Austria: \"AT\",\r\n  Azerbaijan: \"AZ\",\r\n  Bahrain: \"BH\",\r\n  Brazil: \"BR\",\r\n  Canada: \"CA\",\r\n  China: \"CN\",\r\n  France: \"FR\",\r\n  Germany: \"DE\",\r\n  Hungary: \"HU\",\r\n  India: \"IN\",\r\n  Italy: \"IT\",\r\n  Japan: \"JP\",\r\n  Malyasia: \"MY\",\r\n  Malaysian: \"MY\",\r\n  Mexico: \"MX\",\r\n  Monaco: \"MC\",\r\n  Morocco: \"MA\",\r\n  Netherlands: \"NL\",\r\n  Portugal: \"PT\",\r\n  \"Saudi Arabia\": \"SA\",\r\n  Singapore: \"SG\",\r\n  \"South Africa\": \"ZA\",\r\n  Spain: \"ES\",\r\n  Sweden: \"SE\",\r\n  Switzerland: \"CH\",\r\n  Turkey: \"TR\",\r\n  UK: \"GB\",\r\n  USA: \"US\",\r\n  \"United States\": \"US\",\r\n  Qatar: \"QA\",\r\n  Chinese: \"CN\"\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport DayNightToggle from \"react-day-and-night-toggle\";\r\n\r\nconst NavBar = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const themeToggler = () => {\r\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(toggle);\r\n    localStorage.setItem(\"theme\", toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\r\n      <Container style={{ minHeight: \"40px\" }}>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"icon-link\">\r\n            <GiCheckeredFlag size={30} />\r\n          </Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Row className=\"g-2\">\r\n            <Col style={{ marginTop: \"15px\" }}>\r\n              <DayNightToggle\r\n                onChange={() => themeToggler()}\r\n                checked={theme === \"dark\"}\r\n                size={20}\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Navbar.Brand\r\n                className=\"icon-link\"\r\n                href=\"https://github.com/jdro10\"\r\n                aria-label=\"Github\"\r\n              >\r\n                <AiFillGithub size={25} />\r\n              </Navbar.Brand>\r\n            </Col>\r\n          </Row>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { BsBootstrap } from \"react-icons/bs\";\r\nimport { SiVisualstudiocode } from \"react-icons/si\";\r\nimport { IoLogoNpm } from \"react-icons/io\";\r\nimport { FaHtml5 } from \"react-icons/fa\";\r\nimport { FaCss3Alt } from \"react-icons/fa\";\r\nimport { SiLeaflet } from \"react-icons/si\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\r\n          <Col>\r\n            <GiCheckeredFlag size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaGithub size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaReact size={40} />\r\n          </Col>\r\n          <Col>\r\n            <IoLogoJavascript size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaHtml5 size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaCss3Alt size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <BsBootstrap size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiLeaflet size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <IoLogoNpm size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiVisualstudiocode size={40} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>API</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            All racing data is obtained through{\" \"}\r\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\r\n              Ergast API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Some drivers' and circuits' information are obtained through{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/w/api.php\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              Wikipedia API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>DISCLAIMER</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            This website was developed for learning and educational purposes\r\n            only.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Data displayed may be inaccurate. By using this website you\r\n            acknowledge this.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            The author disclaims all responsibility for any loss or damage\r\n            arising from the use of this website.\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={7}>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              This website is unofficial and is not associated in any way with\r\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\r\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\r\n              marks of Formula One Licensing B.V.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export function getLocalRaceDate(date, time) {\r\n  const raceDate = new Date(date + \"T\" + time);\r\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\r\n  const minutes =\r\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\r\n\r\n  return hours + \":\" + minutes;\r\n}\r\n\r\nexport function convertDate(dateToConvert) {\r\n  const date = dateToConvert.split(\"-\");\r\n\r\n  return `${date[2]}/${date[1]}/${date[0]}`;\r\n}","export const config = {\r\n  first_season: 1950,\r\n  current_season: 2022,\r\n  previous_season_n_races: 22,\r\n  current_season_n_races: 23,\r\n};\r\n"],"sourceRoot":""}