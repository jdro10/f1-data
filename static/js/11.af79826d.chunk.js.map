{"version":3,"sources":["components/ProfileStats/ProfileStats.js","components/Driver/Driver.js","pages/DriverPage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["boldFont","fontWeight","fontSize","ProfileStats","stats","firstGP","lastGP","Row","className","responsive","style","Col","xs","TeamColor","constructorId","Results","Constructor","height","name","wins","podiums","totalFastestLaps","poles","totalPoints","size","totalGrandPrix","raceName","season","totalLapsRaced","Driver","driverId","useState","setLastGP","setFirstGP","loading","setLoading","wikiPageId","setWikiPageId","driverRaces","setDriverRaces","driverPhoto","setDriverPhoto","driverNationality","setDriverNationality","driverInformation","setDriverInformation","loadingDriverRaces","setLoadingDriverRaces","loadingDriverStats","setLoadingDriverStats","driverStats","setDriverStats","useEffect","fetchDriverInformation","a","fetch","then","res","json","result","driverName","MRData","DriverTable","Drivers","url","split","nationality","method","Object","keys","query","pages","replace","catch","error","console","log","fetchDriverResults","RaceTable","Races","parseInt","length","filter","race","position","includes","grid","reduce","acc","current","points","FastestLap","rank","laps","Container","minHeight","Spinner","animation","lg","marginBottom","countryCode","CountriesCodeNationality","toLowerCase","hasOwnProperty","borderRadius","src","width","alt","textAlign","href","DriverPage","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","display","margin","backgroundColor","NavBar","bg","variant","Brand","to","textDecoration","Collapse","id","md","color","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"mappings":"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","file":"static/js/11.af79826d.chunk.js","sourcesContent":["import React from \"react\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { FaClock } from \"react-icons/fa\";\nimport { GiPodium } from \"react-icons/gi\";\nimport { GiPodiumWinner } from \"react-icons/gi\";\nimport { SiFastly } from \"react-icons/si\";\nimport { GiRaceCar } from \"react-icons/gi\";\n\nconst boldFont = {\n  fontWeight: \"600\",\n  fontSize: \"25px\",\n};\n\nconst fontSize = {\n  fontSize: \"25px\",\n};\n\nconst ProfileStats = ({ stats, firstGP, lastGP }) => {\n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Table responsive className=\"table-width\">\n          <tbody>\n            <tr>\n              <td style={boldFont}>Current/Last team</td>\n              <td className=\"text-end\" style={fontSize}>\n                <Row className=\"justify-content-end text-end\">\n                  <Col xs={1}>\n                    <TeamColor\n                      constructorId={\n                        lastGP.Results[0].Constructor.constructorId\n                      }\n                      height=\"42px\"\n                    />\n                  </Col>\n                  <Col xs=\"auto\">{lastGP.Results[0].Constructor.name}</Col>\n                </Row>\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Wins</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.wins} <GiPodiumWinner />\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Podiums</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.podiums} <GiPodium />\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Fastest laps</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.totalFastestLaps} <FaClock />\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Pole positions</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.poles} <SiFastly />\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Total points</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.totalPoints} <GiRaceCar size={30} />\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Total GPs entered</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.totalGrandPrix} <GiRaceCar size={30} />\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>First GP</td>\n              <td className=\"text-end\" style={fontSize}>\n                {firstGP.raceName} {firstGP.season}\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Last GP</td>\n              <td className=\"text-end\" style={fontSize}>\n                {lastGP.raceName + \" \" + lastGP.season}\n              </td>\n            </tr>\n            <tr>\n              <td style={boldFont}>Total laps raced</td>\n              <td className=\"text-end\" style={fontSize}>\n                {stats.totalLapsRaced} <GiRaceCar size={30} />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProfileStats;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { BsPersonFill } from \"react-icons/bs\";\nimport \"../SharedStyles/Table.css\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\nimport ProfileStats from \"../ProfileStats/ProfileStats\";\n\nconst Driver = ({ driverId }) => {\n  const [lastGP, setLastGP] = useState(null);\n  const [firstGP, setFirstGP] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [driverRaces, setDriverRaces] = useState(null);\n  const [driverPhoto, setDriverPhoto] = useState(null);\n  const [driverNationality, setDriverNationality] = useState(null);\n  const [driverInformation, setDriverInformation] = useState(null);\n  const [loadingDriverRaces, setLoadingDriverRaces] = useState(true);\n  const [loadingDriverStats, setLoadingDriverStats] = useState(true);\n  const [driverStats, setDriverStats] = useState({\n    wins: 0,\n    podiums: 0,\n    poles: 0,\n    totalPoints: 0,\n    totalFastestLaps: 0,\n    totalLapsRaced: 0,\n    totalGrandPrix: 0,\n  });\n\n  useEffect(() => {\n    const fetchDriverInformation = async () => {\n      await fetch(`https://ergast.com/api/f1/drivers/${driverId}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          const driverURL = result.MRData.DriverTable.Drivers[0].url;\n          const driverName = driverURL.split(\"/\")[4];\n          setDriverNationality(\n            result.MRData.DriverTable.Drivers[0].nationality\n          );\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${driverName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setDriverInformation(result.query.pages);\n          const driverName = result.query.pages[\n            Object.keys(result.query.pages)\n          ][\"title\"].replace(\" \", \"_\");\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?action=query&prop=pageimages&format=json&piprop=original&titles=${driverName}&origin=*`\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setDriverPhoto(result.query.pages);\n          setLoading(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    const fetchDriverResults = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/drivers/${driverId}/results.json?limit=1000`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setDriverRaces(result.MRData.RaceTable.Races);\n          setFirstGP(result.MRData.RaceTable.Races[0]);\n          setLastGP(\n            result.MRData.RaceTable.Races[\n              parseInt(result.MRData.RaceTable.Races.length - 1)\n            ]\n          );\n          setLoadingDriverRaces(false);\n        });\n    };\n\n    const driverStats = () => {\n      if (!loadingDriverRaces) {\n        const wins = driverRaces.filter(\n          (race) => race.Results[0].position === \"1\"\n        ).length;\n\n        const podiums = driverRaces.filter((race) =>\n          [\"1\", \"2\", \"3\"].includes(race.Results[0].position)\n        ).length;\n\n        const poles = driverRaces.filter(\n          (race) => race.Results[0].grid === \"1\"\n        ).length;\n\n        const totalPoints = driverRaces.reduce(\n          (acc, current) => acc + parseInt(current.Results[0].points),\n          0\n        );\n\n        const totalFastestLaps = driverRaces.filter(\n          (race) =>\n            race.Results[0].FastestLap &&\n            race.Results[0].FastestLap.rank === \"1\"\n        ).length;\n\n        const totalLapsRaced = driverRaces.reduce(\n          (acc, current) => acc + parseInt(current.Results[0].laps),\n          0\n        );\n\n        setDriverStats({\n          wins: wins,\n          podiums: podiums,\n          poles: poles,\n          totalPoints: totalPoints,\n          totalFastestLaps: totalFastestLaps,\n          totalLapsRaced: totalLapsRaced,\n          totalGrandPrix: driverRaces.length,\n        });\n        setLoadingDriverStats(false);\n      }\n    };\n\n    if (loading) {\n      fetchDriverInformation();\n      fetchDriverResults();\n    }\n\n    driverStats();\n  }, [driverId, loading, driverRaces, loadingDriverRaces]);\n\n  return (\n    <Container style={{ minHeight: \"500px\" }}>\n      {loading ? (\n        <Row className=\"justify-content-center text-center\">\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <>\n          <Row className=\"justify-content-center text-center\">\n            <Col xs={12} lg=\"auto\">\n              <h1\n                style={{\n                  fontWeight: \"700\",\n                  fontSize: \"60px\",\n                }}\n              >\n                {driverInformation[wikiPageId][\"title\"]}{\" \"}\n              </h1>\n            </Col>\n            <Col xs={12} lg=\"auto\" style={{ marginBottom: \"20px\" }}>\n              <CircleFlag\n                countryCode={CountriesCodeNationality[\n                  driverNationality\n                ].toLowerCase()}\n                height={66}\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col xs={12} lg={3} style={{ marginBottom: \"10px\" }}>\n              {driverPhoto[wikiPageId].hasOwnProperty(\"original\") ? (\n                <img\n                  style={{ borderRadius: \"10px\" }}\n                  src={driverPhoto[wikiPageId][\"original\"][\"source\"]}\n                  width=\"250px\"\n                  alt=\"driver\"\n                />\n              ) : (\n                <BsPersonFill size={150} />\n              )}\n            </Col>\n            <Col xs={12} lg={9}>\n              <p style={{ textAlign: \"justify\" }}>\n                {driverInformation[wikiPageId][\"extract\"]} (Source:{\" \"}\n                <a\n                  href={`https://en.wikipedia.org/wiki/${driverInformation[wikiPageId][\"title\"]}`}\n                >\n                  Wikipedia)\n                </a>\n              </p>\n            </Col>\n          </Row>\n          {loadingDriverStats ? (\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          ) : (\n            <ProfileStats\n              stats={driverStats}\n              firstGP={firstGP}\n              lastGP={lastGP}\n            />\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Driver;\n","import React from \"react\";\nimport Driver from \"../components/Driver/Driver\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useParams } from \"react-router-dom\";\n\nconst DriverPage = () => {\n  const { driverId } = useParams();\n\n  return (\n    <div>\n      <NavBar />\n      <Driver driverId={driverId} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default DriverPage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea:  \"KR\"\n};\n","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\" aria-label=\"Github\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries' data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\" style={{ color: \"white\" }}>\n              REST Countries API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}