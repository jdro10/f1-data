{"version":3,"sources":["components/Stats/Standings/ConstructorsStandings.js","components/Cards/GenericCard.js","components/Stats/MainFeed/PreviousRaceCard.js","components/Stats/MainFeed/NextRaceCard.js","components/Stats/MainFeed/PreviousRaceStats.js","components/Stats/MainFeed/DriversStandingsCard.js","components/Stats/MainFeed/ConstructorsStandingsCard.js","components/Stats/MainFeed/MainFeed.js","pages/HomePage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","components/Countdown/ClockCountdown.js","components/Stats/Standings/DriversStandings.js"],"names":["ConstructorsStandings","style","constructorsStandings","theme","useContext","ThemeContext","className","responsive","variant","map","constructor","index","position","xs","countryCode","CountriesCodeNationality","Constructor","nationality","toLowerCase","height","lg","constructorId","name","toUpperCase","wins","points","md","GenericCard","cardTitle","cardBody","cardFooter","cardHeight","Card","bg","text","Header","Body","Row","undefined","Footer","boldFont","fontWeight","PreviousRaceCard","lastRace","MRData","RaceTable","round","Races","raceName","Circuit","circuitName","convertDate","date","getLocalRaceDate","time","Location","country","marginTop","locality","to","season","Button","NextRaceCard","nextRace","marginBottom","driverName","margin","padding","display","PreviousRaceStats","numberOfRaces","useState","fastestLap","setFastestLap","polePosition","setPolePosition","loadingPolePosition","setLoadingPolePosition","history","useHistory","rowClick","driverId","push","useEffect","a","fetch","then","res","json","result","QualifyingResults","fetchPolePosition","Results","forEach","lap","FastestLap","rank","Table","slice","driver","cursor","onClick","Driver","Col","TeamColor","givenName","familyName","fontSize","Time","Q3","DriversStandingsCard","driversStandings","DriversStandings","overflow","overflowY","ConstructorsStandingsCard","cardsSpacing","MainFeed","setNextRace","setLastRace","setDriversStandings","loadingNextRace","setLoadingNextRace","loadingLastRace","setLoadingLastRace","setConstructorsStandings","loadingTeamsStandings","setLoadingTeamsStandings","loadingDriversStandings","setLoadingDriversStandings","fetchLastRaceResult","fetchNextRaceData","fetchConstructorsStandings","StandingsTable","StandingsLists","ConstructorStandings","fetchDriversStandings","DriverStandings","Container","minHeight","span","offset","caches","keys","cacheNames","cacheName","delete","window","location","reload","Spinner","animation","HomePage","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","width","backgroundColor","hasOwnProperty","NavBar","setTheme","localStorage","setItem","textDecoration","Brand","size","Collapse","onChange","toggle","themeToggler","checked","href","id","textAlign","color","raceDate","Date","getHours","getMinutes","dateToConvert","split","ClockCountdown","now","getTime","renderer","days","hours","minutes","seconds","completed","sm","permanentNumber","Constructors"],"mappings":"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","file":"static/js/7.a2150d3a.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst ConstructorsStandings = ({ style, constructorsStandings }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table className=\"standings-table\" responsive=\"sm\" variant={theme}>\n          <thead>\n            <tr>\n              <th>POS</th>\n              <th>NAME</th>\n              <th className=\"hideXS\">WINS</th>\n              <th>POINTS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr key={index}>\n                <td>{constructor.position}</td>\n                <td>\n                  <Row>\n                    <Col xs={2}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          constructor.Constructor.nationality\n                        ].toLowerCase()}\n                        height={20}\n                      />\n                    </Col>\n                    <Col xs={2} lg={1}>\n                      <TeamColor\n                        constructorId={constructor.Constructor.constructorId}\n                      />\n                    </Col>\n                    <Col xs={8} className=\"text-start\">\n                      <Row>{constructor.Constructor.name.toUpperCase()}</Row>\n                    </Col>\n                  </Row>\n                </td>\n                <td className=\"hideXS\">{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n","import React, { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst GenericCard = ({ cardTitle, cardBody, cardFooter, cardHeight }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <Card\n      style={{ height: cardHeight }}\n      className=\"text-center\"\n      bg={theme}\n      text={theme === \"light\" ? \"dark\" : \"light\"}\n    >\n      <Card.Header>\n        <b>{cardTitle}</b>\n      </Card.Header>\n      <Card.Body>\n        <Row className=\"justify-content-md-center\">{cardBody}</Row>\n      </Card.Body>\n      {cardFooter !== undefined ? (\n        <Card.Footer>{cardFooter}</Card.Footer>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default GenericCard;\n","import React, { useContext } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Button from \"react-bootstrap/Button\";\nimport { convertDate, getLocalRaceDate } from \"../../../helpers/Helpers\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst boldFont = {\n  fontWeight: 600,\n};\n\nconst PreviousRaceCard = ({ lastRace }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <GenericCard\n      cardTitle=\"PREVIOUS RACE\"\n      cardBody={\n        <div>\n          <h5>Round {lastRace.MRData.RaceTable.round}</h5>\n          <h1 style={boldFont}>\n            {lastRace.MRData.RaceTable.Races[0].raceName.toUpperCase()}\n          </h1>\n          <h5>{lastRace.MRData.RaceTable.Races[0].Circuit.circuitName}</h5>\n          <h6>{convertDate(lastRace.MRData.RaceTable.Races[0].date)}</h6>\n          <h6>\n            {getLocalRaceDate(\n              lastRace.MRData.RaceTable.Races[0].date,\n              lastRace.MRData.RaceTable.Races[0].time\n            )}\n          </h6>\n          <>\n            <br />\n            <CircleFlag\n              countryCode={CountriesCodeNationality[\n                lastRace.MRData.RaceTable.Races[0].Circuit.Location.country\n              ].toLowerCase()}\n              height={120}\n            />\n          </>\n          <h5 style={{ marginTop: \"5%\" }}>\n            {lastRace.MRData.RaceTable.Races[0].Circuit.Location.country}\n          </h5>\n          <h5>\n            {lastRace.MRData.RaceTable.Races[0].Circuit.Location.locality}\n          </h5>\n        </div>\n      }\n      cardFooter={\n        <Link\n          to={`/race/${lastRace.MRData.RaceTable.season}/${lastRace.MRData.RaceTable.round}`}\n        >\n          <Button variant={theme === \"light\" ? \"dark\" : \"light\"}>\n            Full race result\n          </Button>\n        </Link>\n      }\n      cardHeight=\"34rem\"\n    />\n  );\n};\n\nexport default PreviousRaceCard;\n","import React, { useContext } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Button from \"react-bootstrap/Button\";\nimport ClockCoutdown from \"../../Countdown/ClockCountdown\";\nimport { convertDate, getLocalRaceDate } from \"../../../helpers/Helpers\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n};\n\nconst NextRaceCard = ({ nextRace }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <GenericCard\n      cardTitle=\"NEXT RACE\"\n      cardBody={\n        <>\n          <h5>Round {nextRace.round}</h5>\n          <h1 style={boldFont}>{nextRace.raceName.toUpperCase()}</h1>\n          <h5>{nextRace.Circuit.circuitName}</h5>\n          <h6>{convertDate(nextRace.date)}</h6>\n          <h6>{getLocalRaceDate(nextRace.date, nextRace.time)}</h6>\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              nextRace.Circuit.Location.country\n            ].toLowerCase()}\n            height={100}\n          />\n          <p></p>\n          <ClockCoutdown date={nextRace.date} time={nextRace.time} />\n        </>\n      }\n      cardFooter={\n        <Link to={`/race/${nextRace.season}/${nextRace.round}`}>\n          <Button variant={theme === \"light\" ? \"dark\" : \"light\"}>\n            Race information\n          </Button>\n        </Link>\n      }\n      cardHeight=\"32rem\"\n    />\n  );\n};\n\nexport default NextRaceCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Table from \"react-bootstrap/Table\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport \"../../SharedStyles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  marginTop: \"15px\",\n  marginBottom: \"10px\",\n};\n\nconst driverName = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n  marginTop: \"50px\",\n};\n\nconst PreviousRaceStats = ({ lastRace, numberOfRaces }) => {\n  const { theme } = useContext(ThemeContext);\n  const [fastestLap, setFastestLap] = useState(null);\n  const [polePosition, setPolePosition] = useState(null);\n  const [loadingPolePosition, setLoadingPolePosition] = useState(true);\n\n  const history = useHistory();\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  useEffect(() => {\n    const getFastestLap = () => {\n      lastRace.MRData.RaceTable.Races[0].Results.forEach((lap) => {\n        if (lap.FastestLap && lap.FastestLap.rank === \"1\") {\n          setFastestLap(lap);\n          return;\n        }\n      });\n    };\n\n    const fetchPolePosition = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${lastRace.MRData.RaceTable.season}/${lastRace.MRData.RaceTable.round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setPolePosition(\n            result.MRData.RaceTable.Races[0].QualifyingResults[0]\n          );\n          setLoadingPolePosition(false);\n        });\n    };\n\n    fetchPolePosition();\n    getFastestLap();\n  }, [\n    lastRace.MRData.RaceTable.season,\n    lastRace.MRData.RaceTable.round,\n    lastRace.MRData.RaceTable.Races,\n  ]);\n\n  return (\n    <GenericCard\n      cardTitle=\"PREVIOUS RACE\"\n      cardBody={\n        <div>\n          <h4 style={driverName}>PODIUM</h4>\n          <Table responsive className=\"table-hover\" variant={theme}>\n            <tbody className=\"justify-content-center\">\n              {lastRace.MRData.RaceTable.Races[0].Results.slice(0, 3).map(\n                (driver, index) => (\n                  <tr\n                    key={index}\n                    className=\"align-middle\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => rowClick(driver.Driver.driverId)}\n                  >\n                    <td>{driver.position}</td>\n                    <td>\n                      <Row>\n                        <Col xs={2} lg={1} className=\"align-self-center\">\n                          <CircleFlag\n                            countryCode={CountriesCodeNationality[\n                              driver.Driver.nationality\n                            ].toLowerCase()}\n                            height={20}\n                          />\n                        </Col>\n                        <Col xs={1}>\n                          <TeamColor\n                            constructorId={driver.Constructor.constructorId}\n                            height=\"42px\"\n                          />\n                        </Col>\n                        <Col xs={8} className=\"text-start\">\n                          <Row>\n                            <Col className=\"hideXS\">\n                              {driver.Driver.givenName}{\" \"}\n                              <p style={driverName}>\n                                {driver.Driver.familyName.toUpperCase()}\n                              </p>\n                            </Col>\n                            <Col className=\"showXS\">\n                              <p style={driverName}>\n                                {driver.Driver.familyName.toUpperCase()}\n                              </p>\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col style={{ fontSize: \"13px\" }}>\n                              {driver.Constructor.name}\n                            </Col>\n                          </Row>\n                        </Col>\n                      </Row>\n                    </td>\n                    <td>+{driver.points}</td>\n                  </tr>\n                )\n              )}\n            </tbody>\n          </Table>\n          <h4 style={boldFont}>FASTEST LAP / POLE POSITION</h4>\n          <Table responsive className=\"table-hover\" variant={theme}>\n            <tbody>\n              {fastestLap === null ? null : (\n                <tr\n                  className=\"align-middle\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => rowClick(fastestLap.Driver.driverId)}\n                >\n                  <td>FL</td>\n                  <td>\n                    <Row>\n                      <Col xs={2} lg={1} className=\"align-self-center\">\n                        <CircleFlag\n                          countryCode={CountriesCodeNationality[\n                            fastestLap.Driver.nationality\n                          ].toLowerCase()}\n                          height={20}\n                        />\n                      </Col>\n                      <Col xs={1}>\n                        <TeamColor\n                          constructorId={fastestLap.Constructor.constructorId}\n                          height=\"42px\"\n                        />\n                      </Col>\n                      <Col xs={8} className=\"text-start\">\n                        <Row>\n                          <Col className=\"hideXS\">\n                            {fastestLap.Driver.givenName}{\" \"}\n                            <p style={driverName}>\n                              {fastestLap.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n                          <Col className=\"showXS\">\n                            <p style={driverName}>\n                              {fastestLap.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col style={{ fontSize: \"13px\" }}>\n                            {fastestLap.Constructor.name}\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </td>\n                  <td>{fastestLap.FastestLap.Time.time}</td>\n                </tr>\n              )}\n              {loadingPolePosition ? null : (\n                <tr\n                  className=\"align-middle\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => rowClick(polePosition.Driver.driverId)}\n                >\n                  <td>PP</td>\n                  <td>\n                    <Row>\n                      <Col xs={2} lg={1} className=\"align-self-center\">\n                        <CircleFlag\n                          countryCode={CountriesCodeNationality[\n                            polePosition.Driver.nationality\n                          ].toLowerCase()}\n                          height={20}\n                        />\n                      </Col>\n                      <Col xs={1}>\n                        <TeamColor\n                          constructorId={polePosition.Constructor.constructorId}\n                          height=\"42px\"\n                        />\n                      </Col>\n                      <Col xs={8} className=\"text-start\">\n                        <Row>\n                          <Col className=\"hideXS\">\n                            {polePosition.Driver.givenName}{\" \"}\n                            <p style={driverName}>\n                              {polePosition.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n                          <Col className=\"showXS\">\n                            <p style={driverName}>\n                              {polePosition.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col style={{ fontSize: \"13px\" }}>\n                            {polePosition.Constructor.name}\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </td>\n                  <td>{polePosition.Q3}</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      }\n      cardFooter={\n        <h4>\n          Round: {lastRace.MRData.RaceTable.round} / {numberOfRaces}\n        </h4>\n      }\n      cardHeight=\"34rem\"\n    />\n  );\n};\n\nexport default PreviousRaceStats;\n","import React, { useContext } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport DriversStandings from \"../Standings/DriversStandings\";\nimport Button from \"react-bootstrap/Button\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst DriversStandingsCard = ({ driversStandings }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <GenericCard\n      cardTitle=\"DRIVERS' STANDINGS\"\n      cardBody={\n        <DriversStandings\n          style={{\n            overflow: \"hidden\",\n            overflowY: \"scroll\",\n            height: \"415px\",\n          }}\n          driversStandings={driversStandings}\n        />\n      }\n      cardHeight=\"34rem\"\n      cardFooter={\n        <Link to=\"/standings\">\n          <Button variant={theme === \"light\" ? \"dark\" : \"light\"}>\n            Full standings\n          </Button>\n        </Link>\n      }\n    />\n  );\n};\n\nexport default DriversStandingsCard;\n","import React, { useContext } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport ConstructorsStandings from \"../Standings/ConstructorsStandings\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst ConstructorsStandingsCard = ({ constructorsStandings }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <GenericCard\n      cardTitle=\"CONSTRUCTORS' STANDINGS\"\n      cardBody={\n        <ConstructorsStandings\n          style={{\n            overflow: \"hidden\",\n            overflowY: \"scroll\",\n            height: \"415px\",\n          }}\n          constructorsStandings={constructorsStandings}\n        />\n      }\n      cardFooter={\n        <Link to=\"/standings\">\n          <Button variant={theme === \"light\" ? \"dark\" : \"light\"}>\n            Full standings\n          </Button>\n        </Link>\n      }\n      cardHeight=\"34rem\"\n    />\n  );\n};\n\nexport default ConstructorsStandingsCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport PreviousRaceCard from \"../MainFeed/PreviousRaceCard\";\nimport NextRaceCard from \"./NextRaceCard\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport PreviousRaceStats from \"./PreviousRaceStats\";\nimport DriversStandingsCard from \"./DriversStandingsCard\";\nimport ConstructorsStandingsCard from \"./ConstructorsStandingsCard\";\nimport { FiRefreshCcw } from \"react-icons/fi\";\nimport Button from \"react-bootstrap/Button\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\nimport \"./Styles.css\";\n\nconst cardsSpacing = {\n  marginBottom: \"10px\",\n};\n\nconst MainFeed = () => {\n  const TOTAL_NUMBER_OF_RACES = \"22\";\n  const { theme } = useContext(ThemeContext);\n  const [nextRace, setNextRace] = useState(null);\n  const [lastRace, setLastRace] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [loadingNextRace, setLoadingNextRace] = useState(true);\n  const [loadingLastRace, setLoadingLastRace] = useState(true);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingTeamsStandings, setLoadingTeamsStandings] = useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchLastRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/current/last/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setLastRace(result);\n          setLoadingLastRace(false);\n        });\n    };\n\n    const fetchNextRaceData = async (round) => {\n      await fetch(`https://ergast.com/api/f1/current/next.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setNextRace(result.MRData.RaceTable.Races[0]);\n          setLoadingNextRace(false);\n        });\n    };\n\n    const fetchConstructorsStandings = async () => {\n      await fetch(`https://ergast.com/api/f1/current/constructorStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setConstructorsStandings(\n            result.MRData.StandingsTable.StandingsLists[0].ConstructorStandings\n          );\n          setLoadingTeamsStandings(false);\n        });\n    };\n\n    const fetchDriversStandings = async () => {\n      await fetch(`https://ergast.com/api/f1/current/driverStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setDriversStandings(\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\n          );\n          setLoadingDriversStandings(false);\n        });\n    };\n\n    fetchLastRaceResult();\n    fetchNextRaceData();\n    fetchDriversStandings();\n    fetchConstructorsStandings();\n  }, []);\n\n  const refreshCache = () => {\n    caches.keys().then(function (cacheNames) {\n      cacheNames.forEach(function (cacheName) {\n        caches.delete(cacheName);\n      });\n    });\n\n    window.location.reload();\n  };\n\n  return (\n    <Container style={{ minHeight: \"500px\" }}>\n      <Row className=\"justify-content-center text-center\">\n        <Col xs={{ span: 8, offset: 2 }}>\n          <h1>\n            {loadingLastRace ? null : lastRace.MRData.RaceTable.season} FORMULA\n            ONE\n          </h1>\n        </Col>\n        <Col xs={2} className=\"refresh-button text-end\">\n          <Button\n            onClick={() => refreshCache()}\n            variant={theme === \"dark\" ? \"light\" : \"dark\"}\n          >\n            <FiRefreshCcw />\n          </Button>\n        </Col>\n      </Row>\n      {loadingLastRace || loadingNextRace ? (\n        <Row className=\"justify-content-center text-center\">\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <>\n          <Row className=\"justify-content-center text-center\">\n            <Col lg={12} style={cardsSpacing}>\n              <NextRaceCard nextRace={nextRace} />\n            </Col>\n            <Col xs={12} lg={6} style={cardsSpacing}>\n              <PreviousRaceCard lastRace={lastRace} />\n            </Col>\n            <Col xs={12} lg={6} style={cardsSpacing}>\n              <PreviousRaceStats\n                lastRace={lastRace}\n                numberOfRaces={TOTAL_NUMBER_OF_RACES}\n              />\n            </Col>\n          </Row>\n          {loadingDriversStandings || loadingTeamsStandings ? (\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          ) : (\n            <Row>\n              <Col style={cardsSpacing}>\n                <DriversStandingsCard driversStandings={driversStandings} />\n              </Col>\n              <Col style={cardsSpacing}>\n                <ConstructorsStandingsCard\n                  constructorsStandings={constructorsStandings}\n                />\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default MainFeed;\n","import React from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport MainFeed from \"../components/Stats/MainFeed/MainFeed\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <NavBar />\n      <MainFeed />\n      <Footer />\n    </>\n  );\n};\n\nexport default HomePage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n            <Col>\n              <Navbar.Brand className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export function getLocalRaceDate(date, time) {\n  const raceDate = new Date(date + \"T\" + time);\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n  const minutes =\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n  return hours + \":\" + minutes + \":00\";\n}\n\nexport function convertDate(dateToConvert) {\n  const date = dateToConvert.split(\"-\");\n\n  return `${date[2]}/${date[1]}/${date[0]}`;\n}\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return (\n        <Col>\n          <h1>Race in progress</h1>\n          <h5>Waiting for race results</h5>\n        </Col>\n      );\n    } else {\n      return (\n        <>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{days}</h1>\n            <h5>DAYS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{hours}</h1>\n            <h5>HRS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{minutes}</h1>\n            <h5>MIN</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{seconds}</h1>\n            <h5>SEC</h5>\n          </Col>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div style={style}>\n      <Table\n        className=\"table-hover standings-table\"\n        responsive=\"xs\"\n        variant={theme}\n      >\n        <thead>\n          <tr>\n            <th>POS</th>\n            <th className=\"hideXS\">NO</th>\n            <th>NAME/TEAM</th>\n            <th className=\"hideXS\">WINS</th>\n            <th>POINTS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr\n              key={index}\n              className=\"align-middle\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\n              <td>\n                <Row className=\"g-0\">\n                  <Col xs={2} lg={1} className=\"align-self-center\">\n                    <CircleFlag\n                      countryCode={CountriesCodeNationality[\n                        driver.Driver.nationality\n                      ].toLowerCase()}\n                      height={20}\n                    />\n                  </Col>\n                  <Col xs={2} lg={1}>\n                    <TeamColor\n                      constructorId={driver.Constructors[0].constructorId}\n                      height=\"42px\"\n                    />\n                  </Col>\n                  <Col xs={8} className=\"text-start\">\n                    <Row>\n                      <Col className=\"showXS\">\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                      <Col className=\"hideXS\">\n                        {driver.Driver.givenName}{\" \"}\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col style={{ fontSize: \"13px\" }}>\n                        {driver.Constructors[0].name}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n"],"sourceRoot":""}