{"version":3,"sources":["components/Classifications/RaceClassification.js","components/Classifications/QualifyingClassification.js","components/Race/RaceInformation.js","components/Map/Map.js","components/Circuit/CircuitInformation.js","components/Circuit/Circuit.js","data/LineColors.js","components/Laps/Laps.js","components/Race/Event.js","components/Race/FutureRace.js","components/Race/Race.js","pages/RaceResult.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","components/Countdown/ClockCountdown.js"],"names":["boldFont","fontWeight","margin","padding","display","RaceClassification","raceClassification","history","useHistory","theme","useContext","ThemeContext","Table","className","responsive","style","overflow","marginTop","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","number","Row","Col","xs","TeamColor","constructorId","Constructor","height","md","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","time","FastestLap","rank","points","grid","QualifyingClassification","qualifyingClassification","hasOwnProperty","code","substring","Q1","Q2","Q3","RaceInformation","raceInfo","eventCountryCode","href","url","raceName","round","convertDate","date","getLocalRaceDate","countryCode","CountriesCodeNationality","toLowerCase","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","Marker","Popup","CircuitInformation","firstGP","lastGP","lastGPDetails","fastestLap","raceRowClick","season","window","location","reload","calculateCircuitLength","speed","timeSplitted","split","secondsSplitted","timeInSeconds","parseInt","parseFloat","length","Math","Results","AverageSpeed","wikiConstructorLink","open","Circuit","setFirstGP","setLastGP","setLastGPDetails","setFastestLap","wikiPageId","setWikiPageId","circuitInformation","setCircuitInformation","loadingWikiData","setLoadingWikiData","loadingFirstGP","setLoadingFirstGP","loadingFastestLap","setLoadingFastestLap","loadingLastGPDetails","setLoadingLastGPDetails","fetch","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","method","Object","keys","query","pages","Location","country","locality","textAlign","lat","long","mapHeight","Spinner","animation","LineColors","Laps","labels","datasets","data","setData","loadingLaps","setLoadingLaps","a","lapsPerDriver","fetchLaps","options","plugins","legend","scales","y","reverse","ticks","color","font","size","stepSize","x","optionsMobile","lapsObj","lapsNumber","Timings","entries","label","fill","backgroundColor","borderColor","minWidth","width","maxWidth","Event","id","role","type","ClockCountdown","minHeight","FutureRace","setRaceInfo","qualifying","setQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingQualifying","setLoadingQualifying","fetchRaceInfo","fetchQualifying","QualifyingResults","to","Race","setRaceClassification","loadingRaceResult","setLoadingRaceResult","fetchRaceResult","fetchRaceQualifying","Container","fluid","RaceResult","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","NavBar","setTheme","localStorage","setItem","bg","textDecoration","Brand","Collapse","onChange","toggle","themeToggler","checked","raceDate","Date","getHours","getMinutes","dateToConvert","now","getTime","renderer","days","hours","minutes","seconds","completed","lg"],"mappings":"iRAUMA,EAAW,CACfC,WAAY,IACZC,OAAQ,MACRC,QAAS,MACTC,QAAS,UAwGIC,EAtGY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACtBC,EAAUC,cACRC,EAAUC,qBAAWC,KAArBF,MAMR,OACE,qCACE,eAACG,EAAA,EAAD,CACEC,UAAU,4CACVC,WAAW,KACXC,MAAO,CAAEC,SAAU,SAAUC,UAAW,QACxCC,QAAST,EAJX,UAME,gCACE,+BACE,oBAAII,UAAU,cAAd,iBACA,oBAAIA,UAAU,qBAAd,oBACA,wCACA,oBAAIA,UAAU,SAAd,kBACA,oBAAIA,UAAU,SAAd,kBACA,8CACA,qCACA,oBAAIA,UAAU,SAAd,kBACA,oBAAIA,UAAU,SAAd,sBAIJ,gCACGP,EAAmBa,KAAI,SAACC,EAAQC,GAAT,OACtB,qBAEEN,MAAO,CAAEO,OAAQ,WACjBC,QAAS,kBA/BHC,EA+BkBJ,EAAOK,OAAOD,cA9BhDjB,EAAQmB,KAAR,kBAAwBF,IADT,IAACA,GAgCNX,UAAU,eAJZ,UAME,oBAAIA,UAAU,cAAd,SAA6BO,EAAOO,WACpC,oBAAId,UAAU,qBAAd,SAAoCO,EAAOQ,SAC3C,6BACE,eAACC,EAAA,EAAD,CAAKhB,UAAU,MAAf,UACE,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,SAAtB,SACE,cAACmB,EAAA,EAAD,CACEC,cAAeb,EAAOc,YAAYD,cAClCE,OAAO,WAIX,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,SAAtB,SACE,cAACmB,EAAA,EAAD,CACEC,cAAeb,EAAOc,YAAYD,kBAItC,eAACH,EAAA,EAAD,CAAKC,GAAI,EAAGK,GAAI,GAAhB,UACGhB,EAAOK,OAAOY,UAAW,IAC1B,mBAAGtB,MAAOf,EAAV,SACGoB,EAAOK,OAAOa,WAAWC,wBAKlC,oBAAI1B,UAAU,SAAd,SAAwBO,EAAOc,YAAYM,OAC3C,oBAAI3B,UAAU,SAAd,SAAwBO,EAAOqB,OAC/B,kCACmBC,IAAhBtB,EAAOuB,MACc,aAAlBvB,EAAOwB,OACLxB,EAAOuB,KAAKE,KAEdzB,EAAOwB,SAGZxB,EAAO0B,YAAyC,MAA3B1B,EAAO0B,WAAWC,KACtC,6BACE,eAAClB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAaX,EAAO4B,SAEpB,cAAClB,EAAA,EAAD,UACE,cAAC,IAAD,WAKN,6BAAKV,EAAO4B,SAGd,oBAAInC,UAAU,SAAd,SAAwBO,EAAO6B,OAC/B,oBAAIpC,UAAU,SAAd,SACmB,MAAhBO,EAAO6B,KACJ,GAAK7B,EAAOO,SACZP,EAAO6B,KAAO7B,EAAOO,aA1DtBN,WAgEb,cAAC,IAAD,IAxFF,iCChBErB,EAAW,CACfC,WAAY,IACZC,OAAQ,MACRC,QAAS,MACTC,QAAS,UAyFI8C,EAtFkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,yBAC5B5C,EAAUC,cACRC,EAAUC,qBAAWC,KAArBF,MAMR,OACE,eAACG,EAAA,EAAD,CACEE,WAAW,KACXD,UAAU,4CACVK,QAAST,EACTM,MAAO,CAAEE,UAAW,QAJtB,UAME,gCACE,+BACE,oBAAIJ,UAAU,cAAd,iBACA,oBAAIA,UAAU,qBAAd,oBACA,wCACA,oBAAIA,UAAU,SAAd,kBACA,oBAAIA,UAAU,cAAd,gBACA,oBAAIA,UAAU,cAAd,gBACA,oBAAIA,UAAU,cAAd,qBAIJ,gCACGsC,EAAyBhC,KAAI,SAACC,EAAQC,GAAT,OAC5B,qBAEEN,MAAO,CAAEO,OAAQ,WACjBC,QAAS,kBA5BDC,EA4BgBJ,EAAOK,OAAOD,cA3B9CjB,EAAQmB,KAAR,kBAAwBF,IADT,IAACA,GAyBV,UAKE,oBAAIX,UAAU,cAAd,SAA6BO,EAAOO,WACpC,oBAAId,UAAU,qBAAd,SAAoCO,EAAOQ,SAC3C,oBAAIf,UAAU,SAAd,SACE,eAACgB,EAAA,EAAD,CAAKhB,UAAU,MAAf,UACE,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAWC,cAAeb,EAAOc,YAAYD,kBAG/C,eAACH,EAAA,EAAD,WACGV,EAAOK,OAAOY,UAAW,IAC1B,mBAAGtB,MAAOf,EAAV,SACGoB,EAAOK,OAAOa,WAAWC,wBAKlC,oBAAI1B,UAAU,SAAd,SACE,eAACgB,EAAA,EAAD,CAAKhB,UAAU,MAAf,UACE,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAWC,cAAeb,EAAOc,YAAYD,kBAG/C,cAACH,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,mBAAGhB,MAAOf,EAAV,SACIoB,EAAOK,OAAO2B,eAAe,QAE3BhC,EAAOK,OAAO4B,KADdjC,EAAOK,OAAOa,WAAWgB,UAAU,EAAG,GAAGf,uBAMrD,oBAAI1B,UAAU,SAAd,SAAwBO,EAAOc,YAAYM,OAC3C,oBAAI3B,UAAU,cAAd,SACGO,EAAOgC,eAAe,MACL,KAAdhC,EAAOmC,GACL,IACAnC,EAAOmC,GACT,MAEN,oBAAI1C,UAAU,cAAd,SACGO,EAAOgC,eAAe,MAAQhC,EAAOoC,GAAK,MAE7C,oBAAI3C,UAAU,cAAd,SACGO,EAAOgC,eAAe,MAAQhC,EAAOqC,GAAK,QA/CxCpC,Y,wBCOFqC,EA/CS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBACnC,OACE,qCACE,cAAC/B,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,cAACiB,EAAA,EAAD,CAAKM,GAAG,OAAR,SACE,mBAAGvB,UAAU,YAAYgD,KAAMF,EAASG,IAAxC,SACE,6BAAKH,EAASI,SAASxB,sBAK7B,cAACV,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,cAACiB,EAAA,EAAD,CAAKM,GAAG,OAAR,SACE,wCAAWuB,EAASK,aAIxB,cAACnC,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,cAACiB,EAAA,EAAD,CAAKM,GAAG,OAAR,SACE,6BAAK6B,YAAYN,EAASO,YAI9B,cAACrC,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,cAACiB,EAAA,EAAD,CAAKM,GAAG,OAAR,SACE,6BACGuB,EAASP,eAAe,QACrBe,YAAiBR,EAASO,KAAMP,EAASd,MACzC,WAKV,cAAChB,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,cAACiB,EAAA,EAAD,CAAKM,GAAG,OAAR,SACE,cAAC,IAAD,CACEgC,YAAaC,IACXT,GACAU,cACFnC,OAAO,gB,6CCVJoC,EA/BH,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC1B,EAAsBC,mBAAS,MAA/B,mBAAOvD,EAAP,KAAYwD,EAAZ,KAUA,OARAC,qBAAU,WACJzD,GACF0D,aAAY,WACV1D,EAAI2D,mBACH,OAEJ,CAAC3D,IAGF,eAAC4D,EAAA,EAAD,CACEC,OAAQR,EACRS,KAAM,GACNC,iBAAiB,EACjBC,YAAaR,EAJf,UAME,cAACS,EAAA,EAAD,CACEC,YAAY,yEACZvB,IAAI,uDAEN,cAACwB,EAAA,EAAD,CAAQ3D,SAAU6C,EAAlB,SACE,eAACe,EAAA,EAAD,WACGd,EADH,IACgB,uBADhB,IACwBD,EAAY,GADpC,MAC2CA,EAAY,Y,QCpBzDxE,EAAW,CACfC,WAAY,IACZC,OAAQ,MACRC,QAAS,MACTC,QAAS,UA6KIoF,EA1KY,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACtDrF,EAAUC,cACRC,EAAUC,qBAAWC,KAArBF,MAUFoF,EAAe,SAACC,EAAQ9B,GAC5BzD,EAAQmB,KAAR,gBAAsBoE,EAAtB,YAAgC9B,IAChC+B,OAAOC,SAASC,UAGZC,EAAyB,SAACC,EAAOtD,GACrC,IAAMuD,EAAevD,EAAKwD,MAAM,KAC1BC,EAAkBzD,EAAKwD,MAAM,KAE7BE,EACJC,SAA2B,GAAlBJ,EAAa,IACtBI,SAASJ,EAAa,IACtBK,WAAWH,EAAgB,GAAK,KAG5BI,EADuC,IAApBD,WAAWN,GAAiB,KACnBI,EAAiB,IAEnD,OAAOI,KAAK3C,MAAe,IAAT0C,GAAiB,KAGrC,OACE,cAAC9F,EAAA,EAAD,CACEE,YAAU,EACVD,UAAU,4CACVK,QAAST,EACTM,MAAO,CAAEE,UAAW,QAJtB,SAME,kCACE,+BACE,oBAAIJ,UAAU,YAAd,+BACA,qBACEA,UAAU,kCACVU,QAAS,kBAAMsE,EAAaJ,EAAQK,OAAQL,EAAQzB,QAFtD,UAIGyB,EAAQK,OAJX,IAIoBL,EAAQ1B,oBAIXrB,IAAlBiD,EAA8B,KAC7B,+BACE,oBAAI9E,UAAU,YAAd,gCACA,qBACEA,UAAU,iCACVU,QAAS,kBACPsE,EAAaF,EAAcG,OAAQH,EAAc3B,QAHrD,UAMG2B,EAAcG,OANjB,IAM0BH,EAAc5B,oBAK5BrB,IAAfkD,EAA2B,KAC1B,qCACE,+BACE,oBAAI/E,UAAU,YAAd,mBACA,qBAAIA,UAAU,qBAAd,UACG8E,EAAciB,QAAQ,GAAGnE,KAD5B,KACoCkD,EAAcG,OADlD,UAIF,+BACE,oBAAIjF,UAAU,YAAd,4BACA,qBAAIA,UAAU,qBAAd,UACG8F,KAAK3C,MACJwC,SAASb,EAAciB,QAAQ,GAAGnE,MAChCyD,EACEO,WACEf,EAAOkB,QAAQ,GAAG9D,WAAW+D,aAAaV,OAE5CT,EAAOkB,QAAQ,GAAG9D,WAAWH,KAAKE,MAEpC,KACA,IAAM,IAVZ,OAWO8C,EAAcG,OAXrB,UAcF,+BACE,oBAAIjF,UAAU,YAAd,6BACA,qBAAIA,UAAU,qBAAd,UACGqF,EACCO,WAAWf,EAAOkB,QAAQ,GAAG9D,WAAW+D,aAAaV,OACrDT,EAAOkB,QAAQ,GAAG9D,WAAWH,KAAKE,MACjC,IAJL,WAQF,+BACE,oBAAIhC,UAAU,YAAd,iDACA,qBACEA,UAAU,sCACVU,QAAS,kBACPsE,EAAaD,EAAWE,OAAQF,EAAW5B,QAH/C,UAMG4B,EAAWgB,QAAQ,GAAG9D,WAAWH,KAAKE,KANzC,KAOG+C,EAAWE,OAPd,UAUF,+BACE,oBAAIjF,UAAU,YAAd,4BACA,qBACEA,UAAU,iCACVU,QAAS,kBACPsE,EAAaD,EAAWE,OAAQF,EAAW5B,QAH/C,UAMG4B,EAAWgB,QAAQ,GAAG9D,WAAW+D,aAAaV,MANjD,UAOGD,EACCO,WACEb,EAAWgB,QAAQ,GAAG9D,WAAW+D,aAAaV,OAEhDP,EAAWgB,QAAQ,GAAG9D,WAAWH,KAAKE,MACrC,IAZL,YAgBF,+BACE,oBAAIhC,UAAU,YAAd,qBACA,qBACEA,UAAU,yBACVU,QAAS,kBAhICC,EAiIOoE,EAAWgB,QAAQ,GAAGnF,OAAOD,cAhI1DjB,EAAQmB,KAAR,kBAAwBF,IADH,IAACA,GA8HZ,UAMGoE,EAAWgB,QAAQ,GAAGnF,OAAOY,UAAW,IACzC,mBAAGtB,MAAOf,EAAV,SACG4F,EAAWgB,QAAQ,GAAGnF,OAAOa,WAAWC,sBAI/C,+BACE,oBAAI1B,UAAU,YAAd,mBACA,oBACEA,UAAU,yBACVU,QAAS,kBA1IMuF,EA2IOlB,EAAWgB,QAAQ,GAAG1E,YAAY4B,SA1IpEiC,OAAOgB,KAAKD,EAAqB,UADP,IAACA,GAwIjB,SAME,eAACjF,EAAA,EAAD,CAAKhB,UAAU,mCAAf,UACE,cAACiB,EAAA,EAAD,CAAKjB,UAAU,oBAAoBkB,GAAG,OAAtC,SACE,cAACC,EAAA,EAAD,CACEC,cACE2D,EAAWgB,QAAQ,GAAG1E,YAAYD,kBAKxC,cAACH,EAAA,EAAD,CAAKC,GAAG,OAAR,SAAgB6D,EAAWgB,QAAQ,GAAG1E,YAAYM,wBCxBrDwE,EA7IC,SAAC,GAAoC,IAAlCrD,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAC3B,EAA8Bc,mBAAS,MAAvC,mBAAOe,EAAP,KAAgBwB,EAAhB,KACA,EAA4BvC,mBAAS,MAArC,mBAAOgB,EAAP,KAAewB,EAAf,KACA,EAA0CxC,mBAAS,MAAnD,mBAAOiB,EAAP,KAAsBwB,EAAtB,KACA,EAAoCzC,mBAAS,MAA7C,mBAAOkB,EAAP,KAAmBwB,EAAnB,KACA,EAAoC1C,mBAAS,MAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KACA,EAAoD5C,mBAAS,MAA7D,mBAAO6C,EAAP,KAA2BC,EAA3B,KACA,EAA8C9C,oBAAS,GAAvD,mBAAO+C,EAAP,KAAwBC,EAAxB,KACA,EAA4ChD,oBAAS,GAArD,mBAAOiD,EAAP,KAAuBC,EAAvB,KACA,EAAkDlD,oBAAS,GAA3D,mBAAOmD,EAAP,KAA0BC,EAA1B,KACA,EAAwDpD,oBAAS,GAAjE,mBAAOqD,EAAP,KAA6BC,EAA7B,KAwEA,OAtEApD,qBAAU,WAENqD,MAAM,sCAAD,OACmCtE,EAASqD,QAAQkB,UADpD,4BAGFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAUD,EAAOE,OAAOC,UAAUC,MAAM,GAE5CJ,EAAOE,OAAOC,UAAUC,MAAMC,SAAQ,SAACC,GAEnCA,EAAIhC,QAAQ,GAAG9D,WAAWH,KAAKE,KAC/B0F,EAAQ3B,QAAQ,GAAG9D,WAAWH,KAAKE,OAEnC0F,EAAUK,MAId1B,EACEoB,EAAOE,OAAOC,UAAUC,MACtBJ,EAAOE,OAAOC,UAAUC,MAAMhC,OAAS,IAG3CU,EAAcmB,GACdT,GAAqB,MAKzBG,MAAM,sCAAD,OACmCtE,EAASqD,QAAQkB,UADpD,gBAGFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAIL,OAHArB,EAAWqB,EAAOE,OAAOC,UAAUC,MAAM,IACzCd,GAAkB,GAEXK,MAAM,oHAAD,OAC0GtE,EAASqD,QAAQvC,YAD3H,aAEV,CAAEoE,OAAQ,WAGbV,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLhB,EAAcwB,OAAOC,KAAKT,EAAOU,MAAMC,QACvCzB,EAAsBc,EAAOU,MAAMC,OACnCvB,GAAmB,MAKvBO,MAAM,sCAAD,OACmCtE,EAASqD,QAAQkB,UADpD,8BAGFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLnB,EACEmB,EAAOE,OAAOC,UAAUC,MACtBJ,EAAOE,OAAOC,UAAUC,MAAMhC,OAAS,IAG3CsB,GAAwB,QAO7B,CAACrE,EAASqD,QAAQkB,UAAWvE,EAASqD,QAAQvC,cAG/C,qCACE,eAAC5C,EAAA,EAAD,CAAKhB,UAAU,cAAf,UACE,6BAAK8C,EAASqD,QAAQvC,YAAYlC,gBAClC,+BACE,cAAC,IAAD,CACE6B,YAAaC,IACXT,GACAU,cACFnC,OAAO,OACN,IACFwB,EAASqD,QAAQkC,SAASC,QAP7B,KAQGxF,EAASqD,QAAQkC,SAASE,SAR7B,UAYD3B,EAAkB,KACjB,cAAC5F,EAAA,EAAD,UACE,oBAAGd,MAAO,CAAEsI,UAAW,WAAvB,UACG9B,EAAmBF,GAAnB,QACD,uBAFF,UAGU,IACR,mBACExD,KAAI,wCAAmC0D,EAAmBF,GAAnB,OADzC,4BASN,cAAC,EAAD,CACE7C,YAAa,CACXb,EAASqD,QAAQkC,SAASI,IAC1B3F,EAASqD,QAAQkC,SAASK,MAE5B9E,YAAad,EAASqD,QAAQvC,YAC9B+E,UAAW,CAAErH,OAAQ,WAGtB0F,GAAqBF,GAAkBI,EACtC,cAAClG,EAAA,EAAD,CACEhB,UAAU,qCACVE,MAAO,CAAEE,UAAW,QAFtB,SAIE,cAACwI,EAAA,EAAD,CAASC,UAAU,aAGrB,cAAC,EAAD,CACEjE,QAASA,EACTC,OAAQA,EACRC,cAAeA,EACfC,WAAYA,Q,iBC/IT+D,EAAa,CACxB,EAAG,eACH,EAAG,iBACH,EAAG,eACH,EAAG,iBACH,EAAG,eACH,EAAG,mBACH,EAAG,iBACH,EAAG,kBACH,EAAG,eACH,GAAI,kBACJ,GAAI,mBACJ,GAAI,iBACJ,GAAI,iBACJ,GAAI,kBACJ,GAAI,iBACJ,GAAI,kBACJ,GAAI,kBACJ,GAAI,mBACJ,GAAI,mBACJ,GAAI,iBACJ,GAAI,mBACJ,GAAI,kBACJ,GAAI,kBACJ,GAAI,iBACJ,GAAI,gBACJ,GAAI,mBACJ,GAAI,mBACJ,GAAI,iBACJ,GAAI,iBACJ,GAAI,oB,kBCyHSC,EAjJF,SAAC,GAAuB,IAArB9D,EAAoB,EAApBA,OAAQ9B,EAAY,EAAZA,MACdvD,EAAUC,qBAAWC,KAArBF,MACR,EAAwBiE,mBAAS,CAAEmF,OAAQ,KAAMC,SAAU,OAA3D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCtF,oBAAS,GAA/C,mBAAOuF,EAAP,KAAoBC,EAApB,KAEAtF,qBAAU,YACO,uCAAG,sBAAAuF,EAAA,sEACVlC,MAAM,6BAAD,OACoBnC,EADpB,YAC8B9B,EAD9B,0BAGRmE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAY8B,EAAc9B,EAAOE,OAAOC,UAAUC,MAAM,GAAGkB,SALnD,2CAAH,qDAQfS,KACC,CAACvE,EAAQ9B,IAEZ,IAAMsG,EAAU,CACdC,QAAS,CACPC,OAAQ,CACNpK,SAAS,EACTuB,SAAU,WAGd8I,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,MAAO,CACLC,MAAiB,SAAVpK,EAAmB,QAAU,OACpCqK,KAAM,CACJC,KAAM,IAERC,SAAU,GAEZ/H,KAAM,CACJ4H,MAAO,SAGXI,EAAG,CACDL,MAAO,CACLC,MAAiB,SAAVpK,EAAmB,QAAU,OACpCqK,KAAM,CACJC,KAAM,KAGV9H,KAAM,CACJ4H,MAAO,WAMTK,EAAgB,CACpBX,QAAS,CACPC,OAAQ,CACNpK,SAAS,EACTuB,SAAU,WAGd8I,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,MAAO,CACLC,MAAiB,SAAVpK,EAAmB,QAAU,OACpCqK,KAAM,CACJC,KAAM,IAERC,SAAU,GAEZ/H,KAAM,CACJ4H,MAAO,SAGXI,EAAG,CACDL,MAAO,CACLC,MAAiB,SAAVpK,EAAmB,QAAU,OACpCqK,KAAM,CACJC,KAAM,KAGV9H,KAAM,CACJ4H,MAAO,WAMTT,EAAgB,SAAC3H,GACrB,IAAM0I,EAAU,GACVC,EAAa,GAEnB3I,EAAKkG,SAAQ,SAACC,GACZwC,EAAW1J,KAAK8E,SAASoC,EAAIhH,SAE7BgH,EAAIyC,QAAQ1C,SAAQ,SAACvH,GACd+J,EAAQ/J,EAAOI,YAClB2J,EAAQ/J,EAAOI,UAAY,IAG7B2J,EAAQ/J,EAAOI,UAAUE,KAAKN,EAAOO,gBAOzC,IAHA,IAAMmI,EAAW,GACbnI,EAAW,EAEf,MAA2BmH,OAAOwC,QAAQH,GAA1C,eAAoD,CAA/C,0BACGpB,EAAO,CACXwB,MAFC,KAGDxB,KAHC,KAIDyB,MAAM,EACNC,gBAAiB9B,EAAWhI,GAC5B+J,YAAa/B,EAAWhI,IAG1BmI,EAASpI,KAAKqI,GACdpI,IAGFqI,EAAQ,CAAEH,OAAQuB,EAAYtB,SAAUA,IACxCI,GAAe,IAGjB,OACE,mCACGD,EAAc,KACb,qCACE,cAAC,IAAD,CAAY0B,SAAU,KAAtB,SACE,cAAC,IAAD,CAAM5B,KAAMA,EAAM5H,OAAQ,IAAKyJ,MAAO,IAAKtB,QAASA,MAGtD,cAAC,IAAD,CAAYuB,SAAU,KAAtB,SACE,cAAC,IAAD,CACE9B,KAAMA,EACN5H,OAAQ,IACRyJ,MAAO,IACPtB,QAASY,YCkBRY,EAvJD,SAAC,GAAgE,IAA9DnI,EAA6D,EAA7DA,SAAUrD,EAAmD,EAAnDA,mBAAoB6C,EAA+B,EAA/BA,yBAC7C,OACE,qCACE,qBACEtC,UAAU,8BACVkL,GAAG,QACHC,KAAK,UACLjL,MAAO,CAAEE,UAAW,QAJtB,UAME,oBAAIJ,UAAU,WAAWmL,KAAK,eAA9B,SACE,wBACEnL,UAAU,kBACVkL,GAAG,WACH,iBAAe,MACf,iBAAe,QACfE,KAAK,SACLD,KAAK,MACL,gBAAc,OACd,gBAAc,OARhB,oBAcqB,MAAtB1L,GAA8BqD,EAASmC,QAAU,KAChD,oBAAIjF,UAAU,WAAWmL,KAAK,eAA9B,SACE,wBACEnL,UAAU,WACVkL,GAAG,WACH,iBAAe,MACf,iBAAe,QACfE,KAAK,SACLD,KAAK,MACL,gBAAc,OACd,gBAAc,QARhB,oBAaA,KAEyB,MAA5B7I,EACC,oBAAItC,UAAU,WAAWmL,KAAK,eAA9B,SACE,wBACEnL,UAAU,WACVkL,GAAG,iBACH,iBAAe,MACf,iBAAe,cACfE,KAAK,SACLD,KAAK,MACL,gBAAc,aACd,gBAAc,QARhB,0BAaA,KAEJ,oBAAInL,UAAU,WAAWmL,KAAK,eAA9B,SACE,wBACEnL,UAAU,WACVkL,GAAG,cACH,iBAAe,MACf,iBAAe,WACfE,KAAK,SACLD,KAAK,MACL,gBAAc,UACd,gBAAc,QARhB,0BAeJ,sBAAKnL,UAAU,cAAf,UACE,sBACEA,UAAU,4BACVkL,GAAG,OACHC,KAAK,WACL,kBAAgB,WAJlB,UAME,cAAC,EAAD,CACErI,SAAUA,EACVC,iBAAkBD,EAASqD,QAAQkC,SAASC,UAGvB,MAAtB7I,EACC,cAAC,EAAD,CAAoBA,mBAAoBA,IAExC,eAACuB,EAAA,EAAD,CAAKhB,UAAU,qCAAf,UACE,sBACA,cAACqL,EAAA,EAAD,CAAgBhI,KAAMP,EAASO,KAAMrB,KAAMc,EAASd,KAAMkI,KAAK,cAKrE,qBACElK,UAAU,gBACVkL,GAAG,OACHC,KAAK,WACL,kBAAgB,WAJlB,SAMyB,MAAtB1L,GAA8BqD,EAASmC,QAAU,KAChD,qCACE,cAAC,EAAD,CACEnC,SAAUA,EACVC,iBAAkBD,EAASqD,QAAQkC,SAASC,UAE9C,qBAAKpI,MAAO,CAAEoL,UAAW,SAAzB,SACE,cAAC,EAAD,CAAMrG,OAAQnC,EAASmC,OAAQ9B,MAAOL,EAASK,aAGjD,OAGN,qBACEnD,UAAU,gBACVkL,GAAG,aACHC,KAAK,WACL,kBAAgB,iBAJlB,SAM+B,MAA5B7I,EACC,qCACE,cAAC,EAAD,CACEQ,SAAUA,EACVC,iBAAkBD,EAASqD,QAAQkC,SAASC,UAG9C,cAAC,EAAD,CACEhG,yBAA0BA,OAG5B,OAGN,qBACEtC,UAAU,gBACVkL,GAAG,UACHC,KAAK,WACL,kBAAgB,cAJlB,SAME,cAAC,EAAD,CACErI,SAAUA,EACVC,iBAAkBD,EAASqD,QAAQkC,SAASC,mBC7FzCiD,EAvDI,SAAC,GAAuB,IAArBtG,EAAoB,EAApBA,OAAQ9B,EAAY,EAAZA,MAC5B,EAAgCU,mBAAS,MAAzC,mBAAOf,EAAP,KAAiB0I,EAAjB,KACA,EAAoC3H,mBAAS,MAA7C,mBAAO4H,EAAP,KAAmBC,EAAnB,KACA,EAA8C7H,oBAAS,GAAvD,mBAAO8H,EAAP,KAAwBC,EAAxB,KACA,EAAkD/H,oBAAS,GAA3D,mBAAOgI,EAAP,KAA0BC,EAA1B,KAmCA,OAjCA/H,qBAAU,WACR,IAAMgI,EAAa,uCAAG,sBAAAzC,EAAA,sEACdlC,MAAM,6BAAD,OAA8BnC,EAA9B,UACRqC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QAEoD5F,IAAvD4F,EAAOE,OAAOC,UAAUC,MAAMlC,SAASxC,GAAS,IAEhDqI,EAAY/D,EAAOE,OAAOC,UAAUC,MAAMlC,SAASxC,GAAS,OAP9C,OAWpByI,GAAmB,GAXC,2CAAH,qDAcbI,EAAe,uCAAG,sBAAA1C,EAAA,sEAChBlC,MAAM,6BAAD,OACoBnC,EADpB,YAC8B9B,EAD9B,qBAGRmE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACoC5F,IAArC4F,EAAOE,OAAOC,UAAUC,MAAM,IAChC6D,EAAcjE,EAAOE,OAAOC,UAAUC,MAAM,GAAGoE,sBAP/B,OAWtBH,GAAqB,GAXC,2CAAH,qDAcrBC,IACAC,MACC,CAAC/G,EAAQ9B,IAGV,qBAAKjD,MAAO,CAAEoL,UAAW,SAAzB,SACGK,GAAmBE,EAAoB,KAAoB,OAAb/I,EAC7C,cAAC,IAAD,CAAUoJ,GAAG,WAEb,cAAC,EAAD,CACEjH,OAAQA,EACR9B,MAAOA,EACPL,SAAUA,EACVR,yBAA0BmJ,OCerBU,EA5DF,SAAC,GAAuB,IAArBlH,EAAoB,EAApBA,OAAQ9B,EAAY,EAAZA,MACtB,EAAgCU,mBAAS,MAAzC,mBAAOf,EAAP,KAAiB0I,EAAjB,KACA,EAAoD3H,mBAAS,MAA7D,mBAAOpE,EAAP,KAA2B2M,EAA3B,KACA,EAAoCvI,mBAAS,MAA7C,mBAAO4H,EAAP,KAAmBC,EAAnB,KACA,EAAkD7H,oBAAS,GAA3D,mBAAOwI,EAAP,KAA0BC,EAA1B,KACA,EAAkDzI,oBAAS,GAA3D,mBAAOgI,EAAP,KAA0BC,EAA1B,KAkCA,OAhCA/H,qBAAU,WACR,IAAMwI,EAAe,uCAAG,sBAAAjD,EAAA,sEAChBlC,MAAM,6BAAD,OAA8BnC,EAA9B,YAAwC9B,EAAxC,kBACRmE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACoC5F,IAArC4F,EAAOE,OAAOC,UAAUC,MAAM,KAChC2D,EAAY/D,EAAOE,OAAOC,UAAUC,MAAM,IAC1CuE,EAAsB3E,EAAOE,OAAOC,UAAUC,MAAM,GAAG9B,aANvC,OAUtBuG,GAAqB,GAVC,2CAAH,qDAafE,EAAmB,uCAAG,sBAAAlD,EAAA,sEACpBlC,MAAM,6BAAD,OACoBnC,EADpB,YAC8B9B,EAD9B,qBAGRmE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACoC5F,IAArC4F,EAAOE,OAAOC,UAAUC,MAAM,IAChC6D,EAAcjE,EAAOE,OAAOC,UAAUC,MAAM,GAAGoE,sBAP3B,OAW1BH,GAAqB,GAXK,2CAAH,qDAczBS,IACAC,MACC,CAACvH,EAAQ9B,IAGV,cAACsJ,EAAA,EAAD,CAAWC,MAAM,KAAKxM,MAAO,CAAEoL,UAAW,SAA1C,SACGe,GAAqBR,EACpB,cAACY,EAAA,EAAD,CAAWvM,MAAO,CAAEE,UAAW,KAAMkL,UAAW,SAAhD,SACE,cAACtK,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,cAAC4I,EAAA,EAAD,CAASC,UAAU,eAGC,MAAtBpJ,EACF,cAAC,EAAD,CAAYwF,OAAQA,EAAQ9B,MAAOA,IAEnC,cAAC,EAAD,CACEL,SAAUA,EACVrD,mBAAoBA,EACpB6C,yBAA0BmJ,OCzCrBkB,UAbI,WACjB,IAAQ1H,EAAW2H,cAAX3H,OACA9B,EAAUyJ,cAAVzJ,MAER,OACE,qCACE,cAAC,IAAD,IACA,cAAC,EAAD,CAAM8B,OAAQA,EAAQ9B,MAAOA,IAC7B,cAAC0J,EAAA,EAAD,S,gCCdN,kCAAO,IAAMrJ,EAA2B,CACtCsJ,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,WAAY,KACZC,OAAQ,KACRC,OAAQ,KACRC,SAAU,KACVC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,SAAU,KACVC,KAAM,KACN,gBAAiB,KACjB,cAAe,KACfC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,QAAS,KACTC,QAAS,KACT,gBAAiB,KACjBC,OAAQ,KACRC,gBAAiB,KACjB,YAAa,KACbC,MAAO,KACPC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,MAAO,KACPC,SAAU,KACVC,OAAQ,KACRC,OAAQ,KACRC,WAAY,KACZC,UAAW,KACXC,OAAQ,KACRC,MAAO,KACPC,UAAW,KACXC,IAAK,KACLC,UAAW,KACXC,QAAS,KACTC,WAAY,KACZC,QAAS,KACTC,OAAQ,KACRC,OAAQ,KACRC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,MAAO,KACPC,MAAO,KACPC,SAAU,KACVC,UAAW,KACXC,OAAQ,KACRC,OAAQ,KACRC,QAAS,KACTC,YAAa,KACbC,SAAU,KACV,eAAgB,KAChBC,UAAW,KACX,eAAgB,KAChBC,MAAO,KACPC,OAAQ,KACRC,YAAa,KACbC,OAAQ,KACRC,GAAI,KACJC,IAAK,KACL,gBAAiB,KACjBC,MAAO,KACPC,QAAS,O,8DC5EEC,EAAa,CACxBC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,QAAS,UACTC,aAAc,UACdC,WAAY,UACZC,OAAQ,UACRC,QAAS,UACTC,KAAM,UACNC,KAAM,UACNC,QAAS,UACTC,aAAc,UACdC,WAAY,UACZC,YAAa,UACbC,OAAQ,UACRC,MAAO,UACPC,SAAU,UACVC,SAAU,UACVC,SAAU,W,OCAGnR,IAhBG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAqC,IAAtBE,cAAsB,MAAb,OAAa,EACxD,OACE,qBACEpB,MAAO,CACL6K,MAAO,MACPzJ,OAAQA,EACR/B,QAAS,QACTF,OAAQ,SACRuL,gBAAiBuG,EAAW5O,eAAenB,GACvC+P,EAAW/P,GACX,e,gCCbZ,iGAoEemR,IAxDA,WACb,MAA4B1S,qBAAWC,KAA/BF,EAAR,EAAQA,MAAO4S,EAAf,EAAeA,SAYf,OAJAzO,qBAAU,WACR0O,aAAaC,QAAQ,QAAS9S,KAC7B,CAACA,IAGF,cAAC,IAAD,CAAQI,UAAU,SAAS2S,GAAG,OAAOtS,QAAQ,OAA7C,SACE,eAAC,IAAD,CAAWH,MAAO,CAAEoL,UAAW,QAA/B,UACE,cAAC,IAAD,CAAMY,GAAG,IAAIhM,MAAO,CAAE0S,eAAgB,QAAtC,SACE,cAAC,IAAOC,MAAR,CAAc7S,UAAU,YAAxB,SACE,cAAC,IAAD,CAAiBkK,KAAM,SAI3B,cAAC,IAAD,CAAMgC,GAAG,YAAYhM,MAAO,CAAE0S,eAAgB,QAA9C,SACE,cAAC,IAAOC,MAAR,CAAc7S,UAAU,YAAxB,qBAGF,cAAC,IAAD,CAAMkM,GAAG,aAAahM,MAAO,CAAE0S,eAAgB,QAA/C,SACE,cAAC,IAAOC,MAAR,CAAc7S,UAAU,YAAxB,yBAGF,cAAC,IAAO8S,SAAR,CAAiB9S,UAAU,sBAA3B,SACE,eAAC,IAAD,CAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CAAKE,MAAO,CAAEE,UAAW,QAAzB,SACE,cAAC,IAAD,CACE2S,SAAU,kBA/BH,WACnB,IAAMC,EAAmB,UAAVpT,EAAoB,OAAS,QAC5C4S,EAASQ,GACTP,aAAaC,QAAQ,QAASM,GA4BFC,IAChBC,QAAmB,SAAVtT,EACTsK,KAAM,OAIV,cAAC,IAAD,UACE,cAAC,IAAO2I,MAAR,CACE7S,UAAU,YACVgD,KAAK,4BACL,aAAW,SAHb,SAKE,cAAC,IAAD,CAAckH,KAAM,qB,qDC1DpC,sFA0Ie2C,IA1HA,WACb,OACE,iCACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAK7M,UAAU,qCAAqCkB,GAAG,OAAOgK,GAAG,MAAjE,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAiBhB,KAAM,OAGzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAUA,KAAM,OAGlB,cAAC,IAAD,UACE,cAAC,IAAD,CAASA,KAAM,OAEjB,cAAC,IAAD,UACE,cAAC,IAAD,CAAkBA,KAAM,OAG1B,cAAC,IAAD,UACE,cAAC,IAAD,CAASA,KAAM,OAGjB,cAAC,IAAD,UACE,cAAC,IAAD,CAAWA,KAAM,OAGnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAaA,KAAM,OAGrB,cAAC,IAAD,UACE,cAAC,IAAD,CAAWA,KAAM,OAGnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAWA,KAAM,OAGnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAoBA,KAAM,UAI9B,cAAC,IAAD,CAAKlK,UAAU,4BAA4BkB,GAAG,OAAOgK,GAAG,YAExD,cAAC,IAAD,CAAKlL,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,SACE,yCAIJ,cAAC,IAAD,CAAKxI,UAAU,4BAAf,SACE,eAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,gDACsC,IACpC,mBAAGxF,KAAK,yBAAyB9C,MAAO,CAAE8J,MAAO,SAAjD,wBAFF,SASF,cAAC,IAAD,CAAKhK,UAAU,4BAAf,SACE,eAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,yEAC+D,IAC7D,mBACExF,KAAK,qCACL9C,MAAO,CAAE8J,MAAO,SAFlB,2BAFF,SAYF,uBAEA,cAAC,IAAD,CAAKhK,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,SACE,gDAIJ,cAAC,IAAD,CAAKxI,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,sFAMF,cAAC,IAAD,CAAKxI,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,6FAMF,cAAC,IAAD,CAAKxI,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKuB,GAAG,OAAOrB,MAAO,CAAEsI,UAAW,UAAnC,oHAMF,uBAEA,cAAC,IAAD,CAAKxI,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKuB,GAAI,EAAT,SACE,mBAAGrB,MAAO,CAAEsI,UAAW,UAAvB,6P,qDC7HL,SAASlF,EAAiBD,EAAMrB,GACrC,IAAMmR,EAAW,IAAIC,KAAK/P,EAAO,IAAMrB,GAKvC,OAJemR,EAASE,WAAa,GAAK,IAAM,IAAMF,EAASE,WAIhD,MAFZF,EAASG,aAAe,GAAK,IAAM,IAAMH,EAASG,cAKhD,SAASlQ,EAAYmQ,GAC1B,IAAMlQ,EAAOkQ,EAAc/N,MAAM,KAEjC,MAAM,GAAN,OAAUnC,EAAK,GAAf,YAAqBA,EAAK,GAA1B,YAAgCA,EAAK,IAZvC,qE,gCCAA,iCA8GegI,IA1GQ,SAAC,GAA0B,IAAxBhI,EAAuB,EAAvBA,KAAMrB,EAAiB,EAAjBA,KAAMkI,EAAW,EAAXA,KA6FpC,OACE,cAAC,IAAD,CACE7G,KACE+P,KAAKI,OACJ,IAAIJ,KAAK/P,GAAMoQ,UACO,KAArBzR,EAAKwD,MAAM,KAAK,IAChB,IAAI4N,MAAOK,WAEfC,SApGa,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACxC,OADiE,EAAhBC,UAG7C,mCACY,QAAT7J,EACC,eAAC,IAAD,WACE,oBAAIlK,UAAU,iBAAd,+BACA,oBAAIA,UAAU,iBAAd,oCAES,UAATkK,EACF,cAAC,IAAD,UACE,oBAAIlK,UAAU,uBAAd,kCAGF,eAAC,IAAD,WACE,oDACA,0DAON,mCACY,QAATkK,EACC,qCACE,eAAC,IAAD,CAAKhJ,GAAI,EAAG8S,GAAI,EAAhB,UACE,oBAAIhU,UAAU,iBAAd,SAAgC2T,IAChC,yCAGF,eAAC,IAAD,CAAKzS,GAAI,EAAG8S,GAAI,EAAhB,UACE,oBAAIhU,UAAU,iBAAd,SAAgC4T,IAChC,wCAGF,eAAC,IAAD,CAAK1S,GAAI,EAAG8S,GAAI,EAAhB,UACE,oBAAIhU,UAAU,iBAAd,SAAgC6T,IAChC,wCAGF,eAAC,IAAD,CAAK3S,GAAI,EAAG8S,GAAI,EAAhB,UACE,oBAAIhU,UAAU,iBAAd,SAAgC8T,IAChC,2CAGO,UAAT5J,EACF,qCACE,cAAC,IAAD,UACE,qBAAIlK,UAAU,uBAAd,UAAsC2T,EAAtC,UAGF,cAAC,IAAD,UACE,qBAAI3T,UAAU,uBAAd,UAAsC4T,EAAtC,WAGF,cAAC,IAAD,UACE,qBAAI5T,UAAU,uBAAd,UAAsC6T,EAAtC,YAGF,cAAC,IAAD,UACE,qBAAI7T,UAAU,uBAAd,UAAsC8T,EAAtC,eAIJ,qCACE,eAAC,IAAD,CAAK5S,GAAI,EAAG8S,GAAI,EAAhB,UACE,6BAAKL,IACL,yCAGF,eAAC,IAAD,CAAKzS,GAAI,EAAG8S,GAAI,EAAhB,UACE,6BAAKJ,IACL,wCAGF,eAAC,IAAD,CAAK1S,GAAI,EAAG8S,GAAI,EAAhB,UACE,6BAAKH,IACL,wCAGF,eAAC,IAAD,CAAK3S,GAAI,EAAG8S,GAAI,EAAhB,UACE,6BAAKF,IACL","file":"static/js/8.fe68c8e8.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../SharedStyles/Table.css\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\nconst RaceClassification = ({ raceClassification }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <>\n      <Table\n        className=\"table-hover table-striped standings-table\"\n        responsive=\"sm\"\n        style={{ overflow: \"hidden\", marginTop: \"10px\" }}\n        variant={theme}\n      >\n        <thead>\n          <tr>\n            <th className=\"text-center\">POS</th>\n            <th className=\"hideXS text-center\">NUMBER</th>\n            <th>DRIVER</th>\n            <th className=\"hideXS\">TEAM</th>\n            <th className=\"hideXS\">LAPS</th>\n            <th>TIME/RETIRED</th>\n            <th>PTS</th>\n            <th className=\"hideXS\">GRID</th>\n            <th className=\"hideXS\">+/-</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr\n              key={index}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n              className=\"align-middle\"\n            >\n              <td className=\"text-center\">{driver.position}</td>\n              <td className=\"hideXS text-center\">{driver.number}</td>\n              <td>\n                <Row className=\"g-2\">\n                  <Col xs={1} className=\"showXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                      height=\"45px\"\n                    />\n                  </Col>\n\n                  <Col xs={1} className=\"hideXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n\n                  <Col xs={6} md={10}>\n                    {driver.Driver.givenName}{\" \"}\n                    <p style={boldFont}>\n                      {driver.Driver.familyName.toUpperCase()}\n                    </p>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col xs={2}>{driver.points}</Col>\n\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n\n              <td className=\"hideXS\">{driver.grid}</td>\n              <td className=\"hideXS\">\n                {driver.grid === \"0\"\n                  ? 20 - driver.position\n                  : driver.grid - driver.position}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <FaStopwatch /> - Fastest lap of the race\n    </>\n  );\n};\n\nexport default RaceClassification;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../SharedStyles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst QualifyingClassification = ({ qualifyingClassification }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <Table\n      responsive=\"sm\"\n      className=\"table-hover table-striped standings-table\"\n      variant={theme}\n      style={{ marginTop: \"10px\" }}\n    >\n      <thead>\n        <tr>\n          <th className=\"text-center\">POS</th>\n          <th className=\"hideXS text-center\">NUMBER</th>\n          <th>DRIVER</th>\n          <th className=\"hideXS\">TEAM</th>\n          <th className=\"text-center\">Q1</th>\n          <th className=\"text-center\">Q2</th>\n          <th className=\"text-center\">Q3</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {qualifyingClassification.map((driver, index) => (\n          <tr\n            key={index}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => rowClick(driver.Driver.driverId)}\n          >\n            <td className=\"text-center\">{driver.position}</td>\n            <td className=\"hideXS text-center\">{driver.number}</td>\n            <td className=\"hideXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n\n                <Col>\n                  {driver.Driver.givenName}{\" \"}\n                  <p style={boldFont}>\n                    {driver.Driver.familyName.toUpperCase()}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"showXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n\n                <Col xs={6}>\n                  <p style={boldFont}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"hideXS\">{driver.Constructor.name}</td>\n            <td className=\"text-center\">\n              {driver.hasOwnProperty(\"Q1\")\n                ? driver.Q1 === \"\"\n                  ? \"-\"\n                  : driver.Q1\n                : \"-\"}\n            </td>\n            <td className=\"text-center\">\n              {driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}\n            </td>\n            <td className=\"text-center\">\n              {driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default QualifyingClassification;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\n\nconst RaceInformation = ({ raceInfo, eventCountryCode }) => {\n  return (\n    <>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <a className=\"race-link\" href={raceInfo.url}>\n            <h1>{raceInfo.raceName.toUpperCase()}</h1>\n          </a>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>ROUND {raceInfo.round}</h3>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h5>{convertDate(raceInfo.date)}</h5>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h5>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h5>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              eventCountryCode\n            ].toLowerCase()}\n            height=\"100\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default RaceInformation;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={14}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useContext } from \"react\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport Table from \"react-bootstrap/Table\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst CircuitInformation = ({ firstGP, lastGP, lastGPDetails, fastestLap }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const driverRowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  const constructorRowClick = (wikiConstructorLink) => {\n    window.open(wikiConstructorLink, \"_blank\");\n  };\n\n  const raceRowClick = (season, round) => {\n    history.push(`/race/${season}/${round}`);\n    window.location.reload();\n  };\n\n  const calculateCircuitLength = (speed, time) => {\n    const timeSplitted = time.split(\":\");\n    const secondsSplitted = time.split(\".\");\n\n    const timeInSeconds =\n      parseInt(timeSplitted[0] * 60) +\n      parseInt(timeSplitted[1]) +\n      parseFloat(secondsSplitted[1] / 1000);\n\n    const metersPerSecond = (parseFloat(speed) * 1000) / 3600;\n    const length = (metersPerSecond * timeInSeconds) / 1000;\n\n    return Math.round(length * 1000) / 1000;\n  };\n\n  return (\n    <Table\n      responsive\n      className=\"standings-table table-striped table-hover\"\n      variant={theme}\n      style={{ marginTop: \"15px\" }}\n    >\n      <tbody>\n        <tr>\n          <td className=\"row-stats\">First Grand Prix:</td>\n          <td\n            className=\" text-end clickable-row no-wrap\"\n            onClick={() => raceRowClick(firstGP.season, firstGP.round)}\n          >\n            {firstGP.season} {firstGP.raceName}\n          </td>\n        </tr>\n\n        {lastGPDetails === undefined ? null : (\n          <tr>\n            <td className=\"row-stats\">Latest Grand Prix:</td>\n            <td\n              className=\"text-end clickable-row no-wrap\"\n              onClick={() =>\n                raceRowClick(lastGPDetails.season, lastGPDetails.round)\n              }\n            >\n              {lastGPDetails.season} {lastGPDetails.raceName}\n            </td>\n          </tr>\n        )}\n\n        {fastestLap === undefined ? null : (\n          <>\n            <tr>\n              <td className=\"row-stats\">Laps:</td>\n              <td className=\"text-end row-stats\">\n                {lastGPDetails.Results[0].laps} ({lastGPDetails.season})\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Race distance:</td>\n              <td className=\"text-end row-stats\">\n                {Math.round(\n                  parseInt(lastGPDetails.Results[0].laps) *\n                    calculateCircuitLength(\n                      parseFloat(\n                        lastGP.Results[0].FastestLap.AverageSpeed.speed\n                      ),\n                      lastGP.Results[0].FastestLap.Time.time\n                    ) *\n                    1000\n                ) / 1000}{\" \"}\n                km ({lastGPDetails.season})\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Circuit length:</td>\n              <td className=\"text-end row-stats\">\n                {calculateCircuitLength(\n                  parseFloat(lastGP.Results[0].FastestLap.AverageSpeed.speed),\n                  lastGP.Results[0].FastestLap.Time.time\n                )}{\" \"}\n                km\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Lap record (All circuit's layouts):</td>\n              <td\n                className=\"text-end clickable-row align-middle\"\n                onClick={() =>\n                  raceRowClick(fastestLap.season, fastestLap.round)\n                }\n              >\n                {fastestLap.Results[0].FastestLap.Time.time} (\n                {fastestLap.season})\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Average speed:</td>\n              <td\n                className=\"text-end clickable-row no-wrap\"\n                onClick={() =>\n                  raceRowClick(fastestLap.season, fastestLap.round)\n                }\n              >\n                {fastestLap.Results[0].FastestLap.AverageSpeed.speed} km/h (\n                {calculateCircuitLength(\n                  parseFloat(\n                    fastestLap.Results[0].FastestLap.AverageSpeed.speed\n                  ),\n                  fastestLap.Results[0].FastestLap.Time.time\n                )}{\" \"}\n                km)\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Driver:</td>\n              <td\n                className=\"clickable-row text-end\"\n                onClick={() =>\n                  driverRowClick(fastestLap.Results[0].Driver.driverId)\n                }\n              >\n                {fastestLap.Results[0].Driver.givenName}{\" \"}\n                <p style={boldFont}>\n                  {fastestLap.Results[0].Driver.familyName.toUpperCase()}\n                </p>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Team:</td>\n              <td\n                className=\"clickable-row text-end\"\n                onClick={() =>\n                  constructorRowClick(fastestLap.Results[0].Constructor.url)\n                }\n              >\n                <Row className=\"justify-content-end text-end g-2\">\n                  <Col className=\"align-self-center\" xs=\"auto\">\n                    <TeamColor\n                      constructorId={\n                        fastestLap.Results[0].Constructor.constructorId\n                      }\n                    />\n                  </Col>\n\n                  <Col xs=\"auto\">{fastestLap.Results[0].Constructor.name}</Col>\n                </Row>\n              </td>\n            </tr>\n          </>\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default CircuitInformation;\n","import React, { useState, useEffect } from \"react\";\nimport Map from \"../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport CircuitInformation from \"./CircuitInformation\";\n\nconst Circuit = ({ raceInfo, eventCountryCode }) => {\n  const [firstGP, setFirstGP] = useState(null);\n  const [lastGP, setLastGP] = useState(null);\n  const [lastGPDetails, setLastGPDetails] = useState(null);\n  const [fastestLap, setFastestLap] = useState(null);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [circuitInformation, setCircuitInformation] = useState(null);\n  const [loadingWikiData, setLoadingWikiData] = useState(true);\n  const [loadingFirstGP, setLoadingFirstGP] = useState(true);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingLastGPDetails, setLoadingLastGPDetails] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setLastGP(\n            result.MRData.RaceTable.Races[\n              result.MRData.RaceTable.Races.length - 1\n            ]\n          );\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGP(result.MRData.RaceTable.Races[0]);\n          setLoadingFirstGP(false);\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${raceInfo.Circuit.circuitName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setCircuitInformation(result.query.pages);\n          setLoadingWikiData(false);\n        });\n    };\n\n    const fetchCircuitLastRaceDetails = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/results/1.json?limit=100`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setLastGPDetails(\n            result.MRData.RaceTable.Races[\n              result.MRData.RaceTable.Races.length - 1\n            ]\n          );\n          setLoadingLastGPDetails(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n    fetchCircuitLastRaceDetails();\n  }, [raceInfo.Circuit.circuitId, raceInfo.Circuit.circuitName]);\n\n  return (\n    <>\n      <Row className=\"text-center\">\n        <h1>{raceInfo.Circuit.circuitName.toUpperCase()}</h1>\n        <h3>\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              eventCountryCode\n            ].toLowerCase()}\n            height=\"30\"\n          />{\" \"}\n          {raceInfo.Circuit.Location.country} (\n          {raceInfo.Circuit.Location.locality})\n        </h3>\n      </Row>\n\n      {loadingWikiData ? null : (\n        <Row>\n          <p style={{ textAlign: \"justify\" }}>\n            {circuitInformation[wikiPageId][\"extract\"]}\n            <br />\n            Source:{\" \"}\n            <a\n              href={`https://en.wikipedia.org/wiki/${circuitInformation[wikiPageId][\"title\"]}`}\n            >\n              Wikipedia\n            </a>\n          </p>\n        </Row>\n      )}\n\n      <Map\n        coordinates={[\n          raceInfo.Circuit.Location.lat,\n          raceInfo.Circuit.Location.long,\n        ]}\n        circuitName={raceInfo.Circuit.circuitName}\n        mapHeight={{ height: \"700px\" }}\n      />\n\n      {loadingFastestLap || loadingFirstGP || loadingLastGPDetails ? (\n        <Row\n          className=\"justify-content-center text-center\"\n          style={{ marginTop: \"15px\" }}\n        >\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <CircuitInformation\n          firstGP={firstGP}\n          lastGP={lastGP}\n          lastGPDetails={lastGPDetails}\n          fastestLap={fastestLap}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Circuit;\n","export const LineColors = {\n  1: \"rgb(128,0,0)\",\n  2: \"rgb(255,215,0)\",\n  3: \"rgb(255,0,0)\",\n  4: \"rgb(255,140,0)\",\n  5: \"rgb(0,100,0)\",\n  6: \"rgb(100,149,237)\",\n  7: \"rgb(0,191,255)\",\n  8: \"rgb(30,144,255)\",\n  9: \"rgb(0,0,255)\",\n  10: \"rgb(138,43,226)\",\n  11: \"rgb(147,112,219)\",\n  12: \"rgb(148,0,211)\",\n  13: \"rgb(255,0,255)\",\n  14: \"rgb(255,20,147)\",\n  15: \"rgb(139,69,19)\",\n  16: \"rgb(210,105,30)\",\n  17: \"rgb(244,164,96)\",\n  18: \"rgb(112,128,144)\",\n  19: \"rgb(176,196,222)\",\n  20: \"rgb(255,99,71)\",\n  21: \"rgb(250,128,114)\",\n  22: \"rgb(184,134,11)\",\n  23: \"rgb(154,205,50)\",\n  24: \"rgb(50,205,50)\",\n  25: \"rgb(75,0,130)\",\n  26: \"rgb(210,180,140)\",\n  27: \"rgb(128,128,128)\",\n  28: \"rgb(34,139,34)\",\n  29: \"rgb(127,255,0)\",\n  30: \"rgb(240,230,140)\",\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { LineColors } from \"../../data/LineColors\";\nimport MediaQuery from \"react-responsive\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst Laps = ({ season, round }) => {\n  const { theme } = useContext(ThemeContext);\n  const [data, setData] = useState({ labels: null, datasets: null });\n  const [loadingLaps, setLoadingLaps] = useState(true);\n\n  useEffect(() => {\n    const fetchLaps = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/laps.json?limit=2000`\n      )\n        .then((res) => res.json())\n        .then((result) => lapsPerDriver(result.MRData.RaceTable.Races[0].Laps));\n    };\n\n    fetchLaps();\n  }, [season, round]);\n\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n    },\n    scales: {\n      y: {\n        reverse: true,\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 20,\n          },\n          stepSize: 1,\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n      x: {\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 20,\n          },\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n    },\n  };\n\n  const optionsMobile = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n    },\n    scales: {\n      y: {\n        reverse: true,\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 10,\n          },\n          stepSize: 1,\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n      x: {\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n    },\n  };\n\n  const lapsPerDriver = (laps) => {\n    const lapsObj = {};\n    const lapsNumber = [];\n\n    laps.forEach((lap) => {\n      lapsNumber.push(parseInt(lap.number));\n\n      lap.Timings.forEach((driver) => {\n        if (!lapsObj[driver.driverId]) {\n          lapsObj[driver.driverId] = [];\n        }\n\n        lapsObj[driver.driverId].push(driver.position);\n      });\n    });\n\n    const datasets = [];\n    var position = 1;\n\n    for (const [key, value] of Object.entries(lapsObj)) {\n      const data = {\n        label: key,\n        data: value,\n        fill: false,\n        backgroundColor: LineColors[position],\n        borderColor: LineColors[position],\n      };\n\n      datasets.push(data);\n      position++;\n    }\n\n    setData({ labels: lapsNumber, datasets: datasets });\n    setLoadingLaps(false);\n  };\n\n  return (\n    <>\n      {loadingLaps ? null : (\n        <>\n          <MediaQuery minWidth={1224}>\n            <Line data={data} height={325} width={500} options={options} />\n          </MediaQuery>\n\n          <MediaQuery maxWidth={1224}>\n            <Line\n              data={data}\n              height={850}\n              width={500}\n              options={optionsMobile}\n            />\n          </MediaQuery>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Laps;\n","import React from \"react\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport QualifyingClassification from \"../Classifications/QualifyingClassification\";\nimport RaceInformation from \"./RaceInformation\";\nimport Circuit from \"../Circuit/Circuit\";\nimport Row from \"react-bootstrap/Row\";\nimport ClockCountdown from \"../Countdown/ClockCountdown\";\nimport Laps from \"../Laps/Laps\";\n\nconst Event = ({ raceInfo, raceClassification, qualifyingClassification }) => {\n  return (\n    <>\n      <ul\n        className=\"nav nav-pills nav-fill mb-2\"\n        id=\"myTab\"\n        role=\"tablist\"\n        style={{ marginTop: \"10px\" }}\n      >\n        <li className=\"nav-item\" role=\"presentation\">\n          <button\n            className=\"nav-link active\"\n            id=\"race-tab\"\n            data-bs-toggle=\"tab\"\n            data-bs-target=\"#race\"\n            type=\"button\"\n            role=\"tab\"\n            aria-controls=\"race\"\n            aria-selected=\"true\"\n          >\n            RACE\n          </button>\n        </li>\n\n        {raceClassification != null && raceInfo.season >= 1996 ? (\n          <li className=\"nav-item\" role=\"presentation\">\n            <button\n              className=\"nav-link\"\n              id=\"laps-tab\"\n              data-bs-toggle=\"tab\"\n              data-bs-target=\"#laps\"\n              type=\"button\"\n              role=\"tab\"\n              aria-controls=\"laps\"\n              aria-selected=\"false\"\n            >\n              LAPS\n            </button>\n          </li>\n        ) : null}\n\n        {qualifyingClassification != null ? (\n          <li className=\"nav-item\" role=\"presentation\">\n            <button\n              className=\"nav-link\"\n              id=\"qualifying-tab\"\n              data-bs-toggle=\"tab\"\n              data-bs-target=\"#qualifying\"\n              type=\"button\"\n              role=\"tab\"\n              aria-controls=\"qualifying\"\n              aria-selected=\"false\"\n            >\n              QUALIFYING\n            </button>\n          </li>\n        ) : null}\n\n        <li className=\"nav-item\" role=\"presentation\">\n          <button\n            className=\"nav-link\"\n            id=\"circuit-tab\"\n            data-bs-toggle=\"tab\"\n            data-bs-target=\"#circuit\"\n            type=\"button\"\n            role=\"tab\"\n            aria-controls=\"circuit\"\n            aria-selected=\"false\"\n          >\n            CIRCUIT\n          </button>\n        </li>\n      </ul>\n\n      <div className=\"tab-content\">\n        <div\n          className=\"tab-pane fade show active\"\n          id=\"race\"\n          role=\"tabpanel\"\n          aria-labelledby=\"race-tab\"\n        >\n          <RaceInformation\n            raceInfo={raceInfo}\n            eventCountryCode={raceInfo.Circuit.Location.country}\n          />\n\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : (\n            <Row className=\"justify-content-center text-center\">\n              <p></p>\n              <ClockCountdown date={raceInfo.date} time={raceInfo.time} size=\"big\" />\n            </Row>\n          )}\n        </div>\n\n        <div\n          className=\"tab-pane fade\"\n          id=\"laps\"\n          role=\"tabpanel\"\n          aria-labelledby=\"laps-tab\"\n        >\n          {raceClassification != null && raceInfo.season >= 1996 ? (\n            <>\n              <RaceInformation\n                raceInfo={raceInfo}\n                eventCountryCode={raceInfo.Circuit.Location.country}\n              />\n              <div style={{ minHeight: \"300px\" }}>\n                <Laps season={raceInfo.season} round={raceInfo.round} />\n              </div>\n            </>\n          ) : null}\n        </div>\n\n        <div\n          className=\"tab-pane fade\"\n          id=\"qualifying\"\n          role=\"tabpanel\"\n          aria-labelledby=\"qualifying-tab\"\n        >\n          {qualifyingClassification != null ? (\n            <>\n              <RaceInformation\n                raceInfo={raceInfo}\n                eventCountryCode={raceInfo.Circuit.Location.country}\n              />\n\n              <QualifyingClassification\n                qualifyingClassification={qualifyingClassification}\n              />\n            </>\n          ) : null}\n        </div>\n\n        <div\n          className=\"tab-pane fade\"\n          id=\"circuit\"\n          role=\"tabpanel\"\n          aria-labelledby=\"circuit-tab\"\n        >\n          <Circuit\n            raceInfo={raceInfo}\n            eventCountryCode={raceInfo.Circuit.Location.country}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Event;\n","import React, { useState, useEffect } from \"react\";\nimport Event from \"./Event\";\nimport { Redirect } from \"react-router-dom\";\n\nconst FutureRace = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [qualifying, setQualifying] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n  const [loadingQualifying, setLoadingQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    const fetchQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setQualifying(result.MRData.RaceTable.Races[0].QualifyingResults);\n          }\n        });\n\n      setLoadingQualifying(false);\n    };\n\n    fetchRaceInfo();\n    fetchQualifying();\n  }, [season, round]);\n\n  return (\n    <div style={{ minHeight: \"600px\" }}>\n      {loadingRaceInfo || loadingQualifying ? null : raceInfo === null ? (\n        <Redirect to=\"/error\" />\n      ) : (\n        <Event\n          season={season}\n          round={round}\n          raceInfo={raceInfo}\n          qualifyingClassification={qualifying}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FutureRace;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Event from \"./Event\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport FutureRace from \"./FutureRace\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [qualifying, setQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingQualifying, setLoadingQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setQualifying(result.MRData.RaceTable.Races[0].QualifyingResults);\n          }\n        });\n\n      setLoadingQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <Container fluid=\"md\" style={{ minHeight: \"600px\" }}>\n      {loadingRaceResult || loadingQualifying ? (\n        <Container style={{ marginTop: \"5%\", minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Spinner animation=\"border\" />\n          </Row>\n        </Container>\n      ) : raceClassification == null ? (\n        <FutureRace season={season} round={round} />\n      ) : (\n        <Event\n          raceInfo={raceInfo}\n          raceClassification={raceClassification}\n          qualifyingClassification={qualifying}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Race/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </>\n  );\n};\n\nexport default RaceResult;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Malaysian: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n  \"United States\": \"US\",\n  Qatar: \"QA\",\n  Chinese: \"CN\"\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n\n            <Col>\n              <Navbar.Brand\n                className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export function getLocalRaceDate(date, time) {\n  const raceDate = new Date(date + \"T\" + time);\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n  const minutes =\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n  return hours + \":\" + minutes;\n}\n\nexport function convertDate(dateToConvert) {\n  const date = dateToConvert.split(\"-\");\n\n  return `${date[2]}/${date[1]}/${date[0]}`;\n}\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time, size }) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return (\n        <>\n          {size === \"big\" ? (\n            <Col>\n              <h1 className=\"countdown-font\">EVENT IN PROGRESS</h1>\n              <h5 className=\"countdown-font\">WAITING FOR RESULTS</h5>\n            </Col>\n          ) : size === \"small\" ? (\n            <Col>\n              <h1 className=\"countdown-font-small\">EVENT HAS FINISHED</h1>\n            </Col>\n          ) : (\n            <Col>\n              <h1>EVENT HAS FINISHED</h1>\n              <h5>WAITING FOR RESULTS</h5>\n            </Col>\n          )}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {size === \"big\" ? (\n            <>\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{days}</h1>\n                <h1>DAYS</h1>\n              </Col>\n\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{hours}</h1>\n                <h1>HRS</h1>\n              </Col>\n\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{minutes}</h1>\n                <h1>MIN</h1>\n              </Col>\n\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{seconds}</h1>\n                <h1>SEC</h1>\n              </Col>\n            </>\n          ) : size === \"small\" ? (\n            <>\n              <Col>\n                <h1 className=\"countdown-font-small\">{days} d</h1>\n              </Col>\n\n              <Col>\n                <h1 className=\"countdown-font-small\">{hours} hr</h1>\n              </Col>\n\n              <Col>\n                <h1 className=\"countdown-font-small\">{minutes} min</h1>\n              </Col>\n\n              <Col>\n                <h1 className=\"countdown-font-small\">{seconds} sec</h1>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col xs={3} lg={1}>\n                <h1>{days}</h1>\n                <h5>DAYS</h5>\n              </Col>\n\n              <Col xs={3} lg={1}>\n                <h1>{hours}</h1>\n                <h5>HRS</h5>\n              </Col>\n\n              <Col xs={3} lg={1}>\n                <h1>{minutes}</h1>\n                <h5>MIN</h5>\n              </Col>\n\n              <Col xs={3} lg={1}>\n                <h1>{seconds}</h1>\n                <h5>SEC</h5>\n              </Col>\n            </>\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n"],"sourceRoot":""}