{"version":3,"sources":["components/Navbar/Navbar.js","components/Footer/Footer.js","components/Cards/GenericCard.js","components/Stats/MainFeed/PreviousRaceCard.js","components/Countdown/ClockCountdown.js","components/Stats/MainFeed/NextRaceCard.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Stats/MainFeed/PreviousRaceStats.js","components/Stats/Standings/DriversStandings.js","components/Stats/MainFeed/DriversStandingsCard.js","components/Stats/Standings/ConstructorsStandings.js","components/Stats/MainFeed/ConstructorsStandingsCard.js","components/Stats/MainFeed/MainFeed.js","pages/HomePage.js","components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/Podium.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitData.js","components/Stats/RaceData/CircuitTab.js","components/Stats/RaceData/EventTabs.js","components/Stats/RaceData/RaceCountdown.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","components/Races/RaceInfo.js","components/Races/Races.js","pages/SeasonRaces.js","components/Error/Error.js","pages/ErrorPage.js","components/Stats/Standings/Standings.js","pages/StandingsPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","className","bg","variant","Container","Brand","size","to","style","textDecoration","Collapse","href","Footer","Row","xs","id","Col","md","textAlign","GenericCard","cardTitle","cardBody","cardFooter","cardHeight","Card","height","text","Header","Body","undefined","PreviousRaceCard","previousRaceData","useState","countryCode","setCountryCode","loadingCountryCode","setLoadingCountryCode","useEffect","a","fetch","MRData","RaceTable","Races","Circuit","Location","country","then","res","json","result","alpha2Code","fetchCountryCode","round","raceName","circuitName","date","toLowerCase","season","Button","ClockCoutdown","time","Date","now","getTime","split","renderer","days","hours","minutes","seconds","marginTop","sm","lg","NextRaceCard","nextRaceData","substring","length","CountriesCodeNationality","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","TeamColor","constructorId","width","backgroundColor","hasOwnProperty","PreviousRaceStats","totalNumberOfRaces","fastestLap","setFastestLap","polePosition","setPolePosition","loadingPolePosition","setLoadingPolePosition","QualifyingResults","fetchPolePosition","bestLap","forEach","lap","Results","FastestLap","Time","getFastestLap","Table","responsive","slice","map","driver","index","position","Constructor","Driver","nationality","givenName","familyName","code","AverageSpeed","speed","Q3","DriversStandings","driversStandings","permanentNumber","Constructors","toUpperCase","name","wins","points","DriversStandingsCard","overflow","overflowY","ConstructorsStandings","constructorsStandings","constructor","ConstructorsStandingsCard","MainFeed","setNextRaceData","setDriversStandings","previousRaceResult","setPreviousRaceResult","setTotalNumberOfRaces","setConstructorsStandings","loadingNextRaceData","setLoadingNextRaceData","loadingPreviousRace","setLoadingPreviousRace","loadingTeamsStandings","setLoadingTeamsStandings","loadingDriversStandings","setLoadingDriversStandings","fetchPreviousRaceResult","fetchNextRaceData","parseInt","fetchConstructorsStandings","StandingsTable","StandingsLists","ConstructorStandings","fetchDriversStandings","DriverStandings","minHeight","marginBottom","Spinner","animation","HomePage","RaceClassification","raceClassification","number","laps","status","rank","RaceQualifying","raceQualifying","Q1","Q2","Podium","eventClassification","span","order","RaceTab","raceInfo","eventCountryCode","raceDate","getHours","getMinutes","getLocalRaceDate","Map","coordinates","setMap","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","url","Marker","Popup","circuitId","firstGrandPrix","setFirstGrandPrix","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","CircuitTab","locality","lat","long","mapHeight","EventTabs","setEventCountryCode","catch","error","Tabs","defaultActiveKey","Tab","eventKey","title","RaceCountdown","setRaceInfo","loadingRaceInfo","setLoadingRaceInfo","fetchRaceInfo","fluid","Race","setRaceClassification","setRaceQualifying","loadingRaceResult","setLoadingRaceResult","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceResult","fetchRaceQualifying","RaceResult","useParams","RaceInfo","race","loadigCountryCode","Alert","localStorage","getItem","setSeason","seasonSchedule","setSeasonSchedule","seasonsYearsList","setSeasonsYearsList","loadingSeasonSchedule","setLoadingSchedule","fetchSeasonSchedule","Array","fill","_","i","reverse","Dropdown","Toggle","Menu","Item","onClick","e","target","textContent","setItem","ListGroup","SeasonSchedule","Error","ErrorPage","Standings","loadingConstructorsStandings","setLoadingConstructorsStandings","start","end","response","data","getFullYear","maxHeight","StandingsPage","App","basename","path","exact","component","SeasonRaces","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7fa38af.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\">\n          <Col>\n            <p id=\"author\"></p>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\">Ergast API</a>.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\">REST Countries API</a>.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\n\nconst GenericCard = ({\n  cardTitle,\n  cardBody,\n  cardFooter,\n  cardHeight,\n  variant,\n}) => {\n  return (\n    <Card\n      style={{ height: cardHeight }}\n      className=\"text-center\"\n      bg={variant}\n      text={variant === \"light\" ? \"dark\" : \"white\"}\n    >\n      <Card.Header>\n        <b>{cardTitle}</b>\n      </Card.Header>\n      <Card.Body>\n        <Card.Body>\n          <Row className=\"justify-content-md-center\">{cardBody}</Row>\n        </Card.Body>\n      </Card.Body>\n      {cardFooter !== undefined ? (\n        <Card.Footer>{cardFooter}</Card.Footer>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default GenericCard;\n","import React, { useState, useEffect } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Button from \"react-bootstrap/Button\";\n\nconst PreviousRaceCard = ({ previousRaceData }) => {\n  const [countryCode, setCountryCode] = useState(null);\n  const [loadingCountryCode, setLoadingCountryCode] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${previousRaceData.MRData.RaceTable.Races[0].Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setCountryCode(result[0].alpha2Code);\n          setLoadingCountryCode(false);\n        });\n    };\n\n    fetchCountryCode();\n  }, [previousRaceData.MRData.RaceTable.Races]);\n\n  return (\n    <GenericCard\n      cardTitle={\"Previous race\"}\n      cardBody={\n        <div>\n          <h5>Round {previousRaceData.MRData.RaceTable.round}</h5>\n          <h1>{previousRaceData.MRData.RaceTable.Races[0].raceName}</h1>\n          <h5>\n            {previousRaceData.MRData.RaceTable.Races[0].Circuit.circuitName}\n          </h5>\n          <h6>{previousRaceData.MRData.RaceTable.Races[0].date}</h6>\n          {loadingCountryCode ? null : (\n            <>\n              <br />\n              <CircleFlag\n                countryCode={countryCode.toLowerCase()}\n                height={120}\n              />\n            </>\n          )}\n        </div>\n      }\n      cardFooter={\n        <Link\n          to={`/race/${previousRaceData.MRData.RaceTable.season}/${previousRaceData.MRData.RaceTable.round}`}\n        >\n          <Button variant=\"dark\">Full race result</Button>\n        </Link>\n      }\n      cardHeight=\"30rem\"\n      variant={\"light\"}\n    />\n  );\n};\n\nexport default PreviousRaceCard;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCoutdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds }) => {\n    return (\n      <Row\n        style={{ marginTop: \"1%\" }}\n        className=\"justify-content-center text-center\"\n      >\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{days}</h1>\n          <h5>days</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{hours}</h1>\n          <h5>hours</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{minutes}</h1>\n          <h5>min.</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{seconds}</h1>\n          <h5>sec.</h5>\n        </Col>\n      </Row>\n    );\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCoutdown;\n","import React, { useState, useEffect } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Button from \"react-bootstrap/Button\";\nimport ClockCoutdown from \"../../Countdown/ClockCountdown\";\n\nconst NextRaceCard = ({ nextRaceData }) => {\n  const [countryCode, setCountryCode] = useState(null);\n  const [loadingCountryCode, setLoadingCountryCode] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${nextRaceData.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setCountryCode(result[0].alpha2Code);\n          setLoadingCountryCode(false);\n        });\n    };\n\n    fetchCountryCode();\n  }, [nextRaceData.Circuit.Location.country]);\n\n  return (\n    <GenericCard\n      cardTitle=\"Next race\"\n      cardBody={\n        <>\n          <h5>Round {nextRaceData.round}</h5>\n          <h1>{nextRaceData.raceName}</h1>\n          <h6>\n            {nextRaceData.Circuit.circuitName} | {nextRaceData.date} |{\" \"}\n            {nextRaceData.time.substring(0, nextRaceData.time.length - 1)}\n          </h6>\n          {loadingCountryCode ? null : (\n            <CircleFlag countryCode={countryCode.toLowerCase()} height={100} />\n          )}\n          <ClockCoutdown date={nextRaceData.date} time={nextRaceData.time} />\n        </>\n      }\n      cardFooter={\n        <Link to={`/race/${nextRaceData.season}/${nextRaceData.round}`}>\n          <Button variant=\"dark\">Race information</Button>\n        </Link>\n      }\n      cardHeight=\"30rem\"\n      variant={\"light\"}\n    />\n  );\n};\n\nexport default NextRaceCard;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DN\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\"\n};\n","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: \"27px\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useState, useEffect } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Table from \"react-bootstrap/Table\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport \"../Styles/Table.css\";\n\nconst PreviousRaceStats = ({ previousRaceData, totalNumberOfRaces }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [polePosition, setPolePosition] = useState(null);\n  const [loadingPolePosition, setLoadingPolePosition] = useState(true);\n\n  useEffect(() => {\n    const getFastestLap = () => {\n      let bestLap = previousRaceData.MRData.RaceTable.Races[0];\n\n      previousRaceData.MRData.RaceTable.Races.forEach((lap) => {\n        if (lap.Results[0].FastestLap === undefined) {\n          setFastestLap(null);\n          return;\n        } else {\n          if (\n            lap.Results[0].FastestLap.Time.time <\n            bestLap.Results[0].FastestLap.Time.time\n          ) {\n            bestLap = lap;\n          }\n        }\n\n        setFastestLap(bestLap);\n      });\n    };\n\n    const fetchPolePosition = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${previousRaceData.MRData.RaceTable.season}/${previousRaceData.MRData.RaceTable.round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setPolePosition(\n            result.MRData.RaceTable.Races[0].QualifyingResults[0]\n          );\n          setLoadingPolePosition(false);\n        });\n    };\n\n    fetchPolePosition();\n    getFastestLap();\n  }, [\n    previousRaceData.MRData.RaceTable.season,\n    previousRaceData.MRData.RaceTable.round,\n    previousRaceData.MRData.RaceTable.Races,\n  ]);\n\n  return (\n    <GenericCard\n      cardTitle={`Previous race: ${previousRaceData.MRData.RaceTable.Races[0].raceName}`}\n      cardBody={\n        <div>\n          <h4>\n            <b>Race result</b>\n          </h4>\n          <Table responsive>\n            <tbody className=\"justify-content-center\">\n              {previousRaceData.MRData.RaceTable.Races[0].Results.slice(\n                0,\n                3\n              ).map((driver, index) => (\n                <tr key={index}>\n                  <td>{driver.position}</td>\n                  <td>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </td>\n                  <td>\n                    <CircleFlag\n                      countryCode={CountriesCodeNationality[\n                        driver.Driver.nationality\n                      ].toLowerCase()}\n                      height={20}\n                    />\n                  </td>\n                  <td className=\"hideXS\">\n                    {driver.Driver.givenName} {driver.Driver.familyName}\n                  </td>\n                  <td className=\"showXS\">{driver.Driver.code}</td>\n                  <td>{driver.Time.time}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <h4>\n            <b>Fastest lap / Pole position</b>\n          </h4>\n          <Table responsive>\n            <tbody>\n              {fastestLap === null ? null : (\n                <tr>\n                  <td>FL</td>\n                  <td>\n                    <TeamColor\n                      constructorId={fastestLap.Constructor.constructorId}\n                    />\n                  </td>\n                  <td className=\"hideXS\">\n                    {fastestLap.Driver.givenName} {fastestLap.Driver.familyName}\n                  </td>\n                  <td className=\"showXS\">{fastestLap.Driver.code}</td>\n                  <td>{fastestLap.FastestLap.Time.time}</td>\n                  <td>{fastestLap.FastestLap.AverageSpeed.speed} kph</td>\n                </tr>\n              )}\n              {loadingPolePosition ? null : (\n                <tr>\n                  <td>PP</td>\n                  <td>\n                    <TeamColor\n                      constructorId={polePosition.Constructor.constructorId}\n                    />\n                  </td>\n                  <td>\n                    <CircleFlag\n                      countryCode={CountriesCodeNationality[\n                        polePosition.Driver.nationality\n                      ].toLowerCase()}\n                      height={20}\n                    />\n                  </td>\n                  <td className=\"hideXS\">\n                    {polePosition.Driver.givenName}{\" \"}\n                    {polePosition.Driver.familyName}\n                  </td>\n                  <td className=\"showXS\">{polePosition.Driver.code}</td>\n                  <td>{polePosition.Q3}</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      }\n      cardFooter={\n        <h4>\n          Round: {previousRaceData.MRData.RaceTable.round} /{\" \"}\n          {totalNumberOfRaces}\n        </h4>\n      }\n      cardHeight=\"30rem\"\n      variant={\"light\"}\n    />\n  );\n};\n\nexport default PreviousRaceStats;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  return (\n    <div style={style}>\n      <Table responsive=\"xs\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">No</th>\n            <th>Name</th>\n            <th>Team</th>\n            <th className=\"hideXS\">Wins</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\n              <td>\n                <Row className=\"justify-content-center text-center\">\n                  <Col xs={4} md={2}>\n                    <CircleFlag\n                      countryCode={CountriesCodeNationality[\n                        driver.Driver.nationality\n                      ].toLowerCase()}\n                      height={20}\n                    />\n                  </Col>\n                  <Col xs={4} md={2}>\n                    <TeamColor\n                      constructorId={driver.Constructors[0].constructorId}\n                    />\n                  </Col>\n                  <Col className=\"hideXS\" md={8}>\n                    {driver.Driver.givenName} {driver.Driver.familyName}\n                  </Col>\n                  <Col className=\"showXS\" xs={10}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </Col>\n                </Row>\n              </td>\n              <td>{driver.Constructors[0].name}</td>\n              <td className=\"hideXS\">{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n","import React from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport DriversStandings from \"../Standings/DriversStandings\";\n\nconst DriversStandingsCard = ({ driversStandings }) => {\n  return (\n    <GenericCard\n      cardTitle=\"Drivers' standings\"\n      cardBody={\n        <DriversStandings\n          style={{\n            overflow: \"hidden\",\n            overflowY: \"scroll\",\n            height: \"330px\",\n          }}\n          driversStandings={driversStandings}\n        />\n      }\n      cardHeight=\"27rem\"\n      variant={\"light\"}\n    />\n  );\n};\n\nexport default DriversStandingsCard;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst ConstructorsStandings = ({ style, constructorsStandings }) => {\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table responsive=\"sm\">\n          <thead>\n            <tr>\n              <th>Pos</th>\n              <th>Name</th>\n              <th className=\"hideXS\">Wins</th>\n              <th>Points</th>\n            </tr>\n          </thead>\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr key={index}>\n                <td>{constructor.position}</td>\n                <td>\n                  <Row>\n                    <Col xs={4}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          constructor.Constructor.nationality\n                        ].toLowerCase()}\n                        height={20}\n                      />\n                    </Col>\n                    <Col xs={2}>\n                      <TeamColor\n                        constructorId={constructor.Constructor.constructorId}\n                      />\n                    </Col>\n                    <Col xs={6}>{constructor.Constructor.name}</Col>\n                  </Row>\n                </td>\n                <td className=\"hideXS\">{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n","import React from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport ConstructorsStandings from \"../Standings/ConstructorsStandings\";\n\nconst ConstructorsStandingsCard = ({ constructorsStandings }) => {\n  return (\n    <GenericCard\n      cardTitle=\"Constructors' standings\"\n      cardBody={\n        <ConstructorsStandings\n          style={{\n            overflow: \"hidden\",\n            overflowY: \"scroll\",\n            height: \"330px\",\n          }}\n          constructorsStandings={constructorsStandings}\n        />\n      }\n      cardHeight=\"27rem\"\n      variant={\"light\"}\n    />\n  );\n};\n\nexport default ConstructorsStandingsCard;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport PreviousRaceCard from \"../MainFeed/PreviousRaceCard\";\nimport NextRaceCard from \"./NextRaceCard\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport PreviousRaceStats from \"./PreviousRaceStats\";\nimport DriversStandingsCard from \"./DriversStandingsCard\";\nimport ConstructorsStandingsCard from \"./ConstructorsStandingsCard\";\n\nconst MainFeed = () => {\n  const [nextRaceData, setNextRaceData] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [previousRaceResult, setPreviousRaceResult] = useState(null);\n  const [totalNumberOfRaces, setTotalNumberOfRaces] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingNextRaceData, setLoadingNextRaceData] = useState(true);\n  const [loadingPreviousRace, setLoadingPreviousRace] = useState(true);\n  const [loadingTeamsStandings, setLoadingTeamsStandings] = useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchPreviousRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/current/last/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setPreviousRaceResult(result);\n          setLoadingPreviousRace(false);\n          fetchNextRaceData(result.MRData.RaceTable.round);\n        });\n    };\n\n    const fetchNextRaceData = async (round) => {\n      await fetch(`https://ergast.com/api/f1/current.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          round >= result.MRData.RaceTable.Races.length\n            ? setNextRaceData(null)\n            : setNextRaceData(result.MRData.RaceTable.Races[parseInt(round)]);\n\n          setTotalNumberOfRaces(result.MRData.RaceTable.Races.length);\n          setLoadingNextRaceData(false);\n        });\n    };\n\n    const fetchConstructorsStandings = async () => {\n      await fetch(`https://ergast.com/api/f1/current/constructorStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setConstructorsStandings(\n            result.MRData.StandingsTable.StandingsLists[0].ConstructorStandings\n          );\n          setLoadingTeamsStandings(false);\n        });\n    };\n\n    const fetchDriversStandings = async () => {\n      await fetch(`https://ergast.com/api/f1/current/driverStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setDriversStandings(\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\n          );\n          setLoadingDriversStandings(false);\n        });\n    };\n\n    fetchPreviousRaceResult();\n    fetchDriversStandings();\n    fetchConstructorsStandings();\n  }, []);\n\n  return (\n    <Container style={{ minHeight: \"500px\" }}>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1 style={{ marginBottom: \"3%\" }}>\n            {loadingNextRaceData\n              ? null\n              : previousRaceResult.MRData.RaceTable.season}{\" \"}\n            Formula One\n          </h1>\n        </Col>\n      </Row>\n      {loadingPreviousRace || loadingNextRaceData ? (\n        <Row\n          className=\"justify-content-center text-center\"\n          style={{ minHeight: \"200px\" }}\n        >\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col lg={12}>\n            {nextRaceData !== null ? (\n              <>\n                <NextRaceCard nextRaceData={nextRaceData} />\n                <p></p>\n              </>\n            ) : null}\n          </Col>\n          <Col xs={12} lg={6}>\n            <>\n              <PreviousRaceCard previousRaceData={previousRaceResult} />\n              <p></p>\n            </>\n          </Col>\n          <Col xs={12} lg={6}>\n            <PreviousRaceStats\n              previousRaceData={previousRaceResult}\n              totalNumberOfRaces={totalNumberOfRaces}\n            />\n            <p></p>\n          </Col>\n        </Row>\n      )}\n      {loadingDriversStandings || loadingTeamsStandings ? null : (\n        <Row>\n          <Col>\n            <DriversStandingsCard driversStandings={driversStandings} />\n            <p></p>\n          </Col>\n          <Col>\n            <ConstructorsStandingsCard\n              constructorsStandings={constructorsStandings}\n            />\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default MainFeed;\n","import React from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport MainFeed from \"../components/Stats/MainFeed/MainFeed\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <NavBar />\n      <MainFeed />\n      <Footer />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst RaceClassification = ({ raceClassification }) => {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">Number</th>\n            <th>Driver</th>\n            <th className=\"hideXS\">Team</th>\n            <th className=\"hideXS\">Laps</th>\n            <th>Time/Retired</th>\n            <th>Pts</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td>\n                <Row className=\"row nopadding\">\n                  <Col xs={2} md={1}>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6} md={11}>\n                    {driver.Driver.givenName} {driver.Driver.familyName}\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../Styles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">Number</th>\n            <th>Driver</th>\n            <th className=\"hideXS\">Team</th>\n            <th>Q1</th>\n            <th>Q2</th>\n            <th>Q3</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceQualifying.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td className=\"hideXS\">\n                <Row className=\"row nopadding\">\n                  <Col xs={1}>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={11}>\n                    {driver.Driver.givenName} {driver.Driver.familyName}\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"showXS\">\n                <Row className=\"row nopadding\">\n                  <Col xs={2}>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td>\n                {driver.hasOwnProperty(\"Q1\")\n                  ? driver.Q1 === \"\"\n                    ? \"-\"\n                    : driver.Q1\n                  : \"-\"}\n              </td>\n              <td>{driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}</td>\n              <td>{driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default RaceQualifying;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst Podium = ({ eventClassification }) => {\n  return (\n    <div>\n      <Container>\n        <Row className=\"text-center\">\n          <Col\n            xs={{ span: 12, order: \"second\" }}\n            md={{ span: 4, order: \"first\" }}\n          >\n            <div id=\"secondPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h2>2nd</h2>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[1].number}{\" \"}\n                    {eventClassification[1].Driver.givenName}{\" \"}\n                    {eventClassification[1].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <CircleFlag\n                    countryCode={CountriesCodeNationality[\n                      eventClassification[1].Driver.nationality\n                    ].toLowerCase()}\n                    height=\"60\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[1].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[1].hasOwnProperty(\"Time\")\n                      ? eventClassification[1].Time.time\n                      : eventClassification[1].hasOwnProperty(\"status\") &&\n                        eventClassification[1].status !== \"Finished\"\n                      ? eventClassification[1].status\n                      : eventClassification[1].hasOwnProperty(\"Q3\")\n                      ? eventClassification[1].Q3\n                      : eventClassification[1].Q1}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col\n            xs={{ span: 12, order: \"first\" }}\n            md={{ span: 4, order: \"second\" }}\n          >\n            <div id=\"firstPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h1>1st</h1>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[0].number}{\" \"}\n                    {eventClassification[0].Driver.givenName}{\" \"}\n                    {eventClassification[0].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <CircleFlag\n                    countryCode={CountriesCodeNationality[\n                      eventClassification[0].Driver.nationality\n                    ].toLowerCase()}\n                    height=\"60\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[0].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[0].hasOwnProperty(\"Time\")\n                      ? eventClassification[0].Time.time\n                      : eventClassification[0].hasOwnProperty(\"status\") &&\n                        eventClassification[0].status !== \"Finished\"\n                      ? eventClassification[0].status\n                      : eventClassification[0].hasOwnProperty(\"Q3\")\n                      ? eventClassification[0].Q3\n                      : eventClassification[0].Q1}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={{ span: 12, order: \"last\" }} md={{ span: 4, order: \"last\" }}>\n            <div id=\"thirdPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>3rd</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[2].number}{\" \"}\n                    {eventClassification[2].Driver.givenName}{\" \"}\n                    {eventClassification[2].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <CircleFlag\n                    countryCode={CountriesCodeNationality[\n                      eventClassification[2].Driver.nationality\n                    ].toLowerCase()}\n                    height=\"60\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[2].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[2].hasOwnProperty(\"Time\")\n                      ? eventClassification[2].Time.time\n                      : eventClassification[2].hasOwnProperty(\"status\") &&\n                        eventClassification[2].status !== \"Finished\"\n                      ? eventClassification[2].status\n                      : eventClassification[2].hasOwnProperty(\"Q3\")\n                      ? eventClassification[2].Q3\n                      : eventClassification[2].Q1}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Podium;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  const getLocalRaceDate = (date, time) => {\n    const raceDate = new Date(date + \"T\" + time);\n    const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n    const minutes =\n      (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n    return hours + \":\" + minutes + \":00\";\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1>{raceInfo.raceName}</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{raceInfo.date}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag countryCode={eventCountryCode} height=\"100\" />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={12}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Circuit = ({ circuitId }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(`https://ergast.com/api/f1/circuits/${circuitId}/races.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGrandPrix(result.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [circuitId]);\n\n  return (\n    <div>\n      {loadingFastestLap || loadingFirstGrandPrix ? null : (\n        <div>\n          {fastestLap === undefined ? null : (\n            <Row>\n              <h5>\n                Lap record: {fastestLap.Results[0].FastestLap.Time.time}\n                {\" - \"}\n                {fastestLap.season}\n                {\" - \"}\n                {fastestLap.Results[0].Driver.givenName}{\" \"}\n                {fastestLap.Results[0].Driver.familyName}{\" \"}\n              </h5>\n            </Row>\n          )}\n          <Row>\n            <h5>First grand prix: {firstGrandPrix}</h5>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Circuit;\n","import React from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Circuit from \"./CircuitData\";\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col>\n          <h1>{raceInfo.Circuit.circuitName}</h1>\n          <h3>\n            <CircleFlag countryCode={eventCountryCode} height=\"30\" />{\" \"}\n            {raceInfo.Circuit.Location.country}\n          </h3>\n          <h3>{raceInfo.Circuit.Location.locality}</h3>\n          <Circuit circuitId={raceInfo.Circuit.circuitId} />\n        </Col>\n        <Col md=\"auto\">\n          <Map\n            coordinates={[\n              raceInfo.Circuit.Location.lat,\n              raceInfo.Circuit.Location.long,\n            ]}\n            circuitName={raceInfo.Circuit.circuitName}\n            mapHeight={{ height: \"600px\" }}\n          ></Map>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport EventPodium from \"./Podium\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  const [eventCountryCode, setEventCountryCode] = useState(null);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${raceInfo.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setEventCountryCode(result[0].alpha2Code.toLowerCase());\n        })\n        .catch((error) => setEventCountryCode(null));\n    };\n\n    fetchCountryCode();\n  }, [raceInfo.Circuit.Location.country]);\n\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"race\" title=\"Race\">\n          <Container style={{ minHeight: \"250px\" }}>\n            <RaceTab raceInfo={raceInfo} eventCountryCode={eventCountryCode} />\n          </Container>\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : null}\n        </Tab>\n\n        <Tab eventKey=\"circuit\" title=\"Circuit\">\n          <Container style={{ minHeight: \"250px\" }}>\n            <CircuitTab\n              raceInfo={raceInfo}\n              eventCountryCode={eventCountryCode}\n            />\n          </Container>\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : null}\n        </Tab>\n\n        {raceClassification != null ? (\n          <Tab eventKey=\"podium\" title=\"Podium\">\n            <Container style={{ minHeight: \"250px\" }}>\n              <EventPodium eventClassification={raceClassification} />\n            </Container>\n            <RaceClassification raceClassification={raceClassification} />\n          </Tab>\n        ) : null}\n\n        {raceQualifying != null ? (\n          <Tab eventKey=\"qualifying\" title=\"Qualifying\">\n            <Container style={{ minHeight: \"250px\" }}>\n              <EventPodium eventClassification={raceQualifying} />\n            </Container>\n            <RaceQualifying raceQualifying={raceQualifying} />\n          </Tab>\n        ) : null}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport EventTabs from \"./EventTabs\";\nimport { Redirect } from \"react-router-dom\";\nimport ClockCoutdown from \"../../Countdown/ClockCountdown\";\n\nconst RaceCountdown = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    fetchRaceInfo();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"700px\" }}>\n        {loadingRaceInfo ? null : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <EventTabs season={season} round={round} raceInfo={raceInfo} />\n            <Row className=\"justify-content-center text-center\">\n              <ClockCoutdown date={raceInfo.date} time={raceInfo.time} />\n            </Row>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default RaceCountdown;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport RaceCountdown from \"./RaceCountdown\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"700px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <RaceCountdown season={season} round={round} />\n        ) : (\n          <Container>\n            <EventTabs\n              raceInfo={raceInfo}\n              raceClassification={raceClassification}\n              raceQualifying={raceQualifying}\n            />\n          </Container>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <div>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default RaceResult;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst RaceInfo = ({ race }) => {\n  const [countryCode, setCountryCode] = useState(null);\n  const [loadigCountryCode, setLoadingCountryCode] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${race.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setCountryCode(result[0].alpha2Code.toLowerCase());\n          setLoadingCountryCode(false);\n        })\n        .catch((error) => setCountryCode(null));\n    };\n\n    fetchCountryCode();\n  }, [race.Circuit.Location.country]);\n\n  const getLocalRaceDate = (date, time) => {\n    const raceDate = new Date(date + \"T\" + time);\n    const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n    const minutes =\n      (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n    return hours + \":\" + minutes + \":00\";\n  };\n\n  return (\n    <Row className=\"center-xs justify-content-between\">\n      <Col xs={12} md={12} lg=\"auto\" className=\"text-center\">\n        {loadigCountryCode && countryCode != null ? null : (\n          <CircleFlag\n            countryCode={countryCode}\n            height={80}\n            style={{ marginBottom: \"2%\" }}\n          />\n        )}\n      </Col>\n      <Col xs={12} md={12} lg=\"auto\">\n        <Link to={\"/race/\" + race.season + \"/\" + race.round}>\n          <Alert variant=\"primary\">Round #{race.round}</Alert>\n        </Link>\n      </Col>\n      <Col xs={12} md={12} lg={6} className=\"center-xs\">\n        <h3>{race.raceName}</h3>\n        <h5>{race.Circuit.circuitName}</h5>\n      </Col>\n      <Col xs={12} md={12} lg={3} className=\"center-xs center\">\n        <h5>{race.date}</h5>\n        <h5>\n          {race.hasOwnProperty(\"time\")\n            ? getLocalRaceDate(race.date, race.time)\n            : null}\n        </h5>\n      </Col>\n    </Row>\n  );\n};\n\nexport default RaceInfo;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport RaceInfo from \"./RaceInfo\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"./Races.css\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst Races = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\n    localStorage.getItem(\"seasonScheduleInput\") !== null\n      ? localStorage.getItem(\"seasonScheduleInput\")\n      : \"2021\"\n  );\n  const [seasonSchedule, setSeasonSchedule] = useState(null);\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [loadingSeasonSchedule, setLoadingSchedule] = useState(true);\n\n  useEffect(() => {\n    const fetchSeasonSchedule = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setSeasonSchedule(result.MRData.RaceTable.Races);\n          setLoadingSchedule(false);\n        });\n    };\n\n    setSeasonsYearsList(\n      Array(\"2021\" - FIRST_SEASON + 1)\n        .fill()\n        .map((_, i) => FIRST_SEASON + i)\n        .reverse()\n    );\n\n    fetchSeasonSchedule();\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n    localStorage.setItem(\"seasonScheduleInput\", text);\n    setLoadingSchedule(true);\n  };\n\n  return (\n    <Container>\n      {loadingSeasonSchedule ? (\n        <Container style={{ minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <h1 style={{ marginBottom: \"3%\" }}>Formula One</h1>\n            <Spinner animation=\"border\" />\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{ minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>Formula One - {season} season</h1>\n            </Col>\n          </Row>\n          <Row\n            className=\"justify-content-center text-center\"\n            style={{ marginBottom: \"2%\" }}\n          >\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu\">\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <ListGroup>\n            {seasonSchedule.map((race, index) => (\n              <ListGroup.Item key={index}>\n                <RaceInfo race={race} />\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default Races;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Races from \"../components/Races/Races\";\n\nconst SeasonSchedule = () => {\n  return (\n    <div>\n      <NavBar />\n      <Races />\n      <Footer />\n    </div>\n  );\n};\n\nexport default SeasonSchedule;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { BiError } from \"react-icons/bi\";\nimport { RiArrowGoBackLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\n\nconst Error = () => {\n  return (\n    <Container style={{ minHeight: \"500px\" }}>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <BiError size={300} />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <h1>Ups... Something went wrong!</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <Link to=\"\">\n            <RiArrowGoBackLine size={50} />\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\nimport Error from \"../components/Error/Error\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\n\nconst ErrorPage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Error />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, { useState, useEffect } from \"react\";\nimport ConstructorsStandings from \"./ConstructorsStandings\";\nimport DriversStandings from \"./DriversStandings\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nconst Standings = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\"2021\");\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingConstructorsStandings, setLoadingConstructorsStandings] =\n    useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchConstructorsStandings = async () => {\n      setLoadingConstructorsStandings(true);\n      const response = await fetch(\n        `https://ergast.com/api/f1/${season}/constructorStandings.json`\n      );\n      const data = await response.json();\n\n      if (data.MRData.StandingsTable.StandingsLists[0] !== undefined) {\n        setConstructorsStandings(\n          data.MRData.StandingsTable.StandingsLists[0].ConstructorStandings\n        );\n      } else {\n        setConstructorsStandings(null);\n      }\n\n      setLoadingConstructorsStandings(false);\n    };\n\n    const fetchDriversStandings = async () => {\n      setLoadingDriversStandings(true);\n      const response = await fetch(\n        `https://ergast.com/api/f1/${season}/driverStandings.json`\n      );\n      const data = await response.json();\n\n      setDriversStandings(\n        data.MRData.StandingsTable.StandingsLists[0].DriverStandings\n      );\n      setLoadingDriversStandings(false);\n    };\n\n    function fillArrayBetweenTwoNumbers(start, end) {\n      setSeasonsYearsList(\n        Array(end - start + 1)\n          .fill()\n          .map((_, i) => start + i)\n          .reverse()\n      );\n    }\n\n    fetchConstructorsStandings();\n    fetchDriversStandings();\n    fillArrayBetweenTwoNumbers(FIRST_SEASON, new Date().getFullYear());\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n  };\n  return (\n    <div>\n      {!loadingConstructorsStandings && !loadingDriversStandings ? (\n        <Container style={{ minHeight: \"700px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>{season} Formula One season</h1>\n            </Col>\n          </Row>\n          <Row\n            className=\"justify-content-center text-center\"\n            style={{ marginBottom: \"2%\" }}\n          >\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  style={{ maxHeight: \"500px\", overflowY: \"scroll\" }}\n                >\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col md=\"auto\">\n              <h1>Constructors' standings</h1>\n            </Col>\n            <Row>\n              <Col>\n                <ConstructorsStandings\n                  constructorsStandings={constructorsStandings}\n                />\n              </Col>\n            </Row>\n            <Col md=\"auto\">\n              <h1>Drivers' standings</h1>\n            </Col>\n            <Row>\n              <Col>\n                <DriversStandings driversStandings={driversStandings} />\n              </Col>\n            </Row>\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{ minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <h1 style={{ marginBottom: \"3%\" }}>Formula One</h1>\n            <Spinner animation=\"border\" />\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default Standings;\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Standings from \"../components/Stats/Standings/Standings\";\n\nconst StandingsPage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Standings />\n      <Footer />\n    </div>\n  );\n};\n\nexport default StandingsPage;\n","import \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport RaceResult from \"./pages/RaceResult\";\nimport SeasonRaces from \"./pages/SeasonRaces\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport StandingsPage from \"./pages/StandingsPage\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route path=\"/\" exact={true} component={HomePage} />\n        <Route\n          path=\"/race/:season/:round\"\n          exact={true}\n          component={RaceResult}\n        />\n        <Route path=\"/schedule\" exact={true} component={SeasonRaces} />\n        <Route path=\"/error\" exact={true} component={ErrorPage} />\n        <Route path=\"/standings\" exact={true} component={StandingsPage} />\n        <Route component={ErrorPage}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}