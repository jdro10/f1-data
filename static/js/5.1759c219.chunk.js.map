{"version":3,"sources":["components/Standings/DriversStandings.js","data/ConstructorLineup.js","components/Standings/ConstructorsStandings.js","components/Cards/GenericCard.js","components/MainFeed/PreviousRaceCard.js","components/Countdown/ClockCountdown.js","components/MainFeed/NextRaceCard.js","components/MainFeed/NextEventInformation.js","components/MainFeed/PreviousRaceStats.js","components/MainFeed/DriversStandingsCard.js","components/MainFeed/ConstructorsStandingsCard.js","components/Cards/LoadingCard.js","components/MainFeed/MainFeed.js","pages/HomePage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","data/config.js"],"names":["boldFont","fontWeight","margin","padding","display","DriversStandings","style","driversStandings","history","useHistory","theme","useContext","ThemeContext","className","responsive","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","permanentNumber","xs","lg","countryCode","undefined","CountriesCodeNationality","nationality","toLowerCase","height","constructorId","Constructors","length","familyName","toUpperCase","givenName","fontSize","name","wins","points","ConstructorLineup","red_bull","williams","mercedes","mclaren","racing_point","toro_rosso","renault","ferrari","haas","alfa","alphatauri","aston_martin","alpine","ConstructorsStandings","constructorsStandings","constructorSeason","showEngine","keys","Table","hasOwnProperty","parseInt","constructor","wikiConstructorLink","Constructor","url","window","open","Row","Col","TeamColor","marginTop","md","GenericCard","cardBody","cardHeight","Card","borderRadius","overflow","bg","text","Body","Container","PreviousRaceCard","lastRace","MRData","RaceTable","Races","raceName","Circuit","circuitName","round","convertDate","date","getLocalRaceDate","time","Location","country","locality","to","season","Button","ClockCountdown","size","Date","now","getTime","split","renderer","days","hours","minutes","seconds","completed","NextRaceCard","nextRace","maxWidth","NextEventInformation","nextEvent","smallFont","Sprint","xl","FirstPractice","SecondPractice","ThirdPractice","Qualifying","driverName","PreviousRaceStats","useState","fastestLap","setFastestLap","polePosition","setPolePosition","poleTime","setPoleTime","loadingPoleTime","setLoadingPoleTime","loadingPolePosition","setLoadingPolePosition","rowClick","useEffect","Results","forEach","lap","FastestLap","rank","result","grid","fetch","then","res","json","QualifyingResults","Q3","slice","sm","Time","config","current_season","current_season_n_races","previous_season_n_races","DriversStandingsCard","overflowY","ConstructorsStandingsCard","LoadingCard","hasButton","hasFlag","Placeholder","animation","MainFeed","setNextRace","setLastRace","setDriversStandings","loadingNextRace","setLoadingNextRace","loadingLastRace","setLoadingLastRace","setConstructorsStandings","loadingTeamsStandings","setLoadingTeamsStandings","loadingDriversStandings","setLoadingDriversStandings","fetchLastRaceResult","fetchNextRaceData","fetchConstructorsStandings","StandingsTable","StandingsLists","fetchDriversStandings","DriverStandings","minHeight","ConstructorStandings","HomePage","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","TeamColors","force_india","sauber","manor","lotus_f1","marussia","caterham","width","backgroundColor","NavBar","setTheme","localStorage","setItem","textDecoration","Brand","Collapse","onChange","toggle","themeToggler","checked","href","id","textAlign","color","raceDate","getHours","getMinutes","dateToConvert","first_season"],"mappings":"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","file":"static/js/5.1759c219.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\n\r\nconst DriversStandings = ({ style, driversStandings }) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const rowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      <Table\r\n        className=\"table-hover table-striped standings-table\"\r\n        responsive=\"xs\"\r\n        variant={theme}\r\n      >\r\n        <thead>\r\n          <tr className=\"text-center\">\r\n            <th>POS</th>\r\n            <th className=\"hideXS\">NO</th>\r\n            <th>NAME/TEAM</th>\r\n            <th className=\"hideXS\">WINS</th>\r\n            <th>POINTS</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {driversStandings.map((driver, index) => (\r\n            <tr\r\n              key={index}\r\n              className=\"align-middle text-center\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rowClick(driver.Driver.driverId)}\r\n            >\r\n              <td>{driver.position}</td>\r\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\r\n              <td>\r\n                <Row className=\"g-0\">\r\n                  <Col xs={2} lg={1} className=\"align-self-center\">\r\n                    <CircleFlag\r\n                      countryCode={\r\n                        CountriesCodeNationality[driver.Driver.nationality] !==\r\n                        undefined\r\n                          ? CountriesCodeNationality[\r\n                              driver.Driver.nationality\r\n                            ].toLowerCase()\r\n                          : null\r\n                      }\r\n                      height={20}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={2} lg={1}>\r\n                    <TeamColor\r\n                      constructorId={\r\n                        driver.Constructors.length > 0\r\n                          ? driver.Constructors[0].constructorId\r\n                          : null\r\n                      }\r\n                      height=\"42px\"\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={8} className=\"text-start\">\r\n                    <Row>\r\n                      <Col className=\"showXS\">\r\n                        <p style={boldFont}>\r\n                          {driver.Driver.familyName.toUpperCase()}\r\n                        </p>\r\n                      </Col>\r\n\r\n                      <Col className=\"hideXS\">\r\n                        {driver.Driver.givenName}{\" \"}\r\n                        <p style={boldFont}>\r\n                          {driver.Driver.familyName.toUpperCase()}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col style={{ fontSize: \"13px\" }}>\r\n                        {driver.Constructors.length > 0\r\n                          ? driver.Constructors[0].name\r\n                          : \"-\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"hideXS\">{driver.wins}</td>\r\n              <td>{driver.points}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriversStandings;\r\n","export const ConstructorLineup = {\r\n  2019: {\r\n    red_bull: [\"Verstappen\", \"Gasly\", \"HONDA\"],\r\n    williams: [\"Russell\", \"Kubica\", \"MERCEDES\"],\r\n    mercedes: [\"Hamilton\", \"Bottas\", \"MERCEDES\"],\r\n    mclaren: [\"Norris\", \"Sainz\", \"RENAULT\"],\r\n    racing_point: [\"Pérez\", \"Stroll\", \"MERCEDES\"],\r\n    toro_rosso: [\"Albon\", \"Kvyat\", \"HONDA\"],\r\n    renault: [\"Ricciardo\", \"Hülkenberg\", \"RENAULT\"],\r\n    ferrari: [\"Vettel\", \"Leclerc\", \"FERRARI\"],\r\n    haas: [\"Grosjean\", \"Magnussen\", \"FERRARI\"],\r\n    alfa: [\"Räikkönen\", \"Giovinazzi\", \"FERRARI\"],\r\n  },\r\n  2020: {\r\n    red_bull: [\"Verstappen\", \"Albon\", \"HONDA\"],\r\n    williams: [\"Russell\", \"Latifi\", \"MERCEDES\"],\r\n    mercedes: [\"Hamilton\", \"Bottas\", \"MERCEDES\"],\r\n    mclaren: [\"Norris\", \"Sainz\", \"RENAULT\"],\r\n    racing_point: [\"Pérez\", \"Stroll\", \"MERCEDES\"],\r\n    alphatauri: [\"Gasly\", \"Kvyat\", \"HONDA\"],\r\n    renault: [\"Ricciardo\", \"Ocon\", \"RENAULT\"],\r\n    ferrari: [\"Vettel\", \"Leclerc\", \"FERRARI\"],\r\n    haas: [\"Grosjean\", \"Magnussen\", \"FERRARI\"],\r\n    alfa: [\"Räikkönen\", \"Giovinazzi\", \"FERRARI\"],\r\n  },\r\n  2021: {\r\n    red_bull: [\"Verstappen\", \"Pérez\", \"HONDA\"],\r\n    williams: [\"Russell\", \"Latifi\", \"MERCEDES\"],\r\n    mercedes: [\"Hamilton\", \"Bottas\", \"MERCEDES\"],\r\n    mclaren: [\"Norris\", \"Ricciardo\", \"MERCEDES\"],\r\n    aston_martin: [\"Vettel\", \"Stroll\", \"MERCEDES\"],\r\n    alphatauri: [\"Gasly\", \"Tsunoda\", \"HONDA\"],\r\n    alpine: [\"Alonso\", \"Ocon\", \"RENAULT\"],\r\n    ferrari: [\"Leclerc\", \"Sainz\", \"MERCEDES\"],\r\n    haas: [\"Schumacher\", \"Mazepin\", \"FERRARI\"],\r\n    alfa: [\"Räikkönen\", \"Giovinazzi\", \"FERRARI\"],\r\n  },\r\n  2022: {\r\n    red_bull: [\"Verstappen\", \"Pérez\", \"RED BULL POWERTRAINS\"],\r\n    williams: [\"Latifi\", \"Albon\", \"MERCEDES\"],\r\n    mercedes: [\"Hamilton\", \"Russell\", \"MERCEDES\"],\r\n    mclaren: [\"Norris\", \"Ricciardo\", \"MERCEDES\"],\r\n    aston_martin: [\"Vettel\", \"Stroll\", \"MERCEDES\"],\r\n    alphatauri: [\"Gasly\", \"Tsunoda\", \"RED BULL POWERTRAINS\"],\r\n    alpine: [\"Alonso\", \"Ocon\", \"RENAULT\"],\r\n    ferrari: [\"Leclerc\", \"Sainz\", \"MERCEDES\"],\r\n    haas: [\"Schumacher\", \"Mazepin\", \"FERRARI\"],\r\n    alfa: [\"Bottas\", \"Zhou\", \"FERRARI\"],\r\n  },\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport { ConstructorLineup } from \"../../data/ConstructorLineup\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\n\r\nconst ConstructorsStandings = ({\r\n  style,\r\n  constructorsStandings,\r\n  constructorSeason,\r\n  showEngine,\r\n}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const rowClick = (wikiConstructorLink) => {\r\n    window.open(wikiConstructorLink, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      {constructorsStandings &&\r\n      constructorsStandings.keys(constructorsStandings).length !== 0 ? (\r\n        <Table\r\n          className=\"table-hover standings-table table-striped\"\r\n          responsive=\"sm\"\r\n          variant={theme}\r\n        >\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th>POS</th>\r\n              <th>NAME</th>\r\n              {ConstructorLineup.hasOwnProperty(parseInt(constructorSeason)) &&\r\n              showEngine ? (\r\n                <th className=\"text-start hideXS\">ENGINE</th>\r\n              ) : null}\r\n              <th className=\"hideXS\">WINS</th>\r\n              <th>POINTS</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {constructorsStandings.map((constructor, index) => (\r\n              <tr\r\n                key={index}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => rowClick(constructor.Constructor.url)}\r\n                className=\"align-middle text-center\"\r\n              >\r\n                <td>{constructor.position}</td>\r\n                <td>\r\n                  <Row className=\"g-0\">\r\n                    <Col xs={2} lg={1} className=\"align-self-center\">\r\n                      <CircleFlag\r\n                        countryCode={CountriesCodeNationality[\r\n                          constructor.Constructor.nationality\r\n                        ].toLowerCase()}\r\n                        height={20}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col xs={2} lg={1}>\r\n                      <TeamColor\r\n                        constructorId={constructor.Constructor.constructorId}\r\n                        height={\r\n                          ConstructorLineup.hasOwnProperty(\r\n                            parseInt(constructorSeason)\r\n                          )\r\n                            ? \"43px\"\r\n                            : \"27px\"\r\n                        }\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col xs={8} className=\"text-start no-wrap\">\r\n                      <Row>\r\n                        <Col>\r\n                          <p style={boldFont}>\r\n                            {constructor.Constructor.name.toUpperCase()}\r\n                          </p>\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {ConstructorLineup.hasOwnProperty(\r\n                        parseInt(constructorSeason)\r\n                      ) ? (\r\n                        <Row style={{ fontSize: \"13px\" }}>\r\n                          <Col>\r\n                            {\r\n                              ConstructorLineup[parseInt(constructorSeason)][\r\n                                constructor.Constructor.constructorId\r\n                              ][0]\r\n                            }{\" \"}\r\n                            /{\" \"}\r\n                            {\r\n                              ConstructorLineup[parseInt(constructorSeason)][\r\n                                constructor.Constructor.constructorId\r\n                              ][1]\r\n                            }\r\n                          </Col>\r\n                        </Row>\r\n                      ) : null}\r\n                    </Col>\r\n                  </Row>\r\n                </td>\r\n                {ConstructorLineup.hasOwnProperty(\r\n                  parseInt(constructorSeason)\r\n                ) && showEngine ? (\r\n                  <td className=\"text-start hideXS\">\r\n                    <p style={boldFont}>\r\n                      {\r\n                        ConstructorLineup[parseInt(constructorSeason)][\r\n                          constructor.Constructor.constructorId\r\n                        ][2]\r\n                      }\r\n                    </p>\r\n                  </td>\r\n                ) : null}\r\n                <td className=\"hideXS\">{constructor.wins}</td>\r\n                <td>{constructor.points}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <Row\r\n          className=\"justify-content-center text-center\"\r\n          style={{ marginTop: \"2%\" }}\r\n        >\r\n          <Col md=\"auto\">\r\n            <h3>\r\n              There's no constructors' standings data available for this season.\r\n            </h3>\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConstructorsStandings;\r\n","import React, { useContext } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst GenericCard = ({ cardBody, cardHeight }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <Card\r\n      style={{ height: cardHeight, borderRadius: \"18px\", overflow: \"hidden\" }}\r\n      className=\"text-center generic-card\"\r\n      bg={theme}\r\n      text={theme === \"light\" ? \"dark\" : \"light\"}\r\n    >\r\n      <Card.Body>\r\n        <Container>{cardBody}</Container>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GenericCard;\r\n","import React from \"react\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\n\r\nconst PreviousRaceCard = ({ lastRace }) => {\r\n  return (\r\n    <GenericCard\r\n      cardBody={\r\n        <>\r\n          <h1>{lastRace.MRData.RaceTable.Races[0].raceName.toUpperCase()}</h1>\r\n          <h5>\r\n            {lastRace.MRData.RaceTable.Races[0].Circuit.circuitName.toUpperCase()}\r\n          </h5>\r\n          <h5>ROUND {lastRace.MRData.RaceTable.round}</h5>\r\n          <h6>{convertDate(lastRace.MRData.RaceTable.Races[0].date)}</h6>\r\n          <h6>\r\n            {getLocalRaceDate(\r\n              lastRace.MRData.RaceTable.Races[0].date,\r\n              lastRace.MRData.RaceTable.Races[0].time\r\n            )}\r\n          </h6>\r\n          <CircleFlag\r\n            countryCode={CountriesCodeNationality[\r\n              lastRace.MRData.RaceTable.Races[0].Circuit.Location.country\r\n            ].toLowerCase()}\r\n            height={100}\r\n            style={{ marginTop: \"10px\" }}\r\n          />\r\n          <h5 style={{ marginTop: \"27px\" }}>\r\n            {lastRace.MRData.RaceTable.Races[0].Circuit.Location.country.toUpperCase()}\r\n          </h5>\r\n          <h5>\r\n            {lastRace.MRData.RaceTable.Races[0].Circuit.Location.locality.toUpperCase()}\r\n          </h5>\r\n\r\n          <Link\r\n            to={`/race/${lastRace.MRData.RaceTable.season}/${lastRace.MRData.RaceTable.round}`}\r\n          >\r\n            <Button\r\n              style={{ marginTop: \"25px\" }}\r\n              className=\"main-btn\"\r\n              variant=\"secondary\"\r\n            >\r\n              FULL RACE RESULT\r\n            </Button>\r\n          </Link>\r\n        </>\r\n      }\r\n      cardHeight=\"29.5rem\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default PreviousRaceCard;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nconst ClockCountdown = ({ date, time, size }) => {\r\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      return (\r\n        <>\r\n          {size === \"big\" ? (\r\n            <Col>\r\n              <h1 className=\"countdown-font\">EVENT IN PROGRESS/ENDED</h1>\r\n              <h5 className=\"countdown-font\">WAITING FOR RESULTS</h5>\r\n            </Col>\r\n          ) : size === \"small\" ? (\r\n            <Col>\r\n              <h1 className=\"countdown-font-small\">EVENT IN PROGRESS/ENDED</h1>\r\n            </Col>\r\n          ) : (\r\n            <Col>\r\n              <h1>EVENT IN PROGRESS/ENDED</h1>\r\n              <h5>WAITING FOR RESULTS</h5>\r\n            </Col>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {size === \"big\" ? (\r\n            <>\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{days}</h1>\r\n                <h1>DAYS</h1>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{hours}</h1>\r\n                <h1>HRS</h1>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{minutes}</h1>\r\n                <h1>MIN</h1>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{seconds}</h1>\r\n                <h1>SEC</h1>\r\n              </Col>\r\n            </>\r\n          ) : size === \"small\" ? (\r\n            <>\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{days} d</h1>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{hours} hrs</h1>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{minutes} min</h1>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{seconds} sec</h1>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Col xs={3} lg={1}>\r\n                <h1>{days}</h1>\r\n                <h5>DAYS</h5>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={1}>\r\n                <h1>{hours}</h1>\r\n                <h5>HRS</h5>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={1}>\r\n                <h1>{minutes}</h1>\r\n                <h5>MIN</h5>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={1}>\r\n                <h1>{seconds}</h1>\r\n                <h5>SEC</h5>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Countdown\r\n      date={\r\n        Date.now() +\r\n        (new Date(date).getTime() +\r\n          time.split(\":\")[0] * 3600000 +\r\n          time.split(\":\")[1] * 60000 -\r\n          new Date().getTime())\r\n      }\r\n      renderer={renderer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ClockCountdown;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ClockCoutdown from \"../Countdown/ClockCountdown\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 100,\r\n};\r\n\r\nconst NextRaceCard = ({ nextRace }) => {\r\n  return (\r\n    <GenericCard\r\n      cardBody={\r\n        <>\r\n          <h1 style={boldFont}>\r\n            {nextRace === undefined\r\n              ? \"TBA GRAND PRIX\"\r\n              : nextRace.raceName.toUpperCase()}\r\n          </h1>\r\n          <h5>\r\n            {nextRace === undefined\r\n              ? \"TBA\"\r\n              : nextRace.Circuit.circuitName.toUpperCase()}\r\n          </h5>\r\n          <h5>\r\n            {nextRace === undefined ? \"ROUND 1\" : \"ROUND \" + nextRace.round}\r\n          </h5>\r\n          <h6>{nextRace === undefined ? \"TBA\" : convertDate(nextRace.date)}</h6>\r\n          <h6>\r\n            {nextRace === undefined\r\n              ? \"TBA\"\r\n              : getLocalRaceDate(nextRace.date, nextRace.time)}\r\n          </h6>\r\n          <CircleFlag\r\n            countryCode={\r\n              nextRace === undefined\r\n                ? null\r\n                : CountriesCodeNationality[\r\n                    nextRace.Circuit.Location.country\r\n                  ].toLowerCase()\r\n            }\r\n            height={100}\r\n          />\r\n          <p></p>\r\n          {nextRace === undefined ? null : (\r\n            <Row className=\"justify-content-center\">\r\n              <ClockCoutdown date={nextRace.date} time={nextRace.time} />\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            {nextRace === undefined ? null : (\r\n              <Link to={`/race/${nextRace.season}/${nextRace.round}`}>\r\n                <Button\r\n                  style={{ maxWidth: \"100%\" }}\r\n                  className=\"main-btn\"\r\n                  variant=\"secondary\"\r\n                >\r\n                  RACE INFORMATION\r\n                </Button>\r\n              </Link>\r\n            )}\r\n          </Row>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default NextRaceCard;\r\n","import React from \"react\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ClockCountdown from \"../Countdown/ClockCountdown\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\n\r\nconst NextEventInformation = ({ nextEvent }) => {\r\n  var cardHeight = \"8rem\";\r\n  var smallFont = {\r\n    fontSize: \"16px\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {nextEvent !== undefined ? (\r\n        <Row className=\"justify-content-center text-center g-2\">\r\n          {nextEvent.Sprint === undefined ? (\r\n            <>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>FREE PRACTICE 1</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.FirstPractice.date}\r\n                          time={nextEvent.FirstPractice.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.FirstPractice.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.FirstPractice.date,\r\n                            nextEvent.FirstPractice.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>FREE PRACTICE 2</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.SecondPractice.date}\r\n                          time={nextEvent.SecondPractice.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.SecondPractice.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.SecondPractice.date,\r\n                            nextEvent.SecondPractice.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>FREE PRACTICE 3</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.ThirdPractice.date}\r\n                          time={nextEvent.ThirdPractice.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.ThirdPractice.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.ThirdPractice.date,\r\n                            nextEvent.ThirdPractice.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>QUALIFYING</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.Qualifying.date}\r\n                          time={nextEvent.Qualifying.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.Qualifying.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.Qualifying.date,\r\n                            nextEvent.Qualifying.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>FREE PRACTICE 1</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.FirstPractice.date}\r\n                          time={nextEvent.FirstPractice.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.FirstPractice.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.FirstPractice.date,\r\n                            nextEvent.FirstPractice.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>QUALIFYING</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.Qualifying.date}\r\n                          time={nextEvent.Qualifying.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.Qualifying.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.Qualifying.date,\r\n                            nextEvent.Qualifying.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>FREE PRACTICE 2</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.SecondPractice.date}\r\n                          time={nextEvent.SecondPractice.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.SecondPractice.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.SecondPractice.date,\r\n                            nextEvent.SecondPractice.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n              <Col xs=\"12\" xl=\"3\">\r\n                <GenericCard\r\n                  cardBody={\r\n                    <>\r\n                      <Row>\r\n                        <h4>SPRINT QUALIFYING</h4>\r\n                      </Row>\r\n                      <Row>\r\n                        <ClockCountdown\r\n                          date={nextEvent.Sprint.date}\r\n                          time={nextEvent.Sprint.time}\r\n                          size=\"small\"\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <p style={smallFont}>\r\n                          {convertDate(nextEvent.Sprint.date)} -{\" \"}\r\n                          {getLocalRaceDate(\r\n                            nextEvent.Sprint.date,\r\n                            nextEvent.Sprint.time\r\n                          )}\r\n                        </p>\r\n                      </Row>\r\n                    </>\r\n                  }\r\n                  cardHeight={cardHeight}\r\n                />\r\n              </Col>\r\n            </>\r\n          )}\r\n        </Row>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextEventInformation;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport { GiPodiumWinner } from \"react-icons/gi\";\r\nimport { GiPodiumSecond } from \"react-icons/gi\";\r\nimport { GiPodiumThird } from \"react-icons/gi\";\r\nimport { FaStopwatch } from \"react-icons/fa\";\r\nimport { SiFastly } from \"react-icons/si\";\r\nimport { config } from \"../../data/config\";\r\n\r\nconst driverName = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n  marginTop: \"50px\",\r\n};\r\n\r\nconst PreviousRaceStats = ({ lastRace }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [fastestLap, setFastestLap] = useState(null);\r\n  const [polePosition, setPolePosition] = useState(null);\r\n  const [poleTime, setPoleTime] = useState(null);\r\n  const [loadingPoleTime, setLoadingPoleTime] = useState(true);\r\n  const [loadingPolePosition, setLoadingPolePosition] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  const rowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getFastestLap = () => {\r\n      lastRace.MRData.RaceTable.Races[0].Results.forEach((lap) => {\r\n        if (lap.FastestLap && lap.FastestLap.rank === \"1\") {\r\n          setFastestLap(lap);\r\n          return;\r\n        }\r\n      });\r\n    };\r\n\r\n    const getPolePosition = () => {\r\n      lastRace.MRData.RaceTable.Races[0].Results.forEach((result) => {\r\n        if (result.grid === \"1\") {\r\n          setPolePosition(result);\r\n          setLoadingPolePosition(false);\r\n\r\n          fetch(\r\n            `https://ergast.com/api/f1/${lastRace.MRData.RaceTable.season}/${lastRace.MRData.RaceTable.round}/drivers/${result.Driver.driverId}/qualifying.json`\r\n          )\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n              setPoleTime(\r\n                result.MRData.RaceTable.Races[0].QualifyingResults[0].Q3\r\n              );\r\n              setLoadingPoleTime(false);\r\n            });\r\n\r\n          return;\r\n        }\r\n      });\r\n    };\r\n\r\n    getFastestLap();\r\n    getPolePosition();\r\n  }, [\r\n    lastRace.MRData.RaceTable.season,\r\n    lastRace.MRData.RaceTable.round,\r\n    lastRace.MRData.RaceTable.Races,\r\n  ]);\r\n\r\n  return (\r\n    <GenericCard\r\n      cardBody={\r\n        <>\r\n          <h5>PODIUM</h5>\r\n          <Table responsive className=\"table-hover\" variant={theme}>\r\n            <tbody className=\"justify-content-center\">\r\n              {lastRace.MRData.RaceTable.Races[0].Results.slice(0, 3).map(\r\n                (driver, index) => (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"align-middle\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => rowClick(driver.Driver.driverId)}\r\n                  >\r\n                    <td className=\"icon info-row\">\r\n                      {driver.position === \"1\" ? (\r\n                        <GiPodiumWinner size={23} />\r\n                      ) : driver.position === \"2\" ? (\r\n                        <GiPodiumSecond size={23} />\r\n                      ) : driver.position === \"3\" ? (\r\n                        <GiPodiumThird size={23} />\r\n                      ) : null}\r\n                    </td>\r\n                    <td className=\"info-row\">\r\n                      <Row className=\"g-0 text-start\">\r\n                        <Col xs=\"auto\" className=\"align-self-center\">\r\n                          <CircleFlag\r\n                            countryCode={CountriesCodeNationality[\r\n                              driver.Driver.nationality\r\n                            ].toLowerCase()}\r\n                            height={20}\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col xs={2} sm={1}>\r\n                          <TeamColor\r\n                            constructorId={driver.Constructor.constructorId}\r\n                            height=\"42px\"\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col xs={8} className=\"text-start\">\r\n                          <Row>\r\n                            <Col className=\"hideXS\">\r\n                              {driver.Driver.givenName}{\" \"}\r\n                              <p style={driverName}>\r\n                                {driver.Driver.familyName.toUpperCase()}\r\n                              </p>\r\n                            </Col>\r\n\r\n                            <Col className=\"showXS\">\r\n                              <p style={driverName}>\r\n                                {driver.Driver.familyName.toUpperCase()}\r\n                              </p>\r\n                            </Col>\r\n                          </Row>\r\n\r\n                          <Row>\r\n                            <Col style={{ fontSize: \"13px\" }}>\r\n                              {driver.Constructor.name}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </td>\r\n                    <td className=\"third-info info-row\">+{driver.points}</td>\r\n                  </tr>\r\n                )\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <h5>FASTEST LAP / POLE POSITION</h5>\r\n\r\n          <Table responsive className=\"table-hover\" variant={theme}>\r\n            <tbody>\r\n              {fastestLap === null ? null : (\r\n                <tr\r\n                  className=\"align-middle\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => rowClick(fastestLap.Driver.driverId)}\r\n                >\r\n                  <td className=\"icon info-row\">\r\n                    <FaStopwatch size={20} />\r\n                  </td>\r\n                  <td className=\"info-row\">\r\n                    <Row className=\"g-0 text-start\">\r\n                      <Col xs=\"auto\" className=\"align-self-center\">\r\n                        <CircleFlag\r\n                          countryCode={CountriesCodeNationality[\r\n                            fastestLap.Driver.nationality\r\n                          ].toLowerCase()}\r\n                          height={20}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={2} sm={1}>\r\n                        <TeamColor\r\n                          constructorId={fastestLap.Constructor.constructorId}\r\n                          height=\"42px\"\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={8} className=\"text-start\">\r\n                        <Row>\r\n                          <Col className=\"hideXS\">\r\n                            {fastestLap.Driver.givenName}{\" \"}\r\n                            <p style={driverName}>\r\n                              {fastestLap.Driver.familyName.toUpperCase()}\r\n                            </p>\r\n                          </Col>\r\n\r\n                          <Col className=\"showXS\">\r\n                            <p style={driverName}>\r\n                              {fastestLap.Driver.familyName.toUpperCase()}\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col style={{ fontSize: \"13px\" }}>\r\n                            {fastestLap.Constructor.name}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </td>\r\n                  <td className=\"third-info info-row\">\r\n                    {fastestLap.FastestLap.Time.time}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n\r\n              {loadingPolePosition || loadingPoleTime ? null : (\r\n                <tr\r\n                  className=\"align-middle\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => rowClick(polePosition.Driver.driverId)}\r\n                >\r\n                  <td className=\"info-row\">\r\n                    <SiFastly size={21} />\r\n                  </td>\r\n                  <td className=\"info-row\">\r\n                    <Row className=\"g-0 text-start\">\r\n                      <Col xs=\"auto\" className=\"align-self-center\">\r\n                        <CircleFlag\r\n                          countryCode={CountriesCodeNationality[\r\n                            polePosition.Driver.nationality\r\n                          ].toLowerCase()}\r\n                          height={20}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={2} sm={1}>\r\n                        <TeamColor\r\n                          constructorId={polePosition.Constructor.constructorId}\r\n                          height=\"42px\"\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={8}>\r\n                        <Row>\r\n                          <Col className=\"hideXS\">\r\n                            {polePosition.Driver.givenName}{\" \"}\r\n                            <p style={driverName}>\r\n                              {polePosition.Driver.familyName.toUpperCase()}\r\n                            </p>\r\n                          </Col>\r\n\r\n                          <Col className=\"showXS\">\r\n                            <p style={driverName}>\r\n                              {polePosition.Driver.familyName.toUpperCase()}\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                          <Col style={{ fontSize: \"13px\" }}>\r\n                            {polePosition.Constructor.name}\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </td>\r\n                  <td className=\"third-info info-row\">{poleTime}</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n          <h4>\r\n            ROUND: {lastRace.MRData.RaceTable.round}/\r\n            {lastRace.season === config.current_season\r\n              ? config.current_season_n_races\r\n              : config.previous_season_n_races}\r\n          </h4>\r\n        </>\r\n      }\r\n      cardHeight=\"29.5rem\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default PreviousRaceStats;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DriversStandings from \"../Standings/DriversStandings\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst DriversStandingsCard = ({ driversStandings }) => {\r\n  return (\r\n    <GenericCard\r\n      cardBody={\r\n        <>\r\n          <Row className=\"text-center\">\r\n            <h5>DRIVERS' STANDINGS</h5>\r\n          </Row>\r\n\r\n          <Row>\r\n            <DriversStandings\r\n              style={{\r\n                overflow: \"hidden\",\r\n                overflowY: \"scroll\",\r\n                height: \"415px\",\r\n              }}\r\n              driversStandings={driversStandings}\r\n            />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Link to=\"/standings\">\r\n              <Button className=\"main-btn\" variant=\"secondary\">\r\n                FULL STANDINGS\r\n              </Button>\r\n            </Link>\r\n          </Row>\r\n        </>\r\n      }\r\n      cardHeight=\"33rem\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default DriversStandingsCard;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ConstructorsStandings from \"../Standings/ConstructorsStandings\";\r\n\r\nconst ConstructorsStandingsCard = ({ constructorsStandings, season }) => {\r\n  return (\r\n    <GenericCard\r\n      cardBody={\r\n        <>\r\n          <Row className=\"text-center\">\r\n            <h5>CONSTRUCTORS' STANDINGS</h5>\r\n          </Row>\r\n\r\n          <Row>\r\n            <ConstructorsStandings\r\n              style={{\r\n                overflow: \"hidden\",\r\n                overflowY: \"scroll\",\r\n                height: \"415px\",\r\n              }}\r\n              constructorsStandings={constructorsStandings}\r\n              constructorSeason={season}\r\n              showEngine={false}\r\n            />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Link to=\"/standings\">\r\n              <Button className=\"main-btn\" variant=\"secondary\">\r\n                FULL STANDINGS\r\n              </Button>\r\n            </Link>\r\n          </Row>\r\n        </>\r\n      }\r\n      cardHeight=\"33rem\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ConstructorsStandingsCard;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Placeholder from \"react-bootstrap/Placeholder\";\r\nimport GenericCard from \"../Cards/GenericCard\";\r\n\r\nconst LoadingCard = ({ cardHeight, hasButton, hasFlag }) => {\r\n  return (\r\n    <GenericCard\r\n      cardBody={\r\n        <div>\r\n          <Row className=\"justify-content-center text-center\">\r\n            <Placeholder animation=\"glow\">\r\n              <Placeholder xs={8} bg=\"primary\" />\r\n            </Placeholder>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center text-center\">\r\n            <Placeholder animation=\"glow\">\r\n              <Placeholder xs={6} />\r\n            </Placeholder>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center text-center\">\r\n            <Placeholder animation=\"glow\">\r\n              <Placeholder xs={4} />\r\n            </Placeholder>\r\n          </Row>\r\n\r\n          <Row className=\"justify-content-center text-center\">\r\n            <Placeholder animation=\"glow\">\r\n              <Placeholder xs={2} />\r\n            </Placeholder>\r\n          </Row>\r\n\r\n          {hasFlag ? (\r\n            <Row className=\"justify-content-center text-center\">\r\n              <div className=\"circle\"></div>\r\n            </Row>\r\n          ) : null}\r\n\r\n          <Row\r\n            className=\"justify-content-center text-center\"\r\n            style={{ marginTop: \"5%\" }}\r\n          >\r\n            <Placeholder animation=\"glow\">\r\n              <Placeholder xs={1} /> <Placeholder xs={1} />{\" \"}\r\n              <Placeholder xs={1} /> <Placeholder xs={1} />\r\n            </Placeholder>\r\n          </Row>\r\n\r\n          {hasButton ? (\r\n            <Row className=\"justify-content-center text-center\">\r\n              <Placeholder.Button\r\n                variant=\"black\"\r\n                xs={6}\r\n                className=\"btn-bottom\"\r\n              />\r\n            </Row>\r\n          ) : null}\r\n        </div>\r\n      }\r\n      cardHeight={cardHeight}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoadingCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport PreviousRaceCard from \"../MainFeed/PreviousRaceCard\";\r\nimport NextRaceCard from \"./NextRaceCard\";\r\nimport NextEventInformation from \"./NextEventInformation\";\r\nimport PreviousRaceStats from \"./PreviousRaceStats\";\r\nimport DriversStandingsCard from \"./DriversStandingsCard\";\r\nimport ConstructorsStandingsCard from \"./ConstructorsStandingsCard\";\r\nimport \"./Styles.css\";\r\nimport LoadingCard from \"../Cards/LoadingCard\";\r\nimport { config } from \"../../data/config\";\r\n\r\nconst MainFeed = () => {\r\n  const [nextRace, setNextRace] = useState(null);\r\n  const [lastRace, setLastRace] = useState(null);\r\n  const [driversStandings, setDriversStandings] = useState(null);\r\n  const [loadingNextRace, setLoadingNextRace] = useState(true);\r\n  const [loadingLastRace, setLoadingLastRace] = useState(true);\r\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\r\n  const [loadingTeamsStandings, setLoadingTeamsStandings] = useState(true);\r\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLastRaceResult = async () => {\r\n      await fetch(`https://ergast.com/api/f1/current/last/results.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setLastRace(result);\r\n          setLoadingLastRace(false);\r\n        });\r\n    };\r\n\r\n    const fetchNextRaceData = async (round) => {\r\n      await fetch(`https://ergast.com/api/f1/current/next.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setNextRace(result.MRData.RaceTable.Races[0]);\r\n          setLoadingNextRace(false);\r\n        });\r\n    };\r\n\r\n    const fetchConstructorsStandings = async () => {\r\n      await fetch(`https://ergast.com/api/f1/current/constructorStandings.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setConstructorsStandings(\r\n            result.MRData.StandingsTable.StandingsLists[0]\r\n          );\r\n          setLoadingTeamsStandings(false);\r\n        });\r\n    };\r\n\r\n    const fetchDriversStandings = async () => {\r\n      await fetch(`https://ergast.com/api/f1/current/driverStandings.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setDriversStandings(\r\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\r\n          );\r\n          setLoadingDriversStandings(false);\r\n        });\r\n    };\r\n\r\n    fetchLastRaceResult();\r\n    fetchNextRaceData();\r\n    fetchDriversStandings();\r\n    fetchConstructorsStandings();\r\n  }, []);\r\n\r\n  return (\r\n    <Container style={{ minHeight: \"600px\" }}>\r\n      <Row className=\"justify-content-center text-center title\">\r\n        <h1>{config.current_season} FORMULA 1</h1>\r\n      </Row>\r\n      {loadingLastRace || loadingNextRace ? (\r\n        <>\r\n          <Row className=\"justify-content-center text-center g-2\">\r\n            <Col lg={12}>\r\n              <LoadingCard cardHeight=\"28rem\" hasButton={true} hasFlag={true} />\r\n            </Col>\r\n\r\n            <Col xs=\"12\" xl=\"3\">\r\n              <LoadingCard cardHeight=\"8rem\" />\r\n            </Col>\r\n            <Col xs=\"12\" xl=\"3\">\r\n              <LoadingCard cardHeight=\"8rem\" />\r\n            </Col>\r\n            <Col xs=\"12\" xl=\"3\">\r\n              <LoadingCard cardHeight=\"8rem\" />\r\n            </Col>\r\n            <Col xs=\"12\" xl=\"3\">\r\n              <LoadingCard cardHeight=\"8rem\" />\r\n            </Col>\r\n\r\n            <Col xs={12} xl={6}>\r\n              <LoadingCard cardHeight=\"28rem\" hasButton={true} hasFlag={true} />\r\n            </Col>\r\n\r\n            <Col xs={12} xl={6}>\r\n              <LoadingCard cardHeight=\"28rem\" hasButton={true} hasFlag={true} />\r\n            </Col>\r\n\r\n            <Row className=\"g-2\" style={{ marginTop: \"1px\" }}>\r\n              <Col xs={12} xl={6}>\r\n                <LoadingCard\r\n                  cardHeight=\"28rem\"\r\n                  hasButton={true}\r\n                  hasFlag={true}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} xl={6}>\r\n                <LoadingCard\r\n                  cardHeight=\"28rem\"\r\n                  hasButton={true}\r\n                  hasFlag={true}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center text-center g-2\">\r\n            <Col lg={12}>\r\n              <NextRaceCard nextRace={nextRace} />\r\n            </Col>\r\n\r\n            <Col lg={12}>\r\n              <NextEventInformation nextEvent={nextRace} />\r\n            </Col>\r\n\r\n            <Col xs={12} xl={6}>\r\n              <PreviousRaceCard lastRace={lastRace} />\r\n            </Col>\r\n\r\n            <Col xs={12} xl={6}>\r\n              <PreviousRaceStats lastRace={lastRace} />\r\n            </Col>\r\n          </Row>\r\n          {loadingDriversStandings || loadingTeamsStandings ? (\r\n            <Row className=\"g-2\" style={{ marginTop: \"1px\" }}>\r\n              <Col xs={12} xl={6}>\r\n                <LoadingCard cardHeight=\"28rem\" />\r\n              </Col>\r\n\r\n              <Col xs={12} xl={6}>\r\n                <LoadingCard cardHeight=\"28rem\" />\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <Row className=\"g-2\" style={{ marginTop: \"1px\" }}>\r\n              <Col xs={12} xl={6}>\r\n                <DriversStandingsCard driversStandings={driversStandings} />\r\n              </Col>\r\n\r\n              <Col xs={12} xl={6}>\r\n                <ConstructorsStandingsCard\r\n                  constructorsStandings={\r\n                    constructorsStandings.ConstructorStandings\r\n                  }\r\n                  season={constructorsStandings.season}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainFeed;\r\n","import React from \"react\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport NavBar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport MainFeed from \"../components/MainFeed/MainFeed\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <MainFeed />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const CountriesCodeNationality = {\r\n  British: \"GB\",\r\n  Finnish: \"FI\",\r\n  Dutch: \"NL\",\r\n  Mexican: \"MX\",\r\n  Spanish: \"ES\",\r\n  Australian: \"AU\",\r\n  Monegasque: \"MC\",\r\n  French: \"FR\",\r\n  German: \"DE\",\r\n  Japanese: \"JP\",\r\n  Canadian: \"CA\",\r\n  Italian: \"IT\",\r\n  Russian: \"RU\",\r\n  Austrian: \"AT\",\r\n  Swiss: \"CH\",\r\n  American: \"US\",\r\n  Thai: \"TH\",\r\n  \"New Zealander\": \"NZ\",\r\n  \"New Zealand\": \"NZ\",\r\n  Swedish: \"SE\",\r\n  Portuguese: \"PT\",\r\n  Brazilian: \"BR\",\r\n  Hungarian: \"HU\",\r\n  Argentine: \"AR\",\r\n  Belgian: \"BE\",\r\n  Belgium: \"BE\",\r\n  \"South African\": \"ZA\",\r\n  Danish: \"DK\",\r\n  Liechtensteiner: \"LI\",\r\n  \"Hong Kong\": \"HK\",\r\n  Irish: \"IE\",\r\n  Chilean: \"CL\",\r\n  Venezuelan: \"VE\",\r\n  Colombian: \"CO\",\r\n  Czech: \"CZ\",\r\n  Malaysia: \"MY\",\r\n  Indian: \"IN\",\r\n  Polish: \"PL\",\r\n  Indonesian: \"ID\",\r\n  Rhodesian: \"ZW\",\r\n  Russia: \"RU\",\r\n  Korea: \"KR\",\r\n  Argentina: \"AR\",\r\n  UAE: \"AE\",\r\n  Australia: \"AU\",\r\n  Austria: \"AT\",\r\n  Azerbaijan: \"AZ\",\r\n  Bahrain: \"BH\",\r\n  Brazil: \"BR\",\r\n  Canada: \"CA\",\r\n  China: \"CN\",\r\n  France: \"FR\",\r\n  Germany: \"DE\",\r\n  Hungary: \"HU\",\r\n  India: \"IN\",\r\n  Italy: \"IT\",\r\n  Japan: \"JP\",\r\n  Malyasia: \"MY\",\r\n  Malaysian: \"MY\",\r\n  Mexico: \"MX\",\r\n  Monaco: \"MC\",\r\n  Morocco: \"MA\",\r\n  Netherlands: \"NL\",\r\n  Portugal: \"PT\",\r\n  \"Saudi Arabia\": \"SA\",\r\n  Singapore: \"SG\",\r\n  \"South Africa\": \"ZA\",\r\n  Spain: \"ES\",\r\n  Sweden: \"SE\",\r\n  Switzerland: \"CH\",\r\n  Turkey: \"TR\",\r\n  UK: \"GB\",\r\n  USA: \"US\",\r\n  \"United States\": \"US\",\r\n  Qatar: \"QA\",\r\n  Chinese: \"CN\"\r\n};\r\n","export const TeamColors = {\r\n  red_bull: \"#0600EF\",\r\n  williams: \"#005AFF\",\r\n  mercedes: \"#00D2BE\",\r\n  mclaren: \"#FF8700\",\r\n  aston_martin: \"#006F62\",\r\n  alphatauri: \"#2B4562\",\r\n  alpine: \"#0090FF\",\r\n  ferrari: \"#DC0000\",\r\n  haas: \"#FFFFFF\",\r\n  alfa: \"#900000\",\r\n  renault: \"#FFF500\",\r\n  racing_point: \"#FFC0CB\",\r\n  toro_rosso: \"#469BFF\",\r\n  force_india: \"#F596C8\",\r\n  sauber: \"#9B0000\",\r\n  manor: \"#323232\",\r\n  lotus_f1: \"#FFB800\",\r\n  marussia: \"#6E0000\",\r\n  caterham: \"#0b361f\",\r\n};\r\n","import React from \"react\";\r\nimport { TeamColors } from \"../../data/TeamColors\";\r\n\r\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"3px\",\r\n        height: height,\r\n        display: \"table\",\r\n        margin: \"0 auto\",\r\n        borderRadius: \"20px\",\r\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\r\n          ? TeamColors[constructorId]\r\n          : \"#000000\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TeamColor;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport DayNightToggle from \"react-day-and-night-toggle\";\r\n\r\nconst NavBar = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const themeToggler = () => {\r\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(toggle);\r\n    localStorage.setItem(\"theme\", toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\r\n      <Container style={{ minHeight: \"40px\" }}>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"icon-link\">\r\n            <GiCheckeredFlag size={30} />\r\n          </Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Row className=\"g-2\">\r\n            <Col style={{ marginTop: \"15px\" }}>\r\n              <DayNightToggle\r\n                onChange={() => themeToggler()}\r\n                checked={theme === \"dark\"}\r\n                size={20}\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Navbar.Brand\r\n                className=\"icon-link\"\r\n                href=\"https://github.com/jdro10\"\r\n                aria-label=\"Github\"\r\n              >\r\n                <AiFillGithub size={25} />\r\n              </Navbar.Brand>\r\n            </Col>\r\n          </Row>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { BsBootstrap } from \"react-icons/bs\";\r\nimport { SiVisualstudiocode } from \"react-icons/si\";\r\nimport { IoLogoNpm } from \"react-icons/io\";\r\nimport { FaHtml5 } from \"react-icons/fa\";\r\nimport { FaCss3Alt } from \"react-icons/fa\";\r\nimport { SiLeaflet } from \"react-icons/si\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\r\n          <Col>\r\n            <GiCheckeredFlag size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaGithub size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaReact size={40} />\r\n          </Col>\r\n          <Col>\r\n            <IoLogoJavascript size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaHtml5 size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaCss3Alt size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <BsBootstrap size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiLeaflet size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <IoLogoNpm size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiVisualstudiocode size={40} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>API</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            All racing data is obtained through{\" \"}\r\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\r\n              Ergast API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Some drivers' and circuits' information are obtained through{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/w/api.php\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              Wikipedia API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>DISCLAIMER</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            This website was developed for learning and educational purposes\r\n            only.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Data displayed may be inaccurate. By using this website you\r\n            acknowledge this.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            The author disclaims all responsibility for any loss or damage\r\n            arising from the use of this website.\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={7}>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              This website is unofficial and is not associated in any way with\r\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\r\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\r\n              marks of Formula One Licensing B.V.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export function getLocalRaceDate(date, time) {\r\n  const raceDate = new Date(date + \"T\" + time);\r\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\r\n  const minutes =\r\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\r\n\r\n  return hours + \":\" + minutes;\r\n}\r\n\r\nexport function convertDate(dateToConvert) {\r\n  const date = dateToConvert.split(\"-\");\r\n\r\n  return `${date[2]}/${date[1]}/${date[0]}`;\r\n}","export const config = {\r\n  first_season: 1950,\r\n  current_season: 2022,\r\n  previous_season_n_races: 22,\r\n  current_season_n_races: 23,\r\n};\r\n"],"sourceRoot":""}