{"version":3,"sources":["components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitTab.js","components/Stats/RaceData/EventTabs.js","components/Stats/RaceData/FutureRace.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","components/Countdown/ClockCountdown.js"],"names":["boldFont","fontWeight","margin","padding","display","RaceClassification","raceClassification","history","useHistory","theme","useContext","ThemeContext","Table","className","responsive","style","overflow","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","number","Row","Col","xs","TeamColor","constructorId","Constructor","height","md","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","time","FastestLap","rank","points","grid","RaceQualifying","raceQualifying","hasOwnProperty","code","substring","Q1","Q2","Q3","RaceTab","raceInfo","eventCountryCode","href","url","raceName","convertDate","date","raceDate","Date","getHours","getMinutes","getLocalRaceDate","countryCode","CountriesCodeNationality","toLowerCase","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","Marker","Popup","CircuitTab","fastestLap","setFastestLap","firstGrandPrix","setFirstGrandPrix","wikiPageId","setWikiPageId","circuitInformation","setCircuitInformation","loadingWikiData","setLoadingWikiData","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","fetch","Circuit","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","Results","season","method","Object","keys","query","pages","Location","country","locality","textAlign","lat","long","mapHeight","marginTop","fontSize","nationality","width","EventTabs","Tabs","defaultActiveKey","id","Tab","tabClassName","eventKey","title","ClockCountdown","FutureRace","round","setRaceInfo","setRaceQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceInfo","a","parseInt","fetchRaceQualifying","QualifyingResults","Container","fluid","minHeight","to","Race","setRaceClassification","loadingRaceResult","setLoadingRaceResult","fetchRaceResult","Spinner","animation","RaceResult","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","backgroundColor","NavBar","setTheme","localStorage","setItem","bg","textDecoration","Brand","size","Collapse","onChange","toggle","themeToggler","checked","color","dateToConvert","split","now","getTime","renderer","days","hours","minutes","seconds","completed","sm","lg"],"mappings":"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","file":"static/js/8.78e55b13.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\nconst RaceClassification = ({ raceClassification }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div>\n      <Table\n        className=\"table-hover standings-table\"\n        responsive=\"sm\"\n        style={{ overflow: \"hidden\" }}\n        variant={theme}\n      >\n        <thead>\n          <tr>\n            <th>POS</th>\n            <th className=\"hideXS\">NUMBER</th>\n            <th>DRIVER</th>\n            <th className=\"hideXS\">TEAM</th>\n            <th className=\"hideXS\">LAPS</th>\n            <th>TIME/RETIRED</th>\n            <th>PTS</th>\n            <th className=\"hideXS\">+/-</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr\n              key={index}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td>\n                <Row className=\"g-2\">\n                  <Col xs={1} className=\"showXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                      height=\"45px\"\n                    />\n                  </Col>\n                  <Col xs={1} className=\"hideXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6} md={10}>\n                    {driver.Driver.givenName}{\" \"}\n                    <p style={boldFont}>\n                      {driver.Driver.familyName.toUpperCase()}\n                    </p>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col xs={2}>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n              <td className=\"hideXS\">\n                {driver.grid === \"0\"\n                  ? 20 - driver.position\n                  : driver.grid - driver.position}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../../SharedStyles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <Table\n      responsive=\"sm\"\n      className=\"table-hover standings-table\"\n      variant={theme}\n    >\n      <thead>\n        <tr>\n          <th>POS</th>\n          <th className=\"hideXS\">NUMBER</th>\n          <th>DRIVER</th>\n          <th className=\"hideXS\">TEAM</th>\n          <th>Q1</th>\n          <th>Q2</th>\n          <th>Q3</th>\n        </tr>\n      </thead>\n      <tbody>\n        {raceQualifying.map((driver, index) => (\n          <tr\n            key={index}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => rowClick(driver.Driver.driverId)}\n          >\n            <td>{driver.position}</td>\n            <td className=\"hideXS\">{driver.number}</td>\n            <td className=\"hideXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col>\n                  {driver.Driver.givenName}{\" \"}\n                  <p style={boldFont}>\n                    {driver.Driver.familyName.toUpperCase()}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"showXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col xs={6}>\n                  <p style={boldFont}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"hideXS\">{driver.Constructor.name}</td>\n            <td>\n              {driver.hasOwnProperty(\"Q1\")\n                ? driver.Q1 === \"\"\n                  ? \"-\"\n                  : driver.Q1\n                : \"-\"}\n            </td>\n            <td>{driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}</td>\n            <td>{driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default RaceQualifying;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { convertDate } from \"../../../helpers/Helpers\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  const getLocalRaceDate = (date, time) => {\n    const raceDate = new Date(date + \"T\" + time);\n    const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n    const minutes =\n      (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n    return hours + \":\" + minutes + \":00\";\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <a className=\"race-link\" href={raceInfo.url}>\n            <h1>{raceInfo.raceName.toUpperCase()}</h1>\n          </a>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{convertDate(raceInfo.date)}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              eventCountryCode\n            ].toLowerCase()}\n            height=\"100\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={14}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [circuitInformation, setCircuitInformation] = useState(null);\n  const [loadingWikiData, setLoadingWikiData] = useState(true);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGrandPrix(result.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${raceInfo.Circuit.circuitName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setCircuitInformation(result.query.pages);\n          setLoadingWikiData(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [raceInfo.Circuit.circuitId, raceInfo.Circuit.circuitName]);\n\n  return (\n    <div>\n      <Row className=\"text-center\">\n        <h1>{raceInfo.Circuit.circuitName}</h1>\n        <h3>\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              eventCountryCode\n            ].toLowerCase()}\n            height=\"30\"\n          />{\" \"}\n          {raceInfo.Circuit.Location.country}\n        </h3>\n        <h3>{raceInfo.Circuit.Location.locality}</h3>\n      </Row>\n\n      {loadingWikiData ? null : (\n        <Row>\n          <p style={{ textAlign: \"justify\" }}>\n            {circuitInformation[wikiPageId][\"extract\"]} (Source:{\" \"}\n            <a\n              href={`https://en.wikipedia.org/wiki/${circuitInformation[wikiPageId][\"title\"]}`}\n            >\n              Wikipedia\n            </a>\n            )\n          </p>\n        </Row>\n      )}\n\n      <Row>\n        <Col>\n          <Map\n            coordinates={[\n              raceInfo.Circuit.Location.lat,\n              raceInfo.Circuit.Location.long,\n            ]}\n            circuitName={raceInfo.Circuit.circuitName}\n            mapHeight={{ height: \"700px\" }}\n          />\n        </Col>\n        <Col style={{ marginTop: \"5%\" }}>\n          {loadingFastestLap || loadingFirstGrandPrix ? null : (\n            <>\n              <Row className=\"text-center\">\n                <h5 style={{ fontSize: \"30px\" }}>First Grand Prix</h5>\n                <h5>{firstGrandPrix}</h5>\n              </Row>\n              {fastestLap === undefined ? null : (\n                <div>\n                  <Row className=\"text-center\">\n                    <h5 style={{ fontSize: \"30px\" }}>Lap record</h5>\n                    <h5>{fastestLap.Results[0].FastestLap.Time.time}</h5>\n                    <h5 style={{ fontSize: \"25px\" }}>{fastestLap.season}</h5>\n                  </Row>\n                  <Row className=\"justify-content-center text-center\">\n                    <Col xs=\"auto\">\n                      <TeamColor\n                        constructorId={\n                          fastestLap.Results[0].Constructor.constructorId\n                        }\n                        height=\"50px\"\n                      />\n                    </Col>\n                    <Col xs={4}>\n                      <h5 style={{ fontSize: \"20px\" }}>\n                        {fastestLap.Results[0].Driver.givenName}{\" \"}\n                        <p style={boldFont}>\n                          {fastestLap.Results[0].Driver.familyName.toUpperCase()}\n                        </p>\n                      </h5>\n                    </Col>\n                    <Col xs={2}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          fastestLap.Results[0].Driver.nationality\n                        ].toLowerCase()}\n                        height={40}\n                        width={50}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"text-center\">\n                    <h5 style={{ fontSize: \"25px\" }}>\n                      {fastestLap.Results[0].Constructor.name}{\" \"}\n                    </h5>\n                  </Row>\n                </div>\n              )}\n            </>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","import React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\nimport Row from \"react-bootstrap/Row\";\nimport ClockCountdown from \"../../Countdown/ClockCountdown\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab tabClassName=\"tab-style\" eventKey=\"race\" title=\"RACE\">\n          <RaceTab\n            raceInfo={raceInfo}\n            eventCountryCode={raceInfo.Circuit.Location.country}\n          />\n\n          {raceClassification != null ? (\n            <div style={{ marginTop: \"20px\" }}>\n              <RaceClassification raceClassification={raceClassification} />\n            </div>\n          ) : (\n            <Row className=\"justify-content-center text-center\">\n              <p></p>\n              <ClockCountdown date={raceInfo.date} time={raceInfo.time} />\n            </Row>\n          )}\n        </Tab>\n\n        <Tab tabClassName=\"tab-style\" eventKey=\"circuit\" title=\"CIRCUIT\">\n          <CircuitTab\n            raceInfo={raceInfo}\n            eventCountryCode={raceInfo.Circuit.Location.country}\n          />\n        </Tab>\n\n        {raceQualifying != null ? (\n          <Tab\n            tabClassName=\"tab-style\"\n            eventKey=\"qualifying\"\n            title=\"QUALIFYING\"\n          >\n            <RaceQualifying raceQualifying={raceQualifying} />\n          </Tab>\n        ) : null}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport { Redirect } from \"react-router-dom\";\n\nconst FutureRace = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceInfo();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"500px\" }}>\n        {loadingRaceInfo || loadingRaceQualifying ? null : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <EventTabs\n              season={season}\n              round={round}\n              raceInfo={raceInfo}\n              raceQualifying={raceQualifying}\n            />\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default FutureRace;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport FutureRace from \"./FutureRace\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"500px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <FutureRace season={season} round={round} />\n        ) : (\n          <EventTabs\n            raceInfo={raceInfo}\n            raceClassification={raceClassification}\n            raceQualifying={raceQualifying}\n          />\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </>\n  );\n};\n\nexport default RaceResult;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n            <Col>\n              <Navbar.Brand className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export function getLocalRaceDate(date, time) {\n  const raceDate = new Date(date + \"T\" + time);\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n  const minutes =\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n  return hours + \":\" + minutes + \":00\";\n}\n\nexport function convertDate(dateToConvert) {\n  const date = dateToConvert.split(\"-\");\n\n  return `${date[2]}/${date[1]}/${date[0]}`;\n}\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return (\n        <Col>\n          <h1>Race in progress</h1>\n          <h5>Waiting for race results</h5>\n        </Col>\n      );\n    } else {\n      return (\n        <>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{days}</h1>\n            <h5>DAYS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{hours}</h1>\n            <h5>HRS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{minutes}</h1>\n            <h5>MIN</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{seconds}</h1>\n            <h5>SEC</h5>\n          </Col>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n"],"sourceRoot":""}