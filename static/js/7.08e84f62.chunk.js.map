{"version":3,"sources":["components/Countdown/ClockCountdown.js","components/Standings/DriversStandings.js","data/ConstructorLineup.js","components/Standings/ConstructorsStandings.js","components/Cards/GenericCard.js","components/MainFeed/PreviousRaceCard.js","components/MainFeed/NextRaceCard.js","components/MainFeed/PreviousRaceStats.js","components/MainFeed/DriversStandingsCard.js","components/MainFeed/ConstructorsStandingsCard.js","components/MainFeed/MainFeed.js","pages/HomePage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","data/config.js"],"names":["ClockCountdown","date","time","size","Date","now","getTime","split","renderer","days","hours","minutes","seconds","completed","className","xs","lg","boldFont","fontWeight","margin","padding","display","DriversStandings","style","driversStandings","history","useHistory","theme","useContext","ThemeContext","responsive","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","permanentNumber","countryCode","undefined","CountriesCodeNationality","nationality","toLowerCase","height","constructorId","Constructors","length","familyName","toUpperCase","givenName","fontSize","name","wins","points","ConstructorLineup","red_bull","williams","mercedes","mclaren","racing_point","toro_rosso","renault","ferrari","haas","alfa","alphatauri","aston_martin","alpine","ConstructorsStandings","constructorsStandings","constructorSeason","showEngine","Table","hasOwnProperty","parseInt","constructor","wikiConstructorLink","Constructor","url","window","open","Row","Col","TeamColor","md","GenericCard","cardTitle","cardBody","cardFooter","cardHeight","Card","borderRadius","overflow","bg","text","Header","Body","Footer","PreviousRaceCard","lastRace","MRData","RaceTable","Races","raceName","Circuit","circuitName","round","convertDate","getLocalRaceDate","Location","country","marginTop","locality","to","season","Button","NextRaceCard","nextRace","driverName","PreviousRaceStats","useState","fastestLap","setFastestLap","polePosition","setPolePosition","poleTime","setPoleTime","loadingPoleTime","setLoadingPoleTime","loadingPolePosition","setLoadingPolePosition","rowClick","useEffect","Results","forEach","lap","FastestLap","rank","result","grid","fetch","then","res","json","QualifyingResults","Q3","slice","sm","Time","config","current_season","current_season_n_races","previous_season_n_races","DriversStandingsCard","overflowY","ConstructorsStandingsCard","MainFeed","setNextRace","setLastRace","setDriversStandings","loadingNextRace","setLoadingNextRace","loadingLastRace","setLoadingLastRace","setConstructorsStandings","loadingTeamsStandings","setLoadingTeamsStandings","loadingDriversStandings","setLoadingDriversStandings","fetchLastRaceResult","a","fetchNextRaceData","fetchConstructorsStandings","StandingsTable","StandingsLists","fetchDriversStandings","DriverStandings","Container","minHeight","span","offset","caches","keys","cacheNames","cacheName","delete","location","reload","Spinner","animation","xl","ConstructorStandings","HomePage","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","TeamColors","force_india","sauber","manor","lotus_f1","marussia","caterham","width","backgroundColor","NavBar","setTheme","localStorage","setItem","textDecoration","Brand","Collapse","onChange","toggle","themeToggler","checked","href","id","textAlign","color","raceDate","getHours","getMinutes","dateToConvert","first_season"],"mappings":"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","file":"static/js/7.08e84f62.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time, size }) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return (\n        <>\n          {size === \"big\" ? (\n            <Col>\n              <h1 className=\"countdown-font\">RACE IN PROGRESS</h1>\n              <h5 className=\"countdown-font\">WAITING FOR RACE RESULTS</h5>\n            </Col>\n          ) : (\n            <Col>\n              <h1>RACE IN PROGRESS</h1>\n              <h5>WAITING FOR RACE RESULTS</h5>\n            </Col>\n          )}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {size === \"big\" ? (\n            <>\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{days}</h1>\n                <h1>DAYS</h1>\n              </Col>\n\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{hours}</h1>\n                <h1>HRS</h1>\n              </Col>\n\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{minutes}</h1>\n                <h1>MIN</h1>\n              </Col>\n\n              <Col xs={3} lg={2}>\n                <h1 className=\"countdown-font\">{seconds}</h1>\n                <h1>SEC</h1>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col xs={3} lg={1}>\n                <h1>{days}</h1>\n                <h5>DAYS</h5>\n              </Col>\n\n              <Col xs={3} lg={1}>\n                <h1>{hours}</h1>\n                <h5>HRS</h5>\n              </Col>\n\n              <Col xs={3} lg={1}>\n                <h1>{minutes}</h1>\n                <h5>MIN</h5>\n              </Col>\n\n              <Col xs={3} lg={1}>\n                <h1>{seconds}</h1>\n                <h5>SEC</h5>\n              </Col>\n            </>\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../SharedStyles/Table.css\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div style={style}>\n      <Table\n        className=\"table-hover table-striped standings-table\"\n        responsive=\"xs\"\n        variant={theme}\n      >\n        <thead>\n          <tr className=\"text-center\">\n            <th>POS</th>\n            <th className=\"hideXS\">NO</th>\n            <th>NAME/TEAM</th>\n            <th className=\"hideXS\">WINS</th>\n            <th>POINTS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr\n              key={index}\n              className=\"align-middle text-center\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\n              <td>\n                <Row className=\"g-0\">\n                  <Col xs={2} lg={1} className=\"align-self-center\">\n                    <CircleFlag\n                      countryCode={\n                        CountriesCodeNationality[driver.Driver.nationality] !==\n                        undefined\n                          ? CountriesCodeNationality[\n                              driver.Driver.nationality\n                            ].toLowerCase()\n                          : null\n                      }\n                      height={20}\n                    />\n                  </Col>\n\n                  <Col xs={2} lg={1}>\n                    <TeamColor\n                      constructorId={\n                        driver.Constructors.length > 0\n                          ? driver.Constructors[0].constructorId\n                          : null\n                      }\n                      height=\"42px\"\n                    />\n                  </Col>\n\n                  <Col xs={8} className=\"text-start\">\n                    <Row>\n                      <Col className=\"showXS\">\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n\n                      <Col className=\"hideXS\">\n                        {driver.Driver.givenName}{\" \"}\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col style={{ fontSize: \"13px\" }}>\n                        {driver.Constructors.length > 0\n                          ? driver.Constructors[0].name\n                          : \"-\"}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n","export const ConstructorLineup = {\n  2019: {\n    red_bull: [\"Verstappen\", \"Gasly\", \"HONDA\"],\n    williams: [\"Russell\", \"Kubica\", \"MERCEDES\"],\n    mercedes: [\"Hamilton\", \"Bottas\", \"MERCEDES\"],\n    mclaren: [\"Norris\", \"Sainz\", \"RENAULT\"],\n    racing_point: [\"Pérez\", \"Stroll\", \"MERCEDES\"],\n    toro_rosso: [\"Albon\", \"Kvyat\", \"HONDA\"],\n    renault: [\"Ricciardo\", \"Hülkenberg\", \"RENAULT\"],\n    ferrari: [\"Vettel\", \"Leclerc\", \"FERRARI\"],\n    haas: [\"Grosjean\", \"Magnussen\", \"FERRARI\"],\n    alfa: [\"Räikkönen\", \"Giovinazzi\", \"FERRARI\"],\n  },\n  2020: {\n    red_bull: [\"Verstappen\", \"Albon\", \"HONDA\"],\n    williams: [\"Russell\", \"Latifi\", \"MERCEDES\"],\n    mercedes: [\"Hamilton\", \"Bottas\", \"MERCEDES\"],\n    mclaren: [\"Norris\", \"Sainz\", \"RENAULT\"],\n    racing_point: [\"Pérez\", \"Stroll\", \"MERCEDES\"],\n    alphatauri: [\"Gasly\", \"Kvyat\", \"HONDA\"],\n    renault: [\"Ricciardo\", \"Ocon\", \"RENAULT\"],\n    ferrari: [\"Vettel\", \"Leclerc\", \"FERRARI\"],\n    haas: [\"Grosjean\", \"Magnussen\", \"FERRARI\"],\n    alfa: [\"Räikkönen\", \"Giovinazzi\", \"FERRARI\"],\n  },\n  2021: {\n    red_bull: [\"Verstappen\", \"Pérez\", \"HONDA\"],\n    williams: [\"Russell\", \"Latifi\", \"MERCEDES\"],\n    mercedes: [\"Hamilton\", \"Bottas\", \"MERCEDES\"],\n    mclaren: [\"Norris\", \"Ricciardo\", \"MERCEDES\"],\n    aston_martin: [\"Vettel\", \"Stroll\", \"MERCEDES\"],\n    alphatauri: [\"Gasly\", \"Tsunoda\", \"HONDA\"],\n    alpine: [\"Alonso\", \"Ocon\", \"RENAULT\"],\n    ferrari: [\"Leclerc\", \"Sainz\", \"MERCEDES\"],\n    haas: [\"Schumacher\", \"Mazepin\", \"FERRARI\"],\n    alfa: [\"Räikkönen\", \"Giovinazzi\", \"FERRARI\"],\n  },\n  2022: {\n    red_bull: [\"Verstappen\", \"Pérez\", \"RED BULL POWERTRAINS\"],\n    williams: [\"Latifi\", \"Albon\", \"MERCEDES\"],\n    mercedes: [\"Hamilton\", \"Russell\", \"MERCEDES\"],\n    mclaren: [\"Norris\", \"Ricciardo\", \"MERCEDES\"],\n    aston_martin: [\"Vettel\", \"Stroll\", \"MERCEDES\"],\n    alphatauri: [\"Gasly\", \"Tsunoda\", \"RED BULL POWERTRAINS\"],\n    alpine: [\"Alonso\", \"Ocon\", \"RENAULT\"],\n    ferrari: [\"Leclerc\", \"Sainz\", \"MERCEDES\"],\n    haas: [\"Schumacher\", \"Mazepin\", \"FERRARI\"],\n    alfa: [\"Bottas\", \"Zhou\", \"FERRARI\"],\n  },\n};\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../SharedStyles/Table.css\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport { ConstructorLineup } from \"../../data/ConstructorLineup\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst ConstructorsStandings = ({\n  style,\n  constructorsStandings,\n  constructorSeason,\n  showEngine,\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (wikiConstructorLink) => {\n    window.open(wikiConstructorLink, \"_blank\");\n  };\n\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table\n          className=\"table-hover standings-table table-striped\"\n          responsive=\"sm\"\n          variant={theme}\n        >\n          <thead>\n            <tr className=\"text-center\">\n              <th>POS</th>\n              <th>NAME</th>\n              {ConstructorLineup.hasOwnProperty(parseInt(constructorSeason)) &&\n              showEngine ? (\n                <th className=\"text-start hideXS\">ENGINE</th>\n              ) : null}\n              <th className=\"hideXS\">WINS</th>\n              <th>POINTS</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => rowClick(constructor.Constructor.url)}\n                className=\"align-middle text-center\"\n              >\n                <td>{constructor.position}</td>\n                <td>\n                  <Row className=\"g-0\">\n                    <Col xs={2} lg={1} className=\"align-self-center\">\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          constructor.Constructor.nationality\n                        ].toLowerCase()}\n                        height={20}\n                      />\n                    </Col>\n\n                    <Col xs={2} lg={1}>\n                      <TeamColor\n                        constructorId={constructor.Constructor.constructorId}\n                        height={\n                          ConstructorLineup.hasOwnProperty(\n                            parseInt(constructorSeason)\n                          )\n                            ? \"43px\"\n                            : \"27px\"\n                        }\n                      />\n                    </Col>\n\n                    <Col xs={8} className=\"text-start no-wrap\">\n                      <Row>\n                        <Col>\n                          <p style={boldFont}>\n                            {constructor.Constructor.name.toUpperCase()}\n                          </p>\n                        </Col>\n                      </Row>\n\n                      {ConstructorLineup.hasOwnProperty(\n                        parseInt(constructorSeason)\n                      ) ? (\n                        <Row style={{ fontSize: \"13px\" }}>\n                          <Col>\n                            {\n                              ConstructorLineup[parseInt(constructorSeason)][\n                                constructor.Constructor.constructorId\n                              ][0]\n                            }{\" \"}\n                            /{\" \"}\n                            {\n                              ConstructorLineup[parseInt(constructorSeason)][\n                                constructor.Constructor.constructorId\n                              ][1]\n                            }\n                          </Col>\n                        </Row>\n                      ) : null}\n                    </Col>\n                  </Row>\n                </td>\n                {ConstructorLineup.hasOwnProperty(\n                  parseInt(constructorSeason)\n                ) && showEngine ? (\n                  <td className=\"text-start hideXS\">\n                    <p style={boldFont}>\n                      {\n                        ConstructorLineup[parseInt(constructorSeason)][\n                          constructor.Constructor.constructorId\n                        ][2]\n                      }\n                    </p>\n                  </td>\n                ) : null}\n                <td className=\"hideXS\">{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n","import React, { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\n\nconst GenericCard = ({ cardTitle, cardBody, cardFooter, cardHeight }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <Card\n      style={{ height: cardHeight, borderRadius: \"15px\", overflow: \"hidden\" }}\n      className=\"text-center\"\n      bg={theme}\n      text={theme === \"light\" ? \"dark\" : \"light\"}\n    >\n      <Card.Header>{cardTitle}</Card.Header>\n      <Card.Body>\n        <Row className=\"justify-content-md-center\">{cardBody}</Row>\n      </Card.Body>\n      {cardFooter !== undefined ? (\n        <Card.Footer>{cardFooter}</Card.Footer>\n      ) : null}\n    </Card>\n  );\n};\n\nexport default GenericCard;\n","import React from \"react\";\nimport GenericCard from \"../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Button from \"react-bootstrap/Button\";\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\n\nconst boldFont = {\n  fontWeight: 600,\n};\n\nconst PreviousRaceCard = ({ lastRace }) => {\n  return (\n    <GenericCard\n      cardTitle=\"PREVIOUS RACE\"\n      cardBody={\n        <>\n          <h1 style={boldFont}>\n            {lastRace.MRData.RaceTable.Races[0].raceName.toUpperCase()}\n          </h1>\n          <h5>\n            {lastRace.MRData.RaceTable.Races[0].Circuit.circuitName.toUpperCase()}\n          </h5>\n          <h5>ROUND {lastRace.MRData.RaceTable.round}</h5>\n          <h6>{convertDate(lastRace.MRData.RaceTable.Races[0].date)}</h6>\n          <h6>\n            {getLocalRaceDate(\n              lastRace.MRData.RaceTable.Races[0].date,\n              lastRace.MRData.RaceTable.Races[0].time\n            )}\n          </h6>\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              lastRace.MRData.RaceTable.Races[0].Circuit.Location.country\n            ].toLowerCase()}\n            height={120}\n            style={{ marginTop: \"10px\" }}\n          />\n          <h5 style={{ marginTop: \"27px\" }}>\n            {lastRace.MRData.RaceTable.Races[0].Circuit.Location.country.toUpperCase()}\n          </h5>\n          <h5>\n            {lastRace.MRData.RaceTable.Races[0].Circuit.Location.locality.toUpperCase()}\n          </h5>\n        </>\n      }\n      cardFooter={\n        <Link\n          to={`/race/${lastRace.MRData.RaceTable.season}/${lastRace.MRData.RaceTable.round}`}\n        >\n          <Button className=\"red-btn\" variant=\"danger\">\n            FULL RACE RESULT\n          </Button>\n        </Link>\n      }\n      cardHeight=\"34rem\"\n    />\n  );\n};\n\nexport default PreviousRaceCard;\n","import React from \"react\";\nimport GenericCard from \"../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Button from \"react-bootstrap/Button\";\nimport ClockCoutdown from \"../Countdown/ClockCountdown\";\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\n\nconst boldFont = {\n  fontWeight: 600,\n};\n\nconst NextRaceCard = ({ nextRace }) => {\n  return (\n    <GenericCard\n      cardTitle=\"NEXT RACE\"\n      cardBody={\n        <>\n          <h1 style={boldFont}>\n            {nextRace === undefined\n              ? \"TBA GRAND PRIX\"\n              : nextRace.raceName.toUpperCase()}\n          </h1>\n          <h5>\n            {nextRace === undefined\n              ? \"TBA\"\n              : nextRace.Circuit.circuitName.toUpperCase()}\n          </h5>\n          <h5>\n            {nextRace === undefined ? \"ROUND 1\" : \"ROUND \" + nextRace.round}\n          </h5>\n          <h6>{nextRace === undefined ? \"TBA\" : convertDate(nextRace.date)}</h6>\n          <h6>\n            {nextRace === undefined\n              ? \"TBA\"\n              : getLocalRaceDate(nextRace.date, nextRace.time)}\n          </h6>\n          <CircleFlag\n            countryCode={\n              nextRace === undefined\n                ? null\n                : CountriesCodeNationality[\n                    nextRace.Circuit.Location.country\n                  ].toLowerCase()\n            }\n            height={100}\n          />\n          <p></p>\n          {nextRace === undefined ? (\n            <ClockCoutdown date=\"2022-03-20\" time=\"15:00:00\" />\n          ) : (\n            <ClockCoutdown date={nextRace.date} time={nextRace.time} />\n          )}\n        </>\n      }\n      cardFooter={\n        nextRace === undefined ? (\n          \"-\"\n        ) : (\n          <Link to={`/race/${nextRace.season}/${nextRace.round}`}>\n            <Button className=\"red-btn\" variant=\"danger\">\n              RACE INFORMATION\n            </Button>\n          </Link>\n        )\n      }\n      cardHeight=\"32rem\"\n    />\n  );\n};\n\nexport default NextRaceCard;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport GenericCard from \"../Cards/GenericCard\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Table from \"react-bootstrap/Table\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport \"../SharedStyles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport { GiPodiumWinner } from \"react-icons/gi\";\nimport { GiPodiumSecond } from \"react-icons/gi\";\nimport { GiPodiumThird } from \"react-icons/gi\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport { SiFastly } from \"react-icons/si\";\nimport { config } from \"../../data/config\";\n\nconst driverName = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n  marginTop: \"50px\",\n};\n\nconst PreviousRaceStats = ({ lastRace }) => {\n  const { theme } = useContext(ThemeContext);\n  const [fastestLap, setFastestLap] = useState(null);\n  const [polePosition, setPolePosition] = useState(null);\n  const [poleTime, setPoleTime] = useState(null);\n  const [loadingPoleTime, setLoadingPoleTime] = useState(true);\n  const [loadingPolePosition, setLoadingPolePosition] = useState(true);\n\n  const history = useHistory();\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  useEffect(() => {\n    const getFastestLap = () => {\n      lastRace.MRData.RaceTable.Races[0].Results.forEach((lap) => {\n        if (lap.FastestLap && lap.FastestLap.rank === \"1\") {\n          setFastestLap(lap);\n          return;\n        }\n      });\n    };\n\n    const getPolePosition = () => {\n      lastRace.MRData.RaceTable.Races[0].Results.forEach((result) => {\n        if (result.grid === \"1\") {\n          setPolePosition(result);\n          setLoadingPolePosition(false);\n\n          fetch(\n            `https://ergast.com/api/f1/${lastRace.MRData.RaceTable.season}/${lastRace.MRData.RaceTable.round}/drivers/${result.Driver.driverId}/qualifying.json`\n          )\n            .then((res) => res.json())\n            .then((result) => {\n              setPoleTime(\n                result.MRData.RaceTable.Races[0].QualifyingResults[0].Q3\n              );\n              setLoadingPoleTime(false);\n            });\n\n          return;\n        }\n      });\n    };\n\n    getFastestLap();\n    getPolePosition();\n  }, [\n    lastRace.MRData.RaceTable.season,\n    lastRace.MRData.RaceTable.round,\n    lastRace.MRData.RaceTable.Races,\n  ]);\n\n  return (\n    <GenericCard\n      cardTitle=\"PREVIOUS RACE\"\n      cardBody={\n        <>\n          <h4>PODIUM</h4>\n          <Table responsive className=\"table-hover\" variant={theme}>\n            <tbody className=\"justify-content-center\">\n              {lastRace.MRData.RaceTable.Races[0].Results.slice(0, 3).map(\n                (driver, index) => (\n                  <tr\n                    key={index}\n                    className=\"align-middle\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => rowClick(driver.Driver.driverId)}\n                  >\n                    <td className=\"icon\">\n                      {driver.position === \"1\" ? (\n                        <GiPodiumWinner size={23} />\n                      ) : driver.position === \"2\" ? (\n                        <GiPodiumSecond size={23} />\n                      ) : driver.position === \"3\" ? (\n                        <GiPodiumThird size={23} />\n                      ) : null}\n                    </td>\n                    <td>\n                      <Row className=\"g-0 text-start\">\n                        <Col xs=\"auto\" className=\"align-self-center\">\n                          <CircleFlag\n                            countryCode={CountriesCodeNationality[\n                              driver.Driver.nationality\n                            ].toLowerCase()}\n                            height={20}\n                          />\n                        </Col>\n\n                        <Col xs={2} sm={1}>\n                          <TeamColor\n                            constructorId={driver.Constructor.constructorId}\n                            height=\"42px\"\n                          />\n                        </Col>\n\n                        <Col xs={8} className=\"text-start\">\n                          <Row>\n                            <Col className=\"hideXS\">\n                              {driver.Driver.givenName}{\" \"}\n                              <p style={driverName}>\n                                {driver.Driver.familyName.toUpperCase()}\n                              </p>\n                            </Col>\n\n                            <Col className=\"showXS\">\n                              <p style={driverName}>\n                                {driver.Driver.familyName.toUpperCase()}\n                              </p>\n                            </Col>\n                          </Row>\n\n                          <Row>\n                            <Col style={{ fontSize: \"13px\" }}>\n                              {driver.Constructor.name}\n                            </Col>\n                          </Row>\n                        </Col>\n                      </Row>\n                    </td>\n                    <td className=\"third-info\">+{driver.points}</td>\n                  </tr>\n                )\n              )}\n            </tbody>\n          </Table>\n\n          <h4>FASTEST LAP / POLE POSITION</h4>\n\n          <Table responsive className=\"table-hover\" variant={theme}>\n            <tbody>\n              {fastestLap === null ? null : (\n                <tr\n                  className=\"align-middle\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => rowClick(fastestLap.Driver.driverId)}\n                >\n                  <td className=\"icon\">\n                    <FaStopwatch size={20} />\n                  </td>\n                  <td>\n                    <Row className=\"g-0 text-start\">\n                      <Col xs=\"auto\" className=\"align-self-center\">\n                        <CircleFlag\n                          countryCode={CountriesCodeNationality[\n                            fastestLap.Driver.nationality\n                          ].toLowerCase()}\n                          height={20}\n                        />\n                      </Col>\n\n                      <Col xs={2} sm={1}>\n                        <TeamColor\n                          constructorId={fastestLap.Constructor.constructorId}\n                          height=\"42px\"\n                        />\n                      </Col>\n\n                      <Col xs={8} className=\"text-start\">\n                        <Row>\n                          <Col className=\"hideXS\">\n                            {fastestLap.Driver.givenName}{\" \"}\n                            <p style={driverName}>\n                              {fastestLap.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n\n                          <Col className=\"showXS\">\n                            <p style={driverName}>\n                              {fastestLap.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n                        </Row>\n\n                        <Row>\n                          <Col style={{ fontSize: \"13px\" }}>\n                            {fastestLap.Constructor.name}\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </td>\n                  <td className=\"third-info\">\n                    {fastestLap.FastestLap.Time.time}\n                  </td>\n                </tr>\n              )}\n\n              {loadingPolePosition || loadingPoleTime ? null : (\n                <tr\n                  className=\"align-middle\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => rowClick(polePosition.Driver.driverId)}\n                >\n                  <td>\n                    <SiFastly size={21} />\n                  </td>\n                  <td>\n                    <Row className=\"g-0 text-start\">\n                      <Col xs=\"auto\" className=\"align-self-center\">\n                        <CircleFlag\n                          countryCode={CountriesCodeNationality[\n                            polePosition.Driver.nationality\n                          ].toLowerCase()}\n                          height={20}\n                        />\n                      </Col>\n\n                      <Col xs={2} sm={1}>\n                        <TeamColor\n                          constructorId={polePosition.Constructor.constructorId}\n                          height=\"42px\"\n                        />\n                      </Col>\n\n                      <Col xs={8}>\n                        <Row>\n                          <Col className=\"hideXS\">\n                            {polePosition.Driver.givenName}{\" \"}\n                            <p style={driverName}>\n                              {polePosition.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n\n                          <Col className=\"showXS\">\n                            <p style={driverName}>\n                              {polePosition.Driver.familyName.toUpperCase()}\n                            </p>\n                          </Col>\n                        </Row>\n\n                        <Row>\n                          <Col style={{ fontSize: \"13px\" }}>\n                            {polePosition.Constructor.name}\n                          </Col>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </td>\n                  <td className=\"third-info\">{poleTime}</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </>\n      }\n      cardFooter={\n        <h4>\n          ROUND: {lastRace.MRData.RaceTable.round}/\n          {lastRace.season === config.current_season\n            ? config.current_season_n_races\n            : config.previous_season_n_races}\n        </h4>\n      }\n      cardHeight=\"34rem\"\n    />\n  );\n};\n\nexport default PreviousRaceStats;\n","import React from \"react\";\nimport GenericCard from \"../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport DriversStandings from \"../Standings/DriversStandings\";\nimport Button from \"react-bootstrap/Button\";\n\nconst DriversStandingsCard = ({ driversStandings }) => {\n  return (\n    <GenericCard\n      cardTitle=\"DRIVERS' STANDINGS\"\n      cardBody={\n        <DriversStandings\n          style={{\n            overflow: \"hidden\",\n            overflowY: \"scroll\",\n            height: \"415px\",\n          }}\n          driversStandings={driversStandings}\n        />\n      }\n      cardHeight=\"34rem\"\n      cardFooter={\n        <Link to=\"/standings\">\n          <Button className=\"red-btn\" variant=\"danger\">\n            FULL STANDINGS\n          </Button>\n        </Link>\n      }\n    />\n  );\n};\n\nexport default DriversStandingsCard;\n","import React from \"react\";\nimport GenericCard from \"../Cards/GenericCard\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport ConstructorsStandings from \"../Standings/ConstructorsStandings\";\n\nconst ConstructorsStandingsCard = ({ constructorsStandings, season }) => {\n  return (\n    <GenericCard\n      cardTitle=\"CONSTRUCTORS' STANDINGS\"\n      cardBody={\n        <ConstructorsStandings\n          style={{\n            overflow: \"hidden\",\n            overflowY: \"scroll\",\n            height: \"415px\",\n          }}\n          constructorsStandings={constructorsStandings}\n          constructorSeason={season}\n          showEngine={false}\n        />\n      }\n      cardFooter={\n        <Link to=\"/standings\">\n          <Button className=\"red-btn\" variant=\"danger\">\n            FULL STANDINGS\n          </Button>\n        </Link>\n      }\n      cardHeight=\"34rem\"\n    />\n  );\n};\n\nexport default ConstructorsStandingsCard;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport PreviousRaceCard from \"../MainFeed/PreviousRaceCard\";\nimport NextRaceCard from \"./NextRaceCard\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport PreviousRaceStats from \"./PreviousRaceStats\";\nimport DriversStandingsCard from \"./DriversStandingsCard\";\nimport ConstructorsStandingsCard from \"./ConstructorsStandingsCard\";\nimport { FiRefreshCcw } from \"react-icons/fi\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Styles.css\";\nimport { config } from \"../../data/config\";\n\nconst MainFeed = () => {\n  const [nextRace, setNextRace] = useState(null);\n  const [lastRace, setLastRace] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [loadingNextRace, setLoadingNextRace] = useState(true);\n  const [loadingLastRace, setLoadingLastRace] = useState(true);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingTeamsStandings, setLoadingTeamsStandings] = useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchLastRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/current/last/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setLastRace(result);\n          setLoadingLastRace(false);\n        });\n    };\n\n    const fetchNextRaceData = async (round) => {\n      await fetch(`https://ergast.com/api/f1/current/next.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setNextRace(result.MRData.RaceTable.Races[0]);\n          setLoadingNextRace(false);\n        });\n    };\n\n    const fetchConstructorsStandings = async () => {\n      await fetch(`https://ergast.com/api/f1/current/constructorStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setConstructorsStandings(\n            result.MRData.StandingsTable.StandingsLists[0]\n          );\n          setLoadingTeamsStandings(false);\n        });\n    };\n\n    const fetchDriversStandings = async () => {\n      await fetch(`https://ergast.com/api/f1/current/driverStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setDriversStandings(\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\n          );\n          setLoadingDriversStandings(false);\n        });\n    };\n\n    fetchLastRaceResult();\n    fetchNextRaceData();\n    fetchDriversStandings();\n    fetchConstructorsStandings();\n  }, []);\n\n  const refreshCache = () => {\n    caches.keys().then(function (cacheNames) {\n      cacheNames.forEach(function (cacheName) {\n        caches.delete(cacheName);\n      });\n    });\n\n    window.location.reload();\n  };\n\n  return (\n    <Container style={{ minHeight: \"600px\" }}>\n      <Row className=\"justify-content-center text-center title\">\n        <Col xs={{ span: 8, offset: 2 }}>\n          <h1>{config.current_season} FORMULA 1</h1>\n        </Col>\n\n        <Col xs={2} className=\"text-end\">\n          <Button\n            onClick={() => refreshCache()}\n            className=\"red-btn title\"\n            variant=\"danger\"\n          >\n            <FiRefreshCcw />\n          </Button>\n        </Col>\n      </Row>\n      {loadingLastRace || loadingNextRace ? (\n        <Row className=\"justify-content-center text-center\">\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <>\n          <Row className=\"justify-content-center text-center g-2\">\n            <Col lg={12}>\n              <NextRaceCard nextRace={nextRace} />\n            </Col>\n\n            <Col xs={12} xl={6}>\n              <PreviousRaceCard lastRace={lastRace} />\n            </Col>\n\n            <Col xs={12} xl={6}>\n              <PreviousRaceStats lastRace={lastRace} />\n            </Col>\n          </Row>\n          {loadingDriversStandings || loadingTeamsStandings ? (\n            <Row\n              className=\"justify-content-center text-center\"\n              style={{ marginTop: \"10px\" }}\n            >\n              <Spinner animation=\"border\" />\n            </Row>\n          ) : (\n            <Row className=\"g-2\" style={{ marginTop: \"1px\" }}>\n              <Col xs={12} xl={6}>\n                <DriversStandingsCard driversStandings={driversStandings} />\n              </Col>\n\n              <Col xs={12} xl={6}>\n                <ConstructorsStandingsCard\n                  constructorsStandings={\n                    constructorsStandings.ConstructorStandings\n                  }\n                  season={constructorsStandings.season}\n                />\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default MainFeed;\n","import React from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport MainFeed from \"../components/MainFeed/MainFeed\";\n\nconst HomePage = () => {\n  return (\n    <>\n      <NavBar />\n      <MainFeed />\n      <Footer />\n    </>\n  );\n};\n\nexport default HomePage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Malaysian: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n  \"United States\": \"US\",\n  Qatar: \"QA\",\n  Chinese: \"CN\"\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n\n            <Col>\n              <Navbar.Brand\n                className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n\n        <br />\n\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export function getLocalRaceDate(date, time) {\n  const raceDate = new Date(date + \"T\" + time);\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n  const minutes =\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n  return hours + \":\" + minutes;\n}\n\nexport function convertDate(dateToConvert) {\n  const date = dateToConvert.split(\"-\");\n\n  return `${date[2]}/${date[1]}/${date[0]}`;\n}\n","export const config = {\n  first_season: 1950,\n  current_season: 2022,\n  previous_season_n_races: 22,\n  current_season_n_races: 23,\n};\n"],"sourceRoot":""}