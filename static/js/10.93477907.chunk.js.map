{"version":3,"sources":["components/Stats/Standings/Standings.js","pages/StandingsPage.js","data/CountryCodeNationality.js","components/Navbar/Navbar.js","components/Footer/Footer.js","../node_modules/react-bootstrap/esm/Table.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Stats/Standings/DriversStandings.js","components/Stats/Standings/ConstructorsStandings.js"],"names":["Standings","useState","sessionStorage","getItem","season","setSeason","seasonsYearsList","setSeasonsYearsList","driversStandings","setDriversStandings","constructorsStandings","setConstructorsStandings","loadingTeamsStandings","setLoadingTeamsStandings","loadingDriversStandings","setLoadingDriversStandings","useEffect","start","end","fetchConstructorsStandings","a","fetch","then","res","json","result","undefined","MRData","StandingsTable","StandingsLists","ConstructorStandings","fetchDriversStandings","DriverStandings","Date","getFullYear","Array","fill","map","_","i","reverse","Container","style","minHeight","Row","className","marginBottom","Spinner","animation","Col","Dropdown","Toggle","variant","id","Menu","maxHeight","overflowY","index","Item","onClick","e","text","target","textContent","setItem","md","ConstructorsStandings","DriversStandings","StandingsPage","Footer","CountriesCodeNationality","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","NavBar","bg","Brand","size","to","textDecoration","Collapse","href","xs","textAlign","color","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","TeamColor","constructorId","height","width","backgroundColor","hasOwnProperty","boldFont","fontWeight","margin","padding","display","history","useHistory","driver","cursor","driverId","Driver","push","position","permanentNumber","countryCode","nationality","toLowerCase","Constructors","familyName","toUpperCase","givenName","fontSize","name","wins","points","constructor","Constructor"],"mappings":"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","file":"static/js/10.93477907.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ConstructorsStandings from \"./ConstructorsStandings\";\nimport DriversStandings from \"./DriversStandings\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nconst Standings = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\n    sessionStorage.getItem(\"seasonStandingsInput\") !== null\n      ? sessionStorage.getItem(\"seasonStandingsInput\")\n      : \"2021\"\n  );\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingTeamsStandings, setLoadingTeamsStandings] = useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchConstructorsStandings = async () => {\n      setLoadingTeamsStandings(true);\n      await fetch(\n        `https://ergast.com/api/f1/${season}/constructorStandings.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.StandingsTable.StandingsLists[0] !== undefined) {\n            setConstructorsStandings(\n              result.MRData.StandingsTable.StandingsLists[0]\n                .ConstructorStandings\n            );\n          } else {\n            setConstructorsStandings(null);\n          }\n        });\n\n      setLoadingTeamsStandings(false);\n    };\n\n    const fetchDriversStandings = async () => {\n      setLoadingDriversStandings(true);\n      await fetch(`https://ergast.com/api/f1/${season}/driverStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setDriversStandings(\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\n          );\n          setLoadingDriversStandings(false);\n        });\n    };\n\n    const fillArrayBetweenTwoNumbers = (start, end) => {\n      setSeasonsYearsList(\n        Array(end - start + 1)\n          .fill()\n          .map((_, i) => start + i)\n          .reverse()\n      );\n    };\n\n    fetchConstructorsStandings();\n    fetchDriversStandings();\n    fillArrayBetweenTwoNumbers(FIRST_SEASON, new Date().getFullYear());\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n    sessionStorage.setItem(\"seasonStandingsInput\", text);\n  };\n\n  return (\n    <Container>\n      {loadingTeamsStandings || loadingDriversStandings ? (\n        <Container style={{ minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <h1 style={{ marginBottom: \"3%\" }}>FORMULA ONE</h1>\n            <Spinner animation=\"border\" />\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{ minHeight: \"700px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>{season} FORMULA ONE</h1>\n            </Col>\n          </Row>\n          <Row\n            className=\"justify-content-center text-center\"\n            style={{ marginBottom: \"2%\" }}\n          >\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  style={{ maxHeight: \"500px\", overflowY: \"scroll\" }}\n                >\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col md=\"auto\">\n              <h2>CONSTRUCTORS' STANDINGS</h2>\n            </Col>\n            <Row>\n              <Col>\n                <ConstructorsStandings\n                  constructorsStandings={constructorsStandings}\n                />\n              </Col>\n            </Row>\n            <Col md=\"auto\">\n              <h2>DRIVERS' STANDINGS</h2>\n            </Col>\n            <Row>\n              <Col>\n                <DriversStandings driversStandings={driversStandings} />\n              </Col>\n            </Row>\n          </Row>\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default Standings;\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Standings from \"../components/Stats/Standings/Standings\";\n\nconst StandingsPage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Standings />\n      <Footer />\n    </div>\n  );\n};\n\nexport default StandingsPage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea:  \"KR\"\n};\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\" aria-label=\"Github\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\" style={{ color: \"white\" }}>\n              REST Countries API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers, teams and circuits data are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/wiki/Main_Page\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  const history = useHistory();\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div style={style}>\n      <Table className=\"table-hover\" responsive=\"xs\">\n        <thead>\n          <tr>\n            <th>POS</th>\n            <th className=\"hideXS\">NO</th>\n            <th>NAME/TEAM</th>\n            <th className=\"hideXS\">WINS</th>\n            <th>POINTS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr\n              key={index}\n              className=\"align-middle\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\n              <td>\n                <Row className=\"g-0\">\n                  <Col xs={2} className=\"align-self-center\">\n                    <CircleFlag\n                      countryCode={CountriesCodeNationality[\n                        driver.Driver.nationality\n                      ].toLowerCase()}\n                      height={20}\n                    />\n                  </Col>\n                  <Col xs={1}>\n                    <TeamColor\n                      constructorId={driver.Constructors[0].constructorId}\n                      height=\"42px\"\n                    />\n                  </Col>\n                  <Col xs={8} className=\"text-start\">\n                    <Row>\n                      <Col className=\"showXS\">\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                      <Col className=\"hideXS\">\n                        {driver.Driver.givenName}{\" \"}\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col style={{ fontSize: \"13px\" }}>\n                        {driver.Constructors[0].name}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst ConstructorsStandings = ({ style, constructorsStandings }) => {\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table responsive=\"sm\">\n          <thead>\n            <tr>\n              <th>POS</th>\n              <th>NAME</th>\n              <th className=\"hideXS\">WINS</th>\n              <th>POINTS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr key={index}>\n                <td>{constructor.position}</td>\n                <td>\n                  <Row>\n                    <Col xs={2}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          constructor.Constructor.nationality\n                        ].toLowerCase()}\n                        height={20}\n                      />\n                    </Col>\n                    <Col xs={1}>\n                      <TeamColor\n                        constructorId={constructor.Constructor.constructorId}\n                      />\n                    </Col>\n                    <Col xs={8} className=\"text-start\">\n                      {constructor.Constructor.name.toUpperCase()}\n                    </Col>\n                  </Row>\n                </td>\n                <td className=\"hideXS\">{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n"],"sourceRoot":""}