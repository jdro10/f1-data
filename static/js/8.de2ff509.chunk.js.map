{"version":3,"sources":["components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/Podium.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitData.js","components/Stats/RaceData/CircuitTab.js","components/Stats/RaceData/EventTabs.js","components/Stats/RaceData/RaceCountdown.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","components/Navbar/Navbar.js","components/Footer/Footer.js","data/TeamColors.js","components/TeamColor/TeamColor.js","data/CountryCodeNationality.js","components/Countdown/ClockCountdown.js"],"names":["RaceClassification","raceClassification","Table","responsive","className","map","driver","index","position","number","Row","Col","xs","md","TeamColor","constructorId","Constructor","height","Driver","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","time","FastestLap","rank","points","RaceQualifying","raceQualifying","hasOwnProperty","code","substring","Q1","Q2","Q3","Podium","eventClassification","Container","span","order","id","countryCode","CountriesCodeNationality","nationality","toLowerCase","RaceTab","raceInfo","eventCountryCode","raceName","date","raceDate","Date","getHours","getMinutes","getLocalRaceDate","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","url","Marker","Popup","Circuit","circuitId","fastestLap","setFastestLap","firstGrandPrix","setFirstGrandPrix","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","fetch","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","Results","season","CircuitTab","Location","country","locality","lat","long","mapHeight","EventTabs","setEventCountryCode","a","alpha2Code","catch","error","fetchCountryCode","Tabs","defaultActiveKey","Tab","eventKey","title","style","minHeight","RaceCountdown","round","setRaceInfo","loadingRaceInfo","setLoadingRaceInfo","parseInt","fetchRaceInfo","fluid","to","Race","setRaceClassification","setRaceQualifying","loadingRaceResult","setLoadingRaceResult","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceResult","fetchRaceQualifying","QualifyingResults","marginTop","Spinner","animation","RaceResult","useParams","Footer","NavBar","bg","variant","Brand","size","textDecoration","Collapse","href","textAlign","color","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","width","backgroundColor","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","ClockCoutdown","now","getTime","split","renderer","days","hours","minutes","seconds","sm","lg"],"mappings":"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","file":"static/js/8.de2ff509.chunk.js","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst RaceClassification = ({ raceClassification }) => {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">Number</th>\n            <th>Driver</th>\n            <th className=\"hideXS\">Team</th>\n            <th className=\"hideXS\">Laps</th>\n            <th>Time/Retired</th>\n            <th>Pts</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td>\n                <Row className=\"row nopadding\">\n                  <Col xs={2} md={1}>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                      height=\"45px\"\n                    />\n                  </Col>\n                  <Col xs={6} md={11}>\n                    {driver.Driver.givenName}{\" \"}\n                    <b>{driver.Driver.familyName.toUpperCase()}</b>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../Styles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">Number</th>\n            <th>Driver</th>\n            <th className=\"hideXS\">Team</th>\n            <th>Q1</th>\n            <th>Q2</th>\n            <th>Q3</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceQualifying.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td className=\"hideXS\">\n                <Row className=\"row nopadding\">\n                  <Col xs={1}>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={11}>\n                    {driver.Driver.givenName} {driver.Driver.familyName}\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"showXS\">\n                <Row className=\"row nopadding\">\n                  <Col xs={2}>\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td>\n                {driver.hasOwnProperty(\"Q1\")\n                  ? driver.Q1 === \"\"\n                    ? \"-\"\n                    : driver.Q1\n                  : \"-\"}\n              </td>\n              <td>{driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}</td>\n              <td>{driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default RaceQualifying;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst Podium = ({ eventClassification }) => {\n  return (\n    <div>\n      <Container>\n        <Row className=\"text-center\">\n          <Col\n            xs={{ span: 12, order: \"second\" }}\n            md={{ span: 4, order: \"first\" }}\n          >\n            <div id=\"secondPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h2>2nd</h2>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[1].number}{\" \"}\n                    {eventClassification[1].Driver.givenName}{\" \"}\n                    {eventClassification[1].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <CircleFlag\n                    countryCode={CountriesCodeNationality[\n                      eventClassification[1].Driver.nationality\n                    ].toLowerCase()}\n                    height=\"60\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[1].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[1].hasOwnProperty(\"Time\")\n                      ? eventClassification[1].Time.time\n                      : eventClassification[1].hasOwnProperty(\"status\") &&\n                        eventClassification[1].status !== \"Finished\"\n                      ? eventClassification[1].status\n                      : eventClassification[1].hasOwnProperty(\"Q3\")\n                      ? eventClassification[1].Q3\n                      : eventClassification[1].Q1}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col\n            xs={{ span: 12, order: \"first\" }}\n            md={{ span: 4, order: \"second\" }}\n          >\n            <div id=\"firstPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h1>1st</h1>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[0].number}{\" \"}\n                    {eventClassification[0].Driver.givenName}{\" \"}\n                    {eventClassification[0].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <CircleFlag\n                    countryCode={CountriesCodeNationality[\n                      eventClassification[0].Driver.nationality\n                    ].toLowerCase()}\n                    height=\"60\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[0].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[0].hasOwnProperty(\"Time\")\n                      ? eventClassification[0].Time.time\n                      : eventClassification[0].hasOwnProperty(\"status\") &&\n                        eventClassification[0].status !== \"Finished\"\n                      ? eventClassification[0].status\n                      : eventClassification[0].hasOwnProperty(\"Q3\")\n                      ? eventClassification[0].Q3\n                      : eventClassification[0].Q1}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={{ span: 12, order: \"last\" }} md={{ span: 4, order: \"last\" }}>\n            <div id=\"thirdPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>3rd</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[2].number}{\" \"}\n                    {eventClassification[2].Driver.givenName}{\" \"}\n                    {eventClassification[2].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <CircleFlag\n                    countryCode={CountriesCodeNationality[\n                      eventClassification[2].Driver.nationality\n                    ].toLowerCase()}\n                    height=\"60\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[2].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[2].hasOwnProperty(\"Time\")\n                      ? eventClassification[2].Time.time\n                      : eventClassification[2].hasOwnProperty(\"status\") &&\n                        eventClassification[2].status !== \"Finished\"\n                      ? eventClassification[2].status\n                      : eventClassification[2].hasOwnProperty(\"Q3\")\n                      ? eventClassification[2].Q3\n                      : eventClassification[2].Q1}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Podium;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  const getLocalRaceDate = (date, time) => {\n    const raceDate = new Date(date + \"T\" + time);\n    const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n    const minutes =\n      (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n    return hours + \":\" + minutes + \":00\";\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1>{raceInfo.raceName}</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{raceInfo.date}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag countryCode={eventCountryCode} height=\"100\" />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={12}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Circuit = ({ circuitId }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(`https://ergast.com/api/f1/circuits/${circuitId}/races.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGrandPrix(result.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [circuitId]);\n\n  return (\n    <div>\n      {loadingFastestLap || loadingFirstGrandPrix ? null : (\n        <div>\n          {fastestLap === undefined ? null : (\n            <Row>\n              <h5>\n                Lap record: {fastestLap.Results[0].FastestLap.Time.time}\n                {\" - \"}\n                {fastestLap.season}\n                {\" - \"}\n                {fastestLap.Results[0].Driver.givenName}{\" \"}\n                {fastestLap.Results[0].Driver.familyName}{\" \"}\n              </h5>\n            </Row>\n          )}\n          <Row>\n            <h5>First grand prix: {firstGrandPrix}</h5>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Circuit;\n","import React from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport Circuit from \"./CircuitData\";\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col>\n          <h1>{raceInfo.Circuit.circuitName}</h1>\n          <h3>\n            <CircleFlag countryCode={eventCountryCode} height=\"30\" />{\" \"}\n            {raceInfo.Circuit.Location.country}\n          </h3>\n          <h3>{raceInfo.Circuit.Location.locality}</h3>\n          <Circuit circuitId={raceInfo.Circuit.circuitId} />\n        </Col>\n        <Col md=\"auto\">\n          <Map\n            coordinates={[\n              raceInfo.Circuit.Location.lat,\n              raceInfo.Circuit.Location.long,\n            ]}\n            circuitName={raceInfo.Circuit.circuitName}\n            mapHeight={{ height: \"600px\" }}\n          ></Map>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport EventPodium from \"./Podium\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  const [eventCountryCode, setEventCountryCode] = useState(null);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${raceInfo.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setEventCountryCode(result[0].alpha2Code.toLowerCase());\n        })\n        .catch((error) => setEventCountryCode(null));\n    };\n\n    fetchCountryCode();\n  }, [raceInfo.Circuit.Location.country]);\n\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"race\" title=\"Race\">\n          <Container style={{ minHeight: \"250px\" }}>\n            <RaceTab raceInfo={raceInfo} eventCountryCode={eventCountryCode} />\n          </Container>\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : null}\n        </Tab>\n\n        <Tab eventKey=\"circuit\" title=\"Circuit\">\n          <Container style={{ minHeight: \"250px\" }}>\n            <CircuitTab\n              raceInfo={raceInfo}\n              eventCountryCode={eventCountryCode}\n            />\n          </Container>\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : null}\n        </Tab>\n\n        {raceClassification != null ? (\n          <Tab eventKey=\"podium\" title=\"Podium\">\n            <Container style={{ minHeight: \"250px\" }}>\n              <EventPodium eventClassification={raceClassification} />\n            </Container>\n            <RaceClassification raceClassification={raceClassification} />\n          </Tab>\n        ) : null}\n\n        {raceQualifying != null ? (\n          <Tab eventKey=\"qualifying\" title=\"Qualifying\">\n            <Container style={{ minHeight: \"250px\" }}>\n              <EventPodium eventClassification={raceQualifying} />\n            </Container>\n            <RaceQualifying raceQualifying={raceQualifying} />\n          </Tab>\n        ) : null}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport EventTabs from \"./EventTabs\";\nimport { Redirect } from \"react-router-dom\";\nimport ClockCoutdown from \"../../Countdown/ClockCountdown\";\n\nconst RaceCountdown = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    fetchRaceInfo();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"700px\" }}>\n        {loadingRaceInfo ? null : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <EventTabs season={season} round={round} raceInfo={raceInfo} />\n            <Row className=\"justify-content-center text-center\">\n              <ClockCoutdown date={raceInfo.date} time={raceInfo.time} />\n            </Row>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default RaceCountdown;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport RaceCountdown from \"./RaceCountdown\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"700px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <RaceCountdown season={season} round={round} />\n        ) : (\n          <Container>\n            <EventTabs\n              raceInfo={raceInfo}\n              raceClassification={raceClassification}\n              raceQualifying={raceQualifying}\n            />\n          </Container>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <div>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default RaceResult;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\" aria-label=\"Github\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\">\n          <Col>\n            <p id=\"author\"></p>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{color: \"white\"}}>Ergast API</a>.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\" style={{color: \"white\"}}>REST Countries API</a>.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DN\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\"\n};\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCoutdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds }) => {\n    return (\n      <>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{days}</h1>\n          <h5>days</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{hours}</h1>\n          <h5>hour.</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{minutes}</h1>\n          <h5>min.</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{seconds}</h1>\n          <h5>sec.</h5>\n        </Col>\n      </>\n    );\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCoutdown;\n"],"sourceRoot":""}