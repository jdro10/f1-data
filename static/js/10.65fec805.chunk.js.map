{"version":3,"sources":["components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitTab.js","components/Stats/RaceData/EventTabs.js","components/Stats/RaceData/FutureRace.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","components/Navbar/Navbar.js","components/Footer/Footer.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Countdown/ClockCountdown.js"],"names":["RaceClassification","raceClassification","Table","responsive","className","map","driver","index","position","number","Row","Col","xs","md","TeamColor","constructorId","Constructor","height","Driver","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","time","FastestLap","rank","points","RaceQualifying","raceQualifying","hasOwnProperty","code","substring","Q1","Q2","Q3","RaceTab","raceInfo","eventCountryCode","raceName","date","raceDate","Date","getHours","getMinutes","getLocalRaceDate","countryCode","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","url","Marker","Popup","CircuitTab","fastestLap","setFastestLap","firstGrandPrix","setFirstGrandPrix","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","fetch","Circuit","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","Results","season","Location","country","locality","lat","long","mapHeight","EventTabs","setEventCountryCode","a","alpha2Code","toLowerCase","catch","error","fetchCountryCode","Tabs","defaultActiveKey","id","Tab","eventKey","title","Container","style","minHeight","ClockCountdown","FutureRace","round","setRaceInfo","setRaceQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceInfo","parseInt","fetchRaceQualifying","QualifyingResults","fluid","to","Race","setRaceClassification","loadingRaceResult","setLoadingRaceResult","fetchRaceResult","marginTop","Spinner","animation","RaceResult","useParams","Footer","NavBar","bg","variant","Brand","size","textDecoration","Collapse","href","textAlign","color","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","width","backgroundColor","now","getTime","split","renderer","days","hours","minutes","seconds","sm","lg"],"mappings":"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","file":"static/js/10.65fec805.chunk.js","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst RaceClassification = ({ raceClassification }) => {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">Number</th>\n            <th>Driver</th>\n            <th className=\"hideXS\">Team</th>\n            <th className=\"hideXS\">Laps</th>\n            <th>Time/Retired</th>\n            <th>Pts</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td>\n                <Row className=\"g-2\">\n                  <Col xs={2} md={2} className=\"showXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                      height=\"45px\"\n                    />\n                  </Col>\n                  <Col xs={2} className=\"hideXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6} md={10}>\n                    {driver.Driver.givenName}{\" \"}\n                    <b>{driver.Driver.familyName.toUpperCase()}</b>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../Styles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  return (\n    <Table responsive=\"sm\">\n      <thead>\n        <tr>\n          <th>Pos</th>\n          <th className=\"hideXS\">Number</th>\n          <th>Driver</th>\n          <th className=\"hideXS\">Team</th>\n          <th>Q1</th>\n          <th>Q2</th>\n          <th>Q3</th>\n        </tr>\n      </thead>\n      <tbody>\n        {raceQualifying.map((driver, index) => (\n          <tr key={index}>\n            <td>{driver.position}</td>\n            <td className=\"hideXS\">{driver.number}</td>\n            <td className=\"hideXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col>\n                  {driver.Driver.givenName}{\" \"}\n                  <b>{driver.Driver.familyName.toUpperCase()}</b>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"showXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col xs={6}>\n                  <b>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </b>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"hideXS\">{driver.Constructor.name}</td>\n            <td>\n              {driver.hasOwnProperty(\"Q1\")\n                ? driver.Q1 === \"\"\n                  ? \"-\"\n                  : driver.Q1\n                : \"-\"}\n            </td>\n            <td>{driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}</td>\n            <td>{driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default RaceQualifying;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  const getLocalRaceDate = (date, time) => {\n    const raceDate = new Date(date + \"T\" + time);\n    const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n    const minutes =\n      (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n    return hours + \":\" + minutes + \":00\";\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1>{raceInfo.raceName}</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{raceInfo.date}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag countryCode={eventCountryCode} height=\"100\" />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={12}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGrandPrix(result.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [raceInfo.Circuit.circuitId]);\n\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col>\n          <h1>{raceInfo.Circuit.circuitName}</h1>\n          <h3>\n            <CircleFlag countryCode={eventCountryCode} height=\"30\" />{\" \"}\n            {raceInfo.Circuit.Location.country}\n          </h3>\n          <h3>{raceInfo.Circuit.Location.locality}</h3>\n          <div>\n            {loadingFastestLap || loadingFirstGrandPrix ? null : (\n              <div>\n                {fastestLap === undefined ? null : (\n                  <Row>\n                    <h5>\n                      Lap record: {fastestLap.Results[0].FastestLap.Time.time}\n                      {\" - \"}\n                      {fastestLap.season}\n                      {\" - \"}\n                      {fastestLap.Results[0].Driver.givenName}{\" \"}\n                      {fastestLap.Results[0].Driver.familyName}{\" \"}\n                    </h5>\n                  </Row>\n                )}\n                <Row>\n                  <h5>First grand prix: {firstGrandPrix}</h5>\n                </Row>\n              </div>\n            )}\n          </div>\n        </Col>\n        <Col md=\"auto\">\n          <Map\n            coordinates={[\n              raceInfo.Circuit.Location.lat,\n              raceInfo.Circuit.Location.long,\n            ]}\n            circuitName={raceInfo.Circuit.circuitName}\n            mapHeight={{ height: \"600px\" }}\n          ></Map>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\nimport Row from \"react-bootstrap/Row\";\nimport ClockCountdown from \"../../Countdown/ClockCountdown\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  const [eventCountryCode, setEventCountryCode] = useState(null);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${raceInfo.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setEventCountryCode(result[0].alpha2Code.toLowerCase());\n        })\n        .catch((error) => setEventCountryCode(null));\n    };\n\n    fetchCountryCode();\n  }, [raceInfo.Circuit.Location.country]);\n\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"race\" title=\"Race\">\n          <Container style={{ minHeight: \"250px\" }}>\n            <RaceTab raceInfo={raceInfo} eventCountryCode={eventCountryCode} />\n          </Container>\n          {raceClassification != null ? (\n            <RaceClassification raceClassification={raceClassification} />\n          ) : (\n            <Row className=\"justify-content-center text-center\">\n              <ClockCountdown date={raceInfo.date} time={raceInfo.time} />\n            </Row>\n          )}\n        </Tab>\n\n        <Tab eventKey=\"circuit\" title=\"Circuit\">\n          <Container style={{ minHeight: \"500px\" }}>\n            <CircuitTab\n              raceInfo={raceInfo}\n              eventCountryCode={eventCountryCode}\n            />\n          </Container>\n        </Tab>\n\n        {raceQualifying != null ? (\n          <Tab eventKey=\"qualifying\" title=\"Qualifying\">\n            <RaceQualifying raceQualifying={raceQualifying} />\n          </Tab>\n        ) : null}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport { Redirect } from \"react-router-dom\";\n\nconst FutureRace = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceInfo();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"700px\" }}>\n        {loadingRaceInfo || loadingRaceQualifying ? null : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <EventTabs\n              season={season}\n              round={round}\n              raceInfo={raceInfo}\n              raceQualifying={raceQualifying}\n            />\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default FutureRace;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport FutureRace from \"./FutureRace\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"700px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <FutureRace season={season} round={round} />\n        ) : (\n          <Container>\n            <EventTabs\n              raceInfo={raceInfo}\n              raceClassification={raceClassification}\n              raceQualifying={raceQualifying}\n            />\n          </Container>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <div>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default RaceResult;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\" aria-label=\"Github\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\">\n          <Col>\n            <p id=\"author\"></p>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{color: \"white\"}}>Ergast API</a>.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\" style={{color: \"white\"}}>REST Countries API</a>.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds }) => {\n    return (\n      <>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{days}</h1>\n          <h5>days</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{hours}</h1>\n          <h5>hour.</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{minutes}</h1>\n          <h5>min.</h5>\n        </Col>\n        <Col xs={3} sm={2} lg={1}>\n          <h1>{seconds}</h1>\n          <h5>sec.</h5>\n        </Col>\n      </>\n    );\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n"],"sourceRoot":""}