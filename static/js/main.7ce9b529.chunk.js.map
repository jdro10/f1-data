{"version":3,"sources":["components/Navbar/Navbar.js","components/Footer/Footer.js","components/Cards/GenericCard.js","data/CountryCodeNationality.js","components/Stats/Standings/DriversStandings.js","components/Stats/Standings/ConstructorsStandings.js","components/Stats/MainFeed/PreviousRaceCard.js","components/Stats/MainFeed/NextRaceCards.js","components/Stats/MainFeed/StandingsCard.js","components/Stats/MainFeed/PreviousRaceWinner.js","components/Stats/MainFeed/MainFeed.js","pages/HomePage.js","components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/Podium.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitData.js","components/Stats/RaceData/CircuitTab.js","components/Stats/RaceData/Tabs.js","components/Stats/RaceData/RaceCountdown.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","components/Races/RaceInfo.js","components/Races/Races.js","pages/SeasonRaces.js","components/Error/Error.js","pages/ErrorPage.js","components/Stats/Standings/Standings.js","pages/StandingsPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","className","bg","variant","Container","Brand","to","Collapse","href","size","Footer","Row","xs","Col","id","md","style","textAlign","GenericCard","cardTitle","cardBody","cardFooter","cardHeight","Card","height","text","Header","Body","CountriesCodeNationality","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","DriversStandings","driversStandings","Table","responsive","map","driver","index","position","code","Driver","nationality","width","permanentNumber","givenName","familyName","Constructors","name","wins","points","ConstructorsStandings","constructorsStandings","constructor","Constructor","PreviousRaceCard","previousRaceData","useState","countryCode","setCountryCode","loadingCountryCode","setLoadingCountryCode","useEffect","a","fetch","MRData","RaceTable","Races","Circuit","Location","country","response","json","data","alpha3Code","fetchCountryCode","date","round","raceName","circuitName","season","Button","NextRaceCard","nextRaceData","Date","now","getTime","time","split","StandingsCard","type","standings","PreviousRaceWinner","totalNumberOfRaces","Results","Time","MainFeed","setNextRaceData","setDriversStandings","previousRaceResult","setPreviousRaceResult","setTotalNumberOfRaces","setConstructorsStandings","loadingNextRaceData","setLoadingNextRaceData","loadingPreviousRaceResult","setLoadingPreviousRaceResult","loadingConstructorsStandings","setLoadingConstructorsStandings","loadingDriversStandings","setLoadingDriversStandings","fetchPreviousRaceResult","fetchNextRaceData","length","parseInt","fetchConstructorsStandings","StandingsTable","StandingsLists","ConstructorStandings","fetchDriversStandings","DriverStandings","minHeight","marginBottom","color","loading","sm","lg","overflow","overflowY","HomePage","RaceClassification","raceClassification","number","laps","undefined","status","FastestLap","rank","RaceQualifying","raceQualifying","Q1","Q2","Q3","Podium","eventClassification","span","order","hasOwnProperty","RaceTab","raceInfo","eventCountryCode","raceDate","raceTime","Map","coordinates","mapHeight","setMap","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","url","Marker","Popup","circuitId","fastestLap","setFastestLap","firstGrandPrix","setFirstGrandPrix","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","then","res","bestLap","forEach","lap","CircuitTab","circuitCountry","circuitLocality","numberOfLaps","circuitLatitude","circuitLongitude","EventTabs","setEventCountryCode","ok","catch","error","Tabs","defaultActiveKey","Tab","eventKey","title","RaceCountdown","setRaceInfo","loadingRaceInfo","setLoadingRaceInfo","locality","lat","long","substring","fetchRaceInfo","fluid","Race","setRaceClassification","setRaceQualifying","loadingRaceResult","setLoadingRaceResult","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceResult","fetchRaceQualifying","QualifyingResults","marginTop","RaceResult","useParams","RaceInfo","race","loadigCountryCode","setSeason","seasonSchedule","setSeasonSchedule","seasonsYearsList","setSeasonsYearsList","loadingSeasonSchedule","setLoadingSchedule","start","end","fetchSeasonSchedule","getFullYear","Array","fill","_","i","reverse","Dropdown","Toggle","Menu","Item","onClick","e","target","textContent","Accordion","SeasonSchedule","Error","ErrorPage","Standings","maxHeight","StandingsPage","App","basename","path","exact","component","SeasonRaces","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ce9b529.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>RData</Navbar.Brand>\n        <Link to=\"/\">\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\">\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\">\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\">\n            <AiFillGithub size={25}/>\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\">\n          <Col>\n            <p id=\"author\"></p>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\">Ergast API</a>.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\">REST Countries API</a>.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\n\nconst GenericCard = ({\n  cardTitle,\n  cardBody,\n  cardFooter,\n  cardHeight,\n  variant,\n}) => {\n  return (\n    <Card\n      style={{ height: cardHeight }}\n      className=\"text-center\"\n      bg={variant}\n      text={variant === \"light\" ? \"dark\" : \"white\"}\n    >\n      <Card.Header>{cardTitle}</Card.Header>\n      <Card.Body>\n        <Card.Body>\n          <Row className=\"justify-content-md-center\">{cardBody}</Row>\n        </Card.Body>\n      </Card.Body>\n      <Card.Footer>{cardFooter}</Card.Footer>\n    </Card>\n  );\n};\n\nexport default GenericCard;\n","export const CountriesCodeNationality = {\n  British: \"GBR\",\n  Finnish: \"FIN\",\n  Dutch: \"NLD\",\n  Mexican: \"MEX\",\n  Spanish: \"ESP\",\n  Australian: \"AUS\",\n  Monegasque: \"MCO\",\n  French: \"FRA\",\n  German: \"DEU\",\n  Japanese: \"JPN\",\n  Canadian: \"CAN\",\n  Italian: \"ITA\",\n  Russian: \"RUS\",\n  Austrian: \"AUT\",\n  Swiss: \"CHE\",\n  American: \"USA\",\n  Thai: \"THA\",\n  \"New Zealander\": \"NZL\",\n  \"New Zealand\": \"NZL\",\n  Swedish: \"SWE\",\n  Portuguese: \"PRT\",\n  Brazilian: \"BRA\",\n  Hungarian: \"HUN\",\n  Argentine: \"ARG\",\n  Belgian: \"BEL\",\n  Belgium: \"BEL\",\n  \"South African\": \"ZAF\",\n  Danish: \"DNK\",\n  Liechtensteiner: \"LIE\",\n  \"Hong Kong\": \"HKG\",\n  Irish: \"IRL\",\n  Chilean: \"CHL\",\n  Venezuelan: \"VEN\",\n  Colombian: \"COL\",\n  Czech: \"CZE\",\n  Malaysian: \"MYS\",\n  Indian: \"IND\",\n  Polish: \"POL\",\n  Indonesian: \"IDN\",\n  Rhodesian: \"ZWE\"\n};\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Flag from \"react-world-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  return (\n    <div style={style}>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th>Country</th>\n            <th>No</th>\n            <th>Name</th>\n            <th>Team</th>\n            <th>Wins</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td>\n                <Flag\n                  code={CountriesCodeNationality[driver.Driver.nationality]}\n                  height=\"15\"\n                  width=\"25\"\n                />\n              </td>\n              <td>{driver.Driver.permanentNumber}</td>\n              <td>\n                {driver.Driver.givenName + \" \" + driver.Driver.familyName}\n              </td>\n              <td>{driver.Constructors[0].name}</td>\n              <td>{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Flag from \"react-world-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst ConstructorsStandings = ({ style, constructorsStandings }) => {\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table responsive=\"sm\">\n          <thead>\n            <tr>\n              <th>Position</th>\n              <th>Nationality</th>\n              <th>Name</th>\n              <th>Wins</th>\n              <th>Points</th>\n            </tr>\n          </thead>\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr key={index}>\n                <td>{constructor.position}</td>\n                <td>\n                  <Flag\n                    code={\n                      CountriesCodeNationality[\n                        constructor.Constructor.nationality\n                      ]\n                    }\n                    height=\"15\"\n                    width=\"25\"\n                  />\n                </td>\n                <td>{constructor.Constructor.name}</td>\n                <td>{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n","import React, { useState, useEffect } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport Button from \"react-bootstrap/Button\";\n\nconst PreviousRaceCard = ({ previousRaceData }) => {\n  const [countryCode, setCountryCode] = useState(null);\n  const [loadingCountryCode, setLoadingCountryCode] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      const response = await fetch(\n        `https://restcountries.eu/rest/v2/name/${previousRaceData.MRData.RaceTable.Races[0].Circuit.Location.country}?fullText=true`\n      );\n      const data = await response.json();\n\n      setCountryCode(data[0].alpha3Code);\n      setLoadingCountryCode(false);\n    };\n\n    fetchCountryCode();\n  }, [previousRaceData.MRData.RaceTable.Races]);\n\n  return (\n    <GenericCard\n      cardTitle={\n        \"Previous race - \" + previousRaceData.MRData.RaceTable.Races[0].date\n      }\n      cardBody={\n        <div>\n          <h4>Round {previousRaceData.MRData.RaceTable.round}</h4>\n          <h2>\n            {previousRaceData.MRData.RaceTable.Races[0].raceName +\n              \" - \" +\n              previousRaceData.MRData.RaceTable.Races[0].Circuit.circuitName}\n          </h2>\n          {loadingCountryCode ? \"\" : <Flag code={countryCode} height=\"50\" />}\n        </div>\n      }\n      cardFooter={\n        <Link\n          to={\n            \"/race/\" +\n            previousRaceData.MRData.RaceTable.season +\n            \"/\" +\n            previousRaceData.MRData.RaceTable.round\n          }\n        >\n          <Button variant=\"primary\">Race result</Button>\n        </Link>\n      }\n      cardHeight=\"24rem\"\n      variant={\"light\"}\n    ></GenericCard>\n  );\n};\n\nexport default PreviousRaceCard;\n","import React, { useState, useEffect } from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { Link } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\nimport Button from \"react-bootstrap/Button\";\nimport Countdown from \"react-countdown\";\n\nconst NextRaceCard = ({ nextRaceData }) => {\n  const [countryCode, setCountryCode] = useState(null);\n  const [loadingCountryCode, setLoadingCountryCode] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      const response = await fetch(\n        `https://restcountries.eu/rest/v2/name/${nextRaceData.Circuit.Location.country}?fullText=true`\n      );\n      const data = await response.json();\n\n      setCountryCode(data[0].alpha3Code);\n      setLoadingCountryCode(false);\n    };\n\n    fetchCountryCode();\n  }, [nextRaceData.Circuit.Location.country]);\n\n  return (\n    <GenericCard\n      cardTitle={\"Next race - \" + nextRaceData.date}\n      cardBody={\n        <div>\n          <h4>Round {nextRaceData.round}</h4>\n          <h3>{nextRaceData.raceName + \" - \" + nextRaceData.Circuit.circuitName}</h3>\n          {loadingCountryCode ? \"\" : <Flag code={countryCode} height=\"50\" />}\n          <h2>\n            <Countdown\n              date={\n                Date.now() +\n                (new Date(nextRaceData.date).getTime() +\n                  nextRaceData.time.split(\":\")[0] * 3600000 -\n                  new Date().getTime())\n              }\n            />\n          </h2>\n        </div>\n      }\n      cardFooter={\n        <Link to={\"/race/\" + nextRaceData.season + \"/\" + nextRaceData.round}>\n          <Button variant=\"primary\">Race information</Button>\n        </Link>\n      }\n      cardHeight=\"24rem\"\n      variant={\"light\"}\n    ></GenericCard>\n  );\n};\n\nexport default NextRaceCard;\n","import React from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\n\nconst StandingsCard = ({ type, standings }) => {\n  return (\n    <GenericCard\n      cardTitle={type + \" standings\"}\n      cardBody={standings}\n      cardHeight=\"27rem\"\n      variant={\"light\"}\n    ></GenericCard>\n  );\n};\n\nexport default StandingsCard;\n","import React from \"react\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Flag from \"react-world-flags\";\n\nconst PreviousRaceWinner = ({ previousRaceData, totalNumberOfRaces }) => {\n  return (\n    <GenericCard\n      cardTitle=\"Previous race winner\"\n      cardBody={\n        <div>\n          <h3>\n            {previousRaceData.MRData.RaceTable.Races[0].Results[0].Driver\n              .permanentNumber +\n              \" - \" +\n              previousRaceData.MRData.RaceTable.Races[0].Results[0].Driver\n                .givenName +\n              \" \" +\n              previousRaceData.MRData.RaceTable.Races[0].Results[0].Driver\n                .familyName}\n          </h3>\n\n          <h4>\n            {\n              previousRaceData.MRData.RaceTable.Races[0].Results[0].Constructor\n                .name\n            }\n          </h4>\n          <h4>\n            {previousRaceData.MRData.RaceTable.Races[0].Results[0].Time.time}\n          </h4>\n          <Flag\n            code={\n              CountriesCodeNationality[\n                previousRaceData.MRData.RaceTable.Races[0].Results[0].Driver\n                  .nationality\n              ]\n            }\n            height={50}\n          />\n        </div>\n      }\n      cardFooter={\n        <h4>\n          Round:{\" \"}\n          {previousRaceData.MRData.RaceTable.round + \" / \" + totalNumberOfRaces}\n        </h4>\n      }\n      cardHeight=\"24rem\"\n      variant={\"primary\"}\n    ></GenericCard>\n  );\n};\n\nexport default PreviousRaceWinner;\n","import React, { useState, useEffect } from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport GenericCard from \"../../Cards/GenericCard\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport DriversStandings from \"../Standings/DriversStandings\";\nimport ConstructorsStandings from \"../Standings/ConstructorsStandings\";\nimport PreviousRaceCard from \"../MainFeed/PreviousRaceCard\";\nimport NextRaceCard from \"../MainFeed/NextRaceCards\";\nimport StandingsCard from \"./StandingsCard\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport PreviousRaceWinner from \"./PreviousRaceWinner\";\n\nconst MainFeed = () => {\n  const [nextRaceData, setNextRaceData] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [previousRaceResult, setPreviousRaceResult] = useState(null);\n  const [totalNumberOfRaces, setTotalNumberOfRaces] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingNextRaceData, setLoadingNextRaceData] = useState(true);\n  const [loadingPreviousRaceResult, setLoadingPreviousRaceResult] =\n    useState(true);\n  const [loadingConstructorsStandings, setLoadingConstructorsStandings] =\n    useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchPreviousRaceResult = async () => {\n      const response = await fetch(\n        `https://ergast.com/api/f1/current/last/results.json`\n      );\n      const data = await response.json();\n\n      setPreviousRaceResult(data);\n      setLoadingPreviousRaceResult(false);\n      fetchNextRaceData(data.MRData.RaceTable.round);\n    };\n\n    const fetchNextRaceData = async (round) => {\n      const response = await fetch(`https://ergast.com/api/f1/current.json`);\n      const data = await response.json();\n\n      if (round >= data.MRData.RaceTable.Races.length) {\n        setNextRaceData(null);\n      } else {\n        setNextRaceData(data.MRData.RaceTable.Races[parseInt(round)]);\n      }\n\n      setTotalNumberOfRaces(data.MRData.RaceTable.Races.length);\n      setLoadingNextRaceData(false);\n    };\n\n    const fetchConstructorsStandings = async () => {\n      const response = await fetch(\n        `https://ergast.com/api/f1/current/constructorStandings.json`\n      );\n      const data = await response.json();\n\n      setConstructorsStandings(\n        data.MRData.StandingsTable.StandingsLists[0].ConstructorStandings\n      );\n      setLoadingConstructorsStandings(false);\n    };\n\n    const fetchDriversStandings = async () => {\n      const response = await fetch(\n        `https://ergast.com/api/f1/current/driverStandings.json`\n      );\n      const data = await response.json();\n\n      setDriversStandings(\n        data.MRData.StandingsTable.StandingsLists[0].DriverStandings\n      );\n      setLoadingDriversStandings(false);\n    };\n\n    fetchPreviousRaceResult();\n    fetchDriversStandings();\n    fetchConstructorsStandings();\n  }, []);\n\n  return (\n    <Container style={{ minHeight: \"700px\" }}>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1 style={{ marginBottom: \"3%\" }}>\n            {loadingNextRaceData\n              ? \"\"\n              : previousRaceResult.MRData.RaceTable.season}{\" \"}\n            Formula One\n          </h1>\n        </Col>\n      </Row>\n      {loadingPreviousRaceResult || loadingNextRaceData ? (\n        <Row\n          className=\"justify-content-center text-center\"\n          style={{ minHeight: \"200px\" }}\n        >\n          <PuffLoader color=\"black\" loading=\"true\" size={30} />\n        </Row>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col xs={12} sm={12} md={8} lg={4}>\n            {nextRaceData == null ? (\n              <div>\n                <p></p>\n                <GenericCard\n                  cardTitle=\"Next Race\"\n                  cardBody={<h1>There's no upcoming events.</h1>}\n                  cardFooter={<h4>Please check back later</h4>}\n                  cardHeight=\"24rem\"\n                  variant={\"light\"}\n                />\n                <p></p>\n              </div>\n            ) : (\n              <div>\n                <p></p>\n                <NextRaceCard nextRaceData={nextRaceData} />\n                <p></p>\n              </div>\n            )}\n          </Col>\n          <Col xs={12} sm={12} md={8} lg={4}>\n            <p></p>\n            <PreviousRaceCard previousRaceData={previousRaceResult} />\n            <p></p>\n          </Col>\n          <Col xs={12} sm={12} md={8} lg={4}>\n            <div>\n              <p></p>\n              <PreviousRaceWinner\n                previousRaceData={previousRaceResult}\n                totalNumberOfRaces={totalNumberOfRaces}\n              />\n              <p></p>\n            </div>\n          </Col>\n        </Row>\n      )}\n      <br />\n      {loadingDriversStandings || loadingConstructorsStandings ? (\n        <Row\n          className=\"justify-content-center text-center\"\n          style={{ minHeight: \"200px\" }}\n        >\n          <PuffLoader color=\"black\" loading=\"true\" size={30} />\n        </Row>\n      ) : (\n        <Row>\n          <Col>\n            <StandingsCard\n              type={\"Drivers'\"}\n              standings={\n                <DriversStandings\n                  style={{\n                    overflow: \"hidden\",\n                    overflowY: \"scroll\",\n                    height: \"275px\",\n                  }}\n                  driversStandings={driversStandings}\n                />\n              }\n            />\n          </Col>\n          <Col>\n            <StandingsCard\n              type={\"Constructors'\"}\n              standings={\n                <ConstructorsStandings\n                  style={{\n                    overflow: \"hidden\",\n                    overflowY: \"scroll\",\n                    height: \"275px\",\n                  }}\n                  constructorsStandings={constructorsStandings}\n                />\n              }\n            />\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default MainFeed;\n","import React from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport MainFeed from \"../components/Stats/MainFeed/MainFeed\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <NavBar />\n      <MainFeed />\n      <Footer />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst RaceClassification = ({ raceClassification }) => {\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th>Number</th>\n            <th>Driver</th>\n            <th>Team</th>\n            <th>Laps</th>\n            <th>Time/Retired</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr key={index}>\n              <td>{driver.position}</td>\n              <td>{driver.number}</td>\n              <td>\n                {driver.Driver.givenName + \" \" + driver.Driver.familyName}\n              </td>\n              <td>{driver.Constructor.name}</td>\n              <td>{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  return (\n    <div>\n      {raceQualifying === null ? (\n        \"\"\n      ) : (\n        <Table responsive=\"sm\">\n          <thead>\n            <tr>\n              <th>Pos</th>\n              <th>Number</th>\n              <th>Driver</th>\n              <th>Team</th>\n              <th>Q1</th>\n              <th>Q2</th>\n              <th>Q3</th>\n            </tr>\n          </thead>\n          <tbody>\n            {raceQualifying.map((driver, index) => (\n              <tr key={index}>\n                <td>{driver.position}</td>\n                <td>{driver.number}</td>\n                <td>\n                  {driver.Driver.givenName + \" \" + driver.Driver.familyName}\n                </td>\n                <td>{driver.Constructor.name}</td>\n                <td>{driver.Q1}</td>\n                <td>{driver.Q2}</td>\n                <td>{driver.Q3}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default RaceQualifying;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Flag from \"react-world-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst Podium = ({ eventClassification }) => {\n  return (\n    <div>\n      <Container>\n        <Row className=\"text-center\">\n          <Col\n            xs={{ span: 12, order: \"second\" }}\n            md={{ span: 4, order: \"first\" }}\n          >\n            <div id=\"secondPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h2>2nd</h2>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[1].number}{\" \"}\n                    {eventClassification[1].Driver.givenName}{\" \"}\n                    {eventClassification[1].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <Flag\n                    code={\n                      CountriesCodeNationality[\n                        eventClassification[1].Driver.nationality\n                      ]\n                    }\n                    height=\"30\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[1].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[1].hasOwnProperty(\"Time\")\n                      ? eventClassification[1].Time.time\n                      : eventClassification[1].hasOwnProperty(\"status\") &&\n                        eventClassification[1].status !== \"Finished\"\n                      ? eventClassification[1].status\n                      : eventClassification[1].hasOwnProperty(\"Q3\")\n                      ? eventClassification[1].Q3\n                      : \"\"}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col\n            xs={{ span: 12, order: \"first\" }}\n            md={{ span: 4, order: \"second\" }}\n          >\n            <div id=\"firstPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h1>1st</h1>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[0].number}{\" \"}\n                    {eventClassification[0].Driver.givenName}{\" \"}\n                    {eventClassification[0].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <Flag\n                    code={\n                      CountriesCodeNationality[\n                        eventClassification[0].Driver.nationality\n                      ]\n                    }\n                    height=\"30\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[0].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[0].hasOwnProperty(\"Time\")\n                      ? eventClassification[0].Time.time\n                      : eventClassification[0].hasOwnProperty(\"status\") &&\n                        eventClassification[0].status !== \"Finished\"\n                      ? eventClassification[0].status\n                      : eventClassification[0].hasOwnProperty(\"Q3\")\n                      ? eventClassification[0].Q3\n                      : \"\"}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n          <Col xs={{ span: 12, order: \"last\" }} md={{ span: 4, order: \"last\" }}>\n            <div id=\"thirdPlace\">\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>3rd</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[2].number}{\" \"}\n                    {eventClassification[2].Driver.givenName}{\" \"}\n                    {eventClassification[2].Driver.familyName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <Flag\n                    code={\n                      CountriesCodeNationality[\n                        eventClassification[2].Driver.nationality\n                      ]\n                    }\n                    height=\"30\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>{eventClassification[2].Constructor.name}</h3>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col md=\"auto\">\n                  <h3>\n                    {eventClassification[2].hasOwnProperty(\"Time\")\n                      ? eventClassification[2].Time.time\n                      : eventClassification[2].hasOwnProperty(\"status\") &&\n                        eventClassification[2].status !== \"Finished\"\n                      ? eventClassification[2].status\n                      : eventClassification[2].hasOwnProperty(\"Q3\")\n                      ? eventClassification[2].Q3\n                      : \"\"}\n                  </h3>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Podium;\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Flag from \"react-world-flags\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h1>{raceInfo.raceName}</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{raceInfo.raceDate}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{raceInfo.raceTime}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <Flag code={eventCountryCode} height=\"50\" />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName, mapHeight }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={12}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0] + \" | \" + coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Circuit = ({ circuitId }) => {\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          let bestLap = data.MRData.RaceTable.Races[0];\n\n          data.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(`https://ergast.com/api/f1/circuits/${circuitId}/races.json`)\n        .then((res) => res.json())\n        .then((data) => {\n          setFirstGrandPrix(data.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [circuitId]);\n\n  return (\n    <div>\n      {loadingFastestLap ||\n      loadingFirstGrandPrix ||\n      fastestLap === undefined ? (\n        \"\"\n      ) : (\n        <div>\n          <Row>\n            <Col>\n              <Col>\n                <h5>\n                  Lap record: {fastestLap.Results[0].FastestLap.Time.time}\n                  {\" - \"}\n                  {fastestLap.season}\n                  {\" - \"}\n                  {fastestLap.Results[0].Driver.givenName}{\" \"}\n                  {fastestLap.Results[0].Driver.familyName}{\" \"}\n                </h5>\n              </Col>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <h5>First grand prix: {firstGrandPrix}</h5>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Circuit;\n","import React from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Flag from \"react-world-flags\";\nimport Circuit from \"./CircuitData\";\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col>\n          <h1>{raceInfo.circuitName}</h1>\n          <h3>\n            <Flag code={eventCountryCode} height=\"30\" />{\" \"}\n            {raceInfo.circuitCountry}\n          </h3>\n          <h3>{raceInfo.circuitLocality}</h3>\n          <Circuit circuitId={raceInfo.circuitId} numberOfLaps={raceInfo.numberOfLaps} />\n        </Col>\n        <Col  md=\"auto\">\n          <Map\n            coordinates={[raceInfo.circuitLatitude, raceInfo.circuitLongitude]}\n            circuitName={raceInfo.circuitName}\n            mapHeight={{ height: \"600px\" }}\n          ></Map>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport EventPodium from \"./Podium\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  const [eventCountryCode, setEventCountryCode] = useState(null);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${raceInfo.circuitCountry}?fullText=true`\n      )\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          }\n        })\n        .then((data) => {\n          setEventCountryCode(data[0].alpha3Code);\n        })\n        .catch((error) => setEventCountryCode(null));\n    };\n\n    fetchCountryCode();\n  }, [raceInfo.circuitCountry]);\n\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab eventKey=\"race\" title=\"Race\">\n          <Container>\n            <Container style={{ minHeight: \"250px\" }}>\n              <RaceTab\n                raceInfo={raceInfo}\n                eventCountryCode={eventCountryCode}\n              />\n            </Container>\n            {raceClassification != null ? (\n              <Container>\n                <RaceClassification raceClassification={raceClassification} />\n              </Container>\n            ) : (\n              \"\"\n            )}\n          </Container>\n        </Tab>\n        <Tab eventKey=\"circuit\" title=\"Circuit\">\n          <Container>\n            <Container style={{ minHeight: \"250px\" }}>\n              <CircuitTab\n                raceInfo={raceInfo}\n                eventCountryCode={eventCountryCode}\n              />\n            </Container>\n            {raceClassification != null ? (\n              <Container>\n                <RaceClassification raceClassification={raceClassification} />\n              </Container>\n            ) : (\n              \"\"\n            )}\n          </Container>\n        </Tab>\n        <Tab eventKey=\"podium\" title=\"Podium\">\n          <Container>\n            {raceClassification != null ? (\n              <div>\n                <Container style={{ minHeight: \"250px\" }}>\n                  <EventPodium eventClassification={raceClassification} />\n                </Container>\n                <Container>\n                  <RaceClassification raceClassification={raceClassification} />\n                </Container>\n              </div>\n            ) : (\n              <Container style={{ minHeight: \"250px\" }}>\n                <Row className=\"justify-content-center text-center\">\n                  <Col md=\"auto\">\n                    <h1>Race hasn't happened yet, check back later!</h1>\n                  </Col>\n                </Row>\n              </Container>\n            )}\n          </Container>\n        </Tab>\n        <Tab eventKey=\"qualifying\" title=\"Qualifying\">\n          {raceClassification != null ? (\n            <div>\n              <Container style={{ minHeight: \"250px\" }}>\n                <EventPodium eventClassification={raceQualifying} />\n              </Container>\n              <Container>\n                <RaceQualifying raceQualifying={raceQualifying} />\n              </Container>\n            </div>\n          ) : (\n            <Container style={{ minHeight: \"250px\" }}>\n              <Row className=\"justify-content-center text-center\">\n                <Col md=\"auto\">\n                  <h1>Qualifying hasn't happened yet, check back later!</h1>\n                </Col>\n              </Row>\n            </Container>\n          )}\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\nimport Tabs from \"./Tabs\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./RaceCountdown.css\";\n\nconst RaceCountdown = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      const response = await fetch(`https://ergast.com/api/f1/${season}.json`);\n      const data = await response.json();\n\n      if (data.MRData.RaceTable.Races[parseInt(round) - 1] === undefined) {\n        setRaceInfo(null);\n      } else {\n        setRaceInfo({\n          season: data.MRData.RaceTable.season,\n          round: data.MRData.RaceTable.round,\n          raceName: data.MRData.RaceTable.Races[parseInt(round) - 1].raceName,\n          circuitId:\n            data.MRData.RaceTable.Races[parseInt(round) - 1].Circuit.circuitId,\n          circuitName:\n            data.MRData.RaceTable.Races[parseInt(round) - 1].Circuit\n              .circuitName,\n          circuitCountry:\n            data.MRData.RaceTable.Races[parseInt(round) - 1].Circuit.Location\n              .country,\n          circuitLocality:\n            data.MRData.RaceTable.Races[parseInt(round) - 1].Circuit.Location\n              .locality,\n          circuitLatitude:\n            data.MRData.RaceTable.Races[parseInt(round) - 1].Circuit.Location\n              .lat,\n          circuitLongitude:\n            data.MRData.RaceTable.Races[parseInt(round) - 1].Circuit.Location\n              .long,\n          raceDate: data.MRData.RaceTable.Races[parseInt(round) - 1].date,\n          raceTime: data.MRData.RaceTable.Races[\n            parseInt(round) - 1\n          ].hasOwnProperty(\"time\")\n            ? data.MRData.RaceTable.Races[parseInt(round) - 1].time.substring(\n                0,\n                data.MRData.RaceTable.Races[parseInt(round) - 1].time.length - 1\n              )\n            : \"N/A\",\n        });\n      }\n      setLoadingRaceInfo(false);\n    };\n\n    fetchRaceInfo();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"700px\" }}>\n        {loadingRaceInfo ? (\n          \"\"\n        ) : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <Tabs raceInfo={raceInfo} />\n            <Row className=\"justify-content-center text-center\">\n              <Col>\n                <h1 className=\"countdown\">\n                  <Countdown\n                    date={\n                      Date.now() +\n                      (new Date(raceInfo.raceDate).getTime() +\n                        raceInfo.raceTime.split(\":\")[0] * 3600000 -\n                        new Date().getTime())\n                    }\n                  />\n                </h1>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default RaceCountdown;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Tabs from \"./Tabs\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport Row from \"react-bootstrap/Row\";\nimport RaceCountdown from \"./RaceCountdown\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      const response = await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/results.json`\n      );\n      const data = await response.json();\n\n      if (data.MRData.RaceTable.Races[0] === undefined) {\n        setRaceClassification(null);\n      } else {\n        setRaceInfo({\n          season: data.MRData.RaceTable.season,\n          round: data.MRData.RaceTable.round,\n          raceName: data.MRData.RaceTable.Races[0].raceName,\n          circuitId: data.MRData.RaceTable.Races[0].Circuit.circuitId,\n          circuitName: data.MRData.RaceTable.Races[0].Circuit.circuitName,\n          circuitCountry:\n            data.MRData.RaceTable.Races[0].Circuit.Location.country,\n          circuitLocality:\n            data.MRData.RaceTable.Races[0].Circuit.Location.locality,\n          circuitLatitude: data.MRData.RaceTable.Races[0].Circuit.Location.lat,\n          circuitLongitude:\n            data.MRData.RaceTable.Races[0].Circuit.Location.long,\n          raceDate: data.MRData.RaceTable.Races[0].date,\n          raceTime: data.MRData.RaceTable.Races[0].hasOwnProperty(\"time\")\n            ? data.MRData.RaceTable.Races[0].time.substring(\n                0,\n                data.MRData.RaceTable.Races[0].time.length - 1\n              )\n            : \"N/A\",\n        });\n        setRaceClassification(data.MRData.RaceTable.Races[0].Results);\n      }\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      const response = await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      );\n      const data = await response.json();\n\n      if (data.MRData.RaceTable.Races[0] === undefined) {\n        setRaceQualifying(null);\n      } else {\n        setRaceQualifying(data.MRData.RaceTable.Races[0].QualifyingResults);\n      }\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"700px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <PuffLoader color=\"black\" loading=\"true\" size={50} />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <RaceCountdown season={season} round={round} />\n        ) : (\n          <Container>\n            <Tabs\n              raceInfo={raceInfo}\n              raceClassification={raceClassification}\n              raceQualifying={raceQualifying}\n            />\n          </Container>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <div>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default RaceResult;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { BsBoxArrowUpRight } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport Flag from \"react-world-flags\";\n\nconst RaceInfo = ({ race }) => {\n  const [countryCode, setCountryCode] = useState(null);\n  const [loadigCountryCode, setLoadingCountryCode] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryCode = async () => {\n      await fetch(\n        `https://restcountries.eu/rest/v2/name/${race.Circuit.Location.country}?fullText=true`\n      )\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          }\n        })\n        .then((data) => {\n          setCountryCode(data[0].alpha3Code);\n          setLoadingCountryCode(false);\n        })\n        .catch((error) => setCountryCode(null));\n    };\n\n    fetchCountryCode();\n  }, [race.Circuit.Location.country]);\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center text-center\">\n        <Col xs={12} md=\"auto\">\n          {loadigCountryCode && countryCode != null ? (\n            \"\"\n          ) : (\n            <Flag code={countryCode} height=\"40\" />\n          )}\n        </Col>\n\n        <Col xs={12} md=\"auto\">\n          <h3>#{race.round}</h3>\n        </Col>\n\n        <Col xs={12} md=\"auto\">\n          <h3>{race.raceName}</h3>\n        </Col>\n\n        <Col xs={12} md=\"auto\">\n          <h3>{race.Circuit.Location.country}</h3>\n        </Col>\n\n        <Col xs={12} md=\"auto\">\n          <h3>{race.date}</h3>\n        </Col>\n\n        <Col xs={12} md=\"auto\">\n          <h3>\n            {race.hasOwnProperty(\"time\")\n              ? race.time.substring(0, race.time.length - 1)\n              : \"N/A\"}\n          </h3>\n        </Col>\n\n        <Col xs={12} md=\"auto\">\n          <Link to={\"/race/\" + race.season + \"/\" + race.round}>\n            <BsBoxArrowUpRight size={35} />\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RaceInfo;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport RaceInfo from \"./RaceInfo\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"./Races.css\";\n\nconst Races = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\"2021\");\n  const [seasonSchedule, setSeasonSchedule] = useState(null);\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [loadingSeasonSchedule, setLoadingSchedule] = useState(true);\n\n  useEffect(() => {\n    const fetchSeasonSchedule = async () => {\n      const response = await fetch(`https://ergast.com/api/f1/${season}.json`);\n      const data = await response.json();\n\n      setSeasonSchedule(data.MRData.RaceTable.Races);\n      setLoadingSchedule(false);\n    };\n\n    function fillArrayBetweenTwoNumbers(start, end) {\n      setSeasonsYearsList(\n        Array(end - start + 1)\n          .fill()\n          .map((_, i) => start + i)\n          .reverse()\n      );\n    }\n\n    fetchSeasonSchedule();\n    fillArrayBetweenTwoNumbers(FIRST_SEASON, new Date().getFullYear());\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n  };\n\n  return (\n    <Container>\n      {loadingSeasonSchedule ? (\n        <Container style={{ marginTop: \"10%\", minHeight: \"700px\" }}>\n          <Row className=\"justify-content-center text-center\">\n              <PuffLoader color=\"black\" loading=\"true\" size={50} />\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{ marginTop: \"2%\", minHeight: \"700px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>Formula One - {season} season</h1>\n            </Col>\n          </Row>\n          <Row\n            className=\"justify-content-center text-center\"\n            style={{ marginBottom: \"2%\" }}\n          >\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu\">\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n\n          <Accordion>\n            {seasonSchedule.map((race, index) => (\n              <Accordion.Item eventKey={index} key={index}>\n                <Accordion.Header>\n                  #{race.round + \" \" + race.raceName}\n                </Accordion.Header>\n                <Accordion.Body>\n                  <RaceInfo race={race} />\n                </Accordion.Body>\n              </Accordion.Item>\n            ))}\n          </Accordion>\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default Races;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Races from \"../components/Races/Races\";\n\nconst SeasonSchedule = () => {\n  return (\n    <div>\n      <NavBar />\n      <Races />\n      <Footer />\n    </div>\n  );\n};\n\nexport default SeasonSchedule;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { BiError } from \"react-icons/bi\";\nimport { RiArrowGoBackLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\n\nconst Error = () => {\n  return (\n    <Container style={{ minHeight: \"700px\" }}>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <BiError size={300} />\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <h1>Ups... Something went wrong!</h1>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <Link to=\"\">\n            <RiArrowGoBackLine size={50} />\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Error;\n","import React from \"react\";\nimport Error from \"../components/Error/Error\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\n\nconst ErrorPage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Error />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, { useState, useEffect } from \"react\";\nimport ConstructorsStandings from \"./ConstructorsStandings\";\nimport DriversStandings from \"./DriversStandings\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nconst Standings = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\"2021\");\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingConstructorsStandings, setLoadingConstructorsStandings] =\n    useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchConstructorsStandings = async () => {\n      setLoadingConstructorsStandings(true);\n      const response = await fetch(\n        `https://ergast.com/api/f1/${season}/constructorStandings.json`\n      );\n      const data = await response.json();\n\n      if (data.MRData.StandingsTable.StandingsLists[0] !== undefined) {\n        setConstructorsStandings(\n          data.MRData.StandingsTable.StandingsLists[0].ConstructorStandings\n        );\n      } else {\n        setConstructorsStandings(null);\n      }\n\n      setLoadingConstructorsStandings(false);\n    };\n\n    const fetchDriversStandings = async () => {\n      setLoadingDriversStandings(true);\n      const response = await fetch(\n        `https://ergast.com/api/f1/${season}/driverStandings.json`\n      );\n      const data = await response.json();\n\n      setDriversStandings(\n        data.MRData.StandingsTable.StandingsLists[0].DriverStandings\n      );\n      setLoadingDriversStandings(false);\n    };\n\n    function fillArrayBetweenTwoNumbers(start, end) {\n      setSeasonsYearsList(\n        Array(end - start + 1)\n          .fill()\n          .map((_, i) => start + i)\n          .reverse()\n      );\n    }\n\n    fetchConstructorsStandings();\n    fetchDriversStandings();\n    fillArrayBetweenTwoNumbers(FIRST_SEASON, new Date().getFullYear());\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n  };\n  return (\n    <div>\n      {!loadingConstructorsStandings && !loadingDriversStandings ? (\n        <Container style={{ minHeight: \"700px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>{season} Formula One season</h1>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\" style={{ marginBottom: \"2%\" }}>\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  style={{ maxHeight: \"500px\", overflowY: \"scroll\" }}\n                >\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col md=\"auto\">\n              <h1>Constructors' standings</h1>\n            </Col>\n            <Row>\n              <Col>\n                <ConstructorsStandings\n                  constructorsStandings={constructorsStandings}\n                />\n              </Col>\n            </Row>\n            <Col md=\"auto\">\n              <h1>Drivers' standings</h1>\n            </Col>\n            <Row>\n              <Col>\n                <DriversStandings driversStandings={driversStandings} />\n              </Col>\n            </Row>\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{ minHeight: \"500px\", marginTop: \"7%\" }}>\n          <Row className=\"justify-content-center text-center\">\n              <PuffLoader color=\"black\" loading=\"true\" size={50} />\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default Standings;\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Standings from \"../components/Stats/Standings/Standings\";\n\nconst StandingsPage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Standings />\n      <Footer />\n    </div>\n  );\n};\n\nexport default StandingsPage;\n","import \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport RaceResult from \"./pages/RaceResult\";\nimport SeasonRaces from \"./pages/SeasonRaces\";\nimport ErrorPage from \"./pages/ErrorPage\";\nimport StandingsPage from \"./pages/StandingsPage\";\n\nfunction App() {\n  return (\n    <Router basename=\"/f1-data\">\n      <Switch>\n        <Route path=\"/\" exact={true} component={HomePage} />\n        <Route\n          path=\"/race/:season/:round\"\n          exact={true}\n          component={RaceResult}\n        />\n        <Route path=\"/schedule\" exact={true} component={SeasonRaces} />\n        <Route path=\"/error\" exact={true} component={ErrorPage} />\n        <Route path=\"/standings\" exact={true} component={StandingsPage} />\n        <Route component={ErrorPage}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}