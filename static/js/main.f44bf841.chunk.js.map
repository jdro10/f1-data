{"version":3,"sources":["helpers/ThemeContext.js","themes/Themes.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["ThemeContext","createContext","lightTheme","body","fontColor","scrollColor","darkTheme","GlobalStyles","createGlobalStyle","props","theme","HomePage","lazy","RaceResult","SeasonRaces","ErrorPage","StandingsPage","DriverPage","StyledApp","styled","div","backgroundColor","App","useState","localStorage","getItem","setTheme","useEffect","todayDate","Date","setHours","date","setDate","getDate","getDay","nextMonday","nextUpdateDate","setItem","getTime","caches","keys","then","cacheNames","forEach","cacheName","delete","window","location","reload","refreshCache","fallback","Provider","value","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f44bf841.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const ThemeContext = createContext({});\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const lightTheme = {\n  body: \"#F4F4F4\",\n  fontColor: \"#000\",\n  scrollColor: \"#F4F4F4\",\n};\n\nexport const darkTheme = {\n  body: \"#181818\",\n  fontColor: \"#fff\",\n  scrollColor: \"#212529\",\n};\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background-color : ${(props) => props.theme.body};\n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${(props) => props.theme.scrollColor};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n\n  .tab-style {\n    color: ${(props) => props.theme.fontColor};\n  }\n\n  .tab-style:hover {\n    color: ${(props) => props.theme.fontColor};\n  }\n\n  tab-style:active {\n      color: black !important;\n  }\n\n  .race-link {\n    text-decoration: none;\n    color: ${(props) => props.theme.fontColor};\n  }\n\n  .race-link:hover{\n    color: ${(props) => props.theme.fontColor};\n    text-decoration: underline;\n    text-decoration-color: #e10600;\n    text-decoration-thickness: 3px;\n    text-underline-offset: 3px;\n    display: block;\n  }\n\n  .red-btn{\n    background-color: #e10600;\n    border-color: #e10600;\n    font-weight: 600;\n    border-radius: 15px;\n  }\n\n  .red-btn:hover{\n    opacity: 0.5;\n    background-color: #e10600;\n    border-color: #e10600;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { lazy, Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Switch } from \"react-router-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { ThemeContext } from \"./helpers/ThemeContext\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes/Themes\";\n\nconst HomePage = lazy(() => import(\"./pages/HomePage\"));\nconst RaceResult = lazy(() => import(\"./pages/RaceResult\"));\nconst SeasonRaces = lazy(() => import(\"./pages/SeasonRaces\"));\nconst ErrorPage = lazy(() => import(\"./pages/ErrorPage\"));\nconst StandingsPage = lazy(() => import(\"./pages/StandingsPage\"));\nconst DriverPage = lazy(() => import(\"./pages/DriverPage\"));\n\nconst StyledApp = styled.div`\n  color: ${(props) => props.theme.fontColor};\n  background-color: ${(props) => props.theme.backgroundColor};\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState(\n    localStorage.getItem(\"theme\") !== null\n      ? localStorage.getItem(\"theme\")\n      : \"light\"\n  );\n\n  useEffect(() => {\n    function refreshCache() {\n      const todayDate = new Date();\n      todayDate.setHours(0, 0, 0, 0);\n\n      const date = nextMonday();\n      const nextUpdateDate = localStorage.getItem(\"nextUpdate\");\n\n      if (!nextUpdateDate) {\n        localStorage.setItem(\"nextUpdate\", date);\n      }\n\n      if (\n        nextUpdateDate &&\n        todayDate.getTime() >= new Date(nextUpdateDate).getTime()\n      ) {\n        localStorage.setItem(\"nextUpdate\", date);\n\n        caches.keys().then(function (cacheNames) {\n          cacheNames.forEach(function (cacheName) {\n            caches.delete(cacheName);\n          });\n        });\n\n        window.location.reload();\n      }\n    }\n\n    function nextMonday() {\n      var date = new Date();\n\n      date.setDate(date.getDate() + ((7 - date.getDay()) % 7) + 1);\n      date.setHours(0, 0, 0, 0);\n\n      return date;\n    }\n\n    refreshCache();\n  }, []);\n\n  return (\n    <Suspense fallback={null}>\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <StyledApp>\n          <ThemeContext.Provider value={{ theme, setTheme }}>\n            <Router basename=\"/\">\n              <Switch>\n                <Route path=\"/\" exact={true} component={HomePage} />\n                <Route\n                  path=\"/race/:season/:round\"\n                  exact={true}\n                  component={RaceResult}\n                />\n                <Route\n                  path=\"/driver/:driverId\"\n                  exact={true}\n                  component={DriverPage}\n                />\n                <Route path=\"/schedule\" exact={true} component={SeasonRaces} />\n                <Route path=\"/error\" exact={true} component={ErrorPage} />\n                <Route\n                  path=\"/standings\"\n                  exact={true}\n                  component={StandingsPage}\n                />\n                <Route component={ErrorPage} />\n              </Switch>\n            </Router>\n          </ThemeContext.Provider>\n        </StyledApp>\n      </ThemeProvider>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    window.location.hostname === \"[::1]\" ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log(\"Content is cached for offline use.\");\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}