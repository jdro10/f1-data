{"version":3,"sources":["components/Classifications/RaceClassification.js","components/Classifications/QualifyingClassification.js","components/Race/RaceInformation.js","components/Map/Map.js","components/Circuit/CircuitInformation.js","components/Circuit/Circuit.js","data/LineColors.js","components/Laps/Laps.js","components/Race/Event.js","components/Race/FutureRace.js","components/Race/Race.js","pages/RaceResult.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js","components/Countdown/ClockCountdown.js"],"names":["boldFont","fontWeight","margin","padding","display","RaceClassification","raceClassification","history","useHistory","theme","useContext","ThemeContext","Table","className","responsive","style","overflow","marginTop","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","number","Row","Col","xs","TeamColor","constructorId","Constructor","height","md","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","time","FastestLap","rank","points","grid","QualifyingClassification","qualifyingClassification","sprintClassification","rowClick","hasOwnProperty","code","substring","Q1","Q2","Q3","RaceInformation","raceInfo","eventCountryCode","href","url","raceName","round","convertDate","date","getLocalRaceDate","countryCode","CountriesCodeNationality","toLowerCase","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","Marker","Popup","CircuitInformation","firstGP","lastGP","lastGPDetails","fastestLap","raceRowClick","season","window","location","reload","calculateCircuitLength","speed","timeSplitted","split","secondsSplitted","timeInSeconds","parseInt","parseFloat","length","Math","Results","AverageSpeed","wikiConstructorLink","open","Circuit","setFirstGP","setLastGP","setLastGPDetails","setFastestLap","wikiPageId","setWikiPageId","circuitInformation","setCircuitInformation","loadingWikiData","setLoadingWikiData","loadingFirstGP","setLoadingFirstGP","loadingFastestLap","setLoadingFastestLap","loadingLastGPDetails","setLoadingLastGPDetails","fetch","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","method","Object","keys","query","pages","Location","country","locality","textAlign","lat","long","mapHeight","Spinner","animation","LineColors","Laps","labels","datasets","data","setData","loadingLaps","setLoadingLaps","fetchLaps","lapsPerDriver","options","plugins","legend","scales","y","reverse","ticks","color","font","size","stepSize","x","optionsMobile","lapsObj","lapsNumber","Timings","entries","label","fill","backgroundColor","borderColor","minWidth","width","maxWidth","Event","id","role","type","ClockCountdown","minHeight","FutureRace","setRaceInfo","qualifying","setQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingQualifying","setLoadingQualifying","fetchRaceInfo","fetchQualifying","QualifyingResults","to","Race","setRaceClassification","sprintQualifying","setSprintQualifying","loadingRaceResult","setLoadingRaceResult","loadingSprintQualifying","setLoadingSprintQualifying","fetchRaceResult","fetchRaceQualifying","fetchRaceSprintQualifying","SprintResults","Container","fluid","RaceResult","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","borderRadius","NavBar","setTheme","localStorage","setItem","bg","textDecoration","Brand","Collapse","onChange","toggle","themeToggler","checked","raceDate","Date","getHours","getMinutes","dateToConvert","now","getTime","renderer","days","hours","minutes","seconds","completed","lg"],"mappings":"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","file":"static/js/8.1e26cfb3.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { FaStopwatch } from \"react-icons/fa\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\nconst RaceClassification = ({ raceClassification }) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const rowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        className=\"table-hover table-striped standings-table\"\r\n        responsive=\"sm\"\r\n        style={{ overflow: \"hidden\", marginTop: \"10px\" }}\r\n        variant={theme}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">POS</th>\r\n            <th className=\"hideXS text-center\">NUMBER</th>\r\n            <th>DRIVER</th>\r\n            <th className=\"hideXS\">TEAM</th>\r\n            <th className=\"hideXS\">LAPS</th>\r\n            <th>TIME/RETIRED</th>\r\n            <th>PTS</th>\r\n            <th className=\"hideXS\">GRID</th>\r\n            <th className=\"hideXS\">+/-</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {raceClassification.map((driver, index) => (\r\n            <tr\r\n              key={index}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rowClick(driver.Driver.driverId)}\r\n              className=\"align-middle\"\r\n            >\r\n              <td className=\"text-center\">{driver.position}</td>\r\n              <td className=\"hideXS text-center\">{driver.number}</td>\r\n              <td>\r\n                <Row className=\"g-2\">\r\n                  <Col xs={1} className=\"showXS\">\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                      height=\"45px\"\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={1} className=\"hideXS\">\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={6} md={10}>\r\n                    {driver.Driver.givenName}{\" \"}\r\n                    <p style={boldFont}>\r\n                      {driver.Driver.familyName.toUpperCase()}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\r\n              <td className=\"hideXS\">{driver.laps}</td>\r\n              <td>\r\n                {driver.Time !== undefined\r\n                  ? driver.status === \"Finished\"\r\n                    ? driver.Time.time\r\n                    : driver.status\r\n                  : driver.status}\r\n              </td>\r\n\r\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\r\n                <td>\r\n                  <Row>\r\n                    <Col xs={2}>{driver.points}</Col>\r\n\r\n                    <Col>\r\n                      <FaStopwatch />\r\n                    </Col>\r\n                  </Row>\r\n                </td>\r\n              ) : (\r\n                <td>{driver.points}</td>\r\n              )}\r\n\r\n              <td className=\"hideXS\">{driver.grid}</td>\r\n              <td className=\"hideXS\">\r\n                {driver.grid === \"0\"\r\n                  ? 20 - driver.position\r\n                  : driver.grid - driver.position}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <FaStopwatch /> - Fastest lap of the race\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceClassification;\r\n","import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\n\r\nconst QualifyingClassification = ({\r\n  qualifyingClassification,\r\n  sprintClassification,\r\n}) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const rowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {sprintClassification !== null && sprintClassification !== undefined ? (\r\n        <>\r\n          <h2 className=\"text-center\">SPRINT QUALYFING</h2>\r\n          <Table\r\n            responsive=\"sm\"\r\n            className=\"table-hover table-striped standings-table\"\r\n            variant={theme}\r\n            style={{ marginTop: \"10px\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\">POS</th>\r\n                <th className=\"hideXS text-center\">NUMBER</th>\r\n                <th>DRIVER</th>\r\n                <th className=\"hideXS\">TEAM</th>\r\n                <th className=\"hideXS\">LAPS</th>\r\n                <th>TIME/RETIRED</th>\r\n                <th>PTS</th>\r\n                <th className=\"hideXS\">GRID</th>\r\n                <th className=\"hideXS\">+/-</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {sprintClassification.map((driver, index) => (\r\n                <tr\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => rowClick(driver.Driver.driverId)}\r\n                  className=\"align-middle\"\r\n                >\r\n                  <td className=\"text-center\">{driver.position}</td>\r\n                  <td className=\"hideXS text-center\">{driver.number}</td>\r\n                  <td>\r\n                    <Row className=\"g-2\">\r\n                      <Col xs={1} className=\"showXS\">\r\n                        <TeamColor\r\n                          constructorId={driver.Constructor.constructorId}\r\n                          height=\"45px\"\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={1} className=\"hideXS\">\r\n                        <TeamColor\r\n                          constructorId={driver.Constructor.constructorId}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={6} md={10}>\r\n                        {driver.Driver.givenName}{\" \"}\r\n                        <p style={boldFont}>\r\n                          {driver.Driver.familyName.toUpperCase()}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </td>\r\n                  <td className=\"hideXS\">{driver.Constructor.name}</td>\r\n                  <td className=\"hideXS\">{driver.laps}</td>\r\n                  <td>\r\n                    {driver.Time !== undefined\r\n                      ? driver.status === \"Finished\"\r\n                        ? driver.Time.time\r\n                        : driver.status\r\n                      : driver.status}\r\n                  </td>\r\n                  <td>{driver.points}</td>\r\n                  <td className=\"hideXS\">{driver.grid}</td>\r\n                  <td className=\"hideXS\">\r\n                    {driver.grid === \"0\"\r\n                      ? 20 - driver.position\r\n                      : driver.grid - driver.position}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <h2 className=\"text-center\">QUALIFYING</h2>\r\n        </>\r\n      ) : null}\r\n\r\n      <Table\r\n        responsive=\"sm\"\r\n        className=\"table-hover table-striped standings-table\"\r\n        variant={theme}\r\n        style={{ marginTop: \"10px\" }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">POS</th>\r\n            <th className=\"hideXS text-center\">NUMBER</th>\r\n            <th>DRIVER</th>\r\n            <th className=\"hideXS\">TEAM</th>\r\n            <th className=\"text-center\">Q1</th>\r\n            <th className=\"text-center\">Q2</th>\r\n            <th className=\"text-center\">Q3</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {qualifyingClassification.map((driver, index) => (\r\n            <tr\r\n              key={index}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rowClick(driver.Driver.driverId)}\r\n            >\r\n              <td className=\"text-center\">{driver.position}</td>\r\n              <td className=\"hideXS text-center\">{driver.number}</td>\r\n              <td className=\"hideXS\">\r\n                <Row className=\"g-2\">\r\n                  <Col xs={1}>\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    {driver.Driver.givenName}{\" \"}\r\n                    <p style={boldFont}>\r\n                      {driver.Driver.familyName.toUpperCase()}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"showXS\">\r\n                <Row className=\"g-2\">\r\n                  <Col xs={1}>\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={6}>\r\n                    <p style={boldFont}>\r\n                      {!driver.Driver.hasOwnProperty(\"code\")\r\n                        ? driver.Driver.familyName.substring(0, 3).toUpperCase()\r\n                        : driver.Driver.code}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\r\n              <td className=\"text-center\">\r\n                {driver.hasOwnProperty(\"Q1\")\r\n                  ? driver.Q1 === \"\"\r\n                    ? \"-\"\r\n                    : driver.Q1\r\n                  : \"-\"}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QualifyingClassification;\r\n","import Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\n\r\nconst RaceInformation = ({ raceInfo, eventCountryCode }) => {\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <a className=\"race-link\" href={raceInfo.url}>\r\n            <h1>{raceInfo.raceName.toUpperCase()}</h1>\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <h3>ROUND {raceInfo.round}</h3>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <h5>{convertDate(raceInfo.date)}</h5>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <h5>\r\n            {raceInfo.hasOwnProperty(\"time\")\r\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\r\n              : null}\r\n          </h5>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <CircleFlag\r\n            countryCode={CountriesCodeNationality[\r\n              eventCountryCode\r\n            ].toLowerCase()}\r\n            height=\"100\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceInformation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Map.css\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Map = ({ coordinates, circuitName }) => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      setInterval(function () {\r\n        map.invalidateSize();\r\n      }, 100);\r\n    }\r\n  }, [map]);\r\n\r\n  return (\r\n    <MapContainer\r\n      center={coordinates}\r\n      zoom={14}\r\n      scrollWheelZoom={true}\r\n      whenCreated={setMap}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={coordinates}>\r\n        <Popup>\r\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\r\n        </Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from \"react\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\n\r\nconst CircuitInformation = ({ firstGP, lastGP, lastGPDetails, fastestLap }) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const driverRowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  const constructorRowClick = (wikiConstructorLink) => {\r\n    window.open(wikiConstructorLink, \"_blank\");\r\n  };\r\n\r\n  const raceRowClick = (season, round) => {\r\n    history.push(`/race/${season}/${round}`);\r\n    window.location.reload();\r\n  };\r\n\r\n  const calculateCircuitLength = (speed, time) => {\r\n    const timeSplitted = time.split(\":\");\r\n    const secondsSplitted = time.split(\".\");\r\n\r\n    const timeInSeconds =\r\n      parseInt(timeSplitted[0] * 60) +\r\n      parseInt(timeSplitted[1]) +\r\n      parseFloat(secondsSplitted[1] / 1000);\r\n\r\n    const metersPerSecond = (parseFloat(speed) * 1000) / 3600;\r\n    const length = (metersPerSecond * timeInSeconds) / 1000;\r\n\r\n    return Math.round(length * 1000) / 1000;\r\n  };\r\n\r\n  return (\r\n    <Table\r\n      responsive\r\n      className=\"standings-table table-striped table-hover\"\r\n      variant={theme}\r\n      style={{ marginTop: \"15px\" }}\r\n    >\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"row-stats\">First Grand Prix:</td>\r\n          <td\r\n            className=\" text-end clickable-row no-wrap\"\r\n            onClick={() => raceRowClick(firstGP.season, firstGP.round)}\r\n          >\r\n            {firstGP.season} {firstGP.raceName}\r\n          </td>\r\n        </tr>\r\n\r\n        {lastGPDetails === undefined ? null : (\r\n          <tr>\r\n            <td className=\"row-stats\">Latest Grand Prix:</td>\r\n            <td\r\n              className=\"text-end clickable-row no-wrap\"\r\n              onClick={() =>\r\n                raceRowClick(lastGPDetails.season, lastGPDetails.round)\r\n              }\r\n            >\r\n              {lastGPDetails.season} {lastGPDetails.raceName}\r\n            </td>\r\n          </tr>\r\n        )}\r\n\r\n        {fastestLap === undefined ? null : (\r\n          <>\r\n            <tr>\r\n              <td className=\"row-stats\">Laps:</td>\r\n              <td className=\"text-end row-stats\">\r\n                {lastGPDetails.Results[0].laps} ({lastGPDetails.season})\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Race distance:</td>\r\n              <td className=\"text-end row-stats\">\r\n                {Math.round(\r\n                  parseInt(lastGPDetails.Results[0].laps) *\r\n                    calculateCircuitLength(\r\n                      parseFloat(\r\n                        lastGP.Results[0].FastestLap.AverageSpeed.speed\r\n                      ),\r\n                      lastGP.Results[0].FastestLap.Time.time\r\n                    ) *\r\n                    1000\r\n                ) / 1000}{\" \"}\r\n                km ({lastGPDetails.season})\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Circuit length:</td>\r\n              <td className=\"text-end row-stats\">\r\n                {calculateCircuitLength(\r\n                  parseFloat(lastGP.Results[0].FastestLap.AverageSpeed.speed),\r\n                  lastGP.Results[0].FastestLap.Time.time\r\n                )}{\" \"}\r\n                km\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Lap record (All circuit's layouts):</td>\r\n              <td\r\n                className=\"text-end clickable-row align-middle\"\r\n                onClick={() =>\r\n                  raceRowClick(fastestLap.season, fastestLap.round)\r\n                }\r\n              >\r\n                {fastestLap.Results[0].FastestLap.Time.time} (\r\n                {fastestLap.season})\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Average speed:</td>\r\n              <td\r\n                className=\"text-end clickable-row no-wrap\"\r\n                onClick={() =>\r\n                  raceRowClick(fastestLap.season, fastestLap.round)\r\n                }\r\n              >\r\n                {fastestLap.Results[0].FastestLap.AverageSpeed.speed} km/h (\r\n                {calculateCircuitLength(\r\n                  parseFloat(\r\n                    fastestLap.Results[0].FastestLap.AverageSpeed.speed\r\n                  ),\r\n                  fastestLap.Results[0].FastestLap.Time.time\r\n                )}{\" \"}\r\n                km)\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Driver:</td>\r\n              <td\r\n                className=\"clickable-row text-end\"\r\n                onClick={() =>\r\n                  driverRowClick(fastestLap.Results[0].Driver.driverId)\r\n                }\r\n              >\r\n                {fastestLap.Results[0].Driver.givenName}{\" \"}\r\n                <p style={boldFont}>\r\n                  {fastestLap.Results[0].Driver.familyName.toUpperCase()}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            \r\n            <tr>\r\n              <td className=\"row-stats\">Team:</td>\r\n              <td\r\n                className=\"clickable-row text-end\"\r\n                onClick={() =>\r\n                  constructorRowClick(fastestLap.Results[0].Constructor.url)\r\n                }\r\n              >\r\n                <Row className=\"justify-content-end text-end g-2\">\r\n                  <Col className=\"align-self-center\" xs=\"auto\">\r\n                    <TeamColor\r\n                      constructorId={\r\n                        fastestLap.Results[0].Constructor.constructorId\r\n                      }\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs=\"auto\">{fastestLap.Results[0].Constructor.name}</Col>\r\n                </Row>\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default CircuitInformation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Map from \"../Map/Map\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport CircuitInformation from \"./CircuitInformation\";\r\n\r\nconst Circuit = ({ raceInfo, eventCountryCode }) => {\r\n  const [firstGP, setFirstGP] = useState(null);\r\n  const [lastGP, setLastGP] = useState(null);\r\n  const [lastGPDetails, setLastGPDetails] = useState(null);\r\n  const [fastestLap, setFastestLap] = useState(null);\r\n  const [wikiPageId, setWikiPageId] = useState(null);\r\n  const [circuitInformation, setCircuitInformation] = useState(null);\r\n  const [loadingWikiData, setLoadingWikiData] = useState(true);\r\n  const [loadingFirstGP, setLoadingFirstGP] = useState(true);\r\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\r\n  const [loadingLastGPDetails, setLoadingLastGPDetails] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCircuitFastestLap = () => {\r\n      fetch(\r\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          let bestLap = result.MRData.RaceTable.Races[0];\r\n\r\n          result.MRData.RaceTable.Races.forEach((lap) => {\r\n            if (\r\n              lap.Results[0].FastestLap.Time.time <\r\n              bestLap.Results[0].FastestLap.Time.time\r\n            ) {\r\n              bestLap = lap;\r\n            }\r\n          });\r\n\r\n          setLastGP(\r\n            result.MRData.RaceTable.Races[\r\n              result.MRData.RaceTable.Races.length - 1\r\n            ]\r\n          );\r\n          setFastestLap(bestLap);\r\n          setLoadingFastestLap(false);\r\n        });\r\n    };\r\n\r\n    const fetchCircuitFirstGP = () => {\r\n      fetch(\r\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setFirstGP(result.MRData.RaceTable.Races[0]);\r\n          setLoadingFirstGP(false);\r\n\r\n          return fetch(\r\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${raceInfo.Circuit.circuitName}&origin=*`,\r\n            { method: \"GET\" }\r\n          );\r\n        })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWikiPageId(Object.keys(result.query.pages));\r\n          setCircuitInformation(result.query.pages);\r\n          setLoadingWikiData(false);\r\n        });\r\n    };\r\n\r\n    const fetchCircuitLastRaceDetails = () => {\r\n      fetch(\r\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/results/1.json?limit=100`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setLastGPDetails(\r\n            result.MRData.RaceTable.Races[\r\n              result.MRData.RaceTable.Races.length - 1\r\n            ]\r\n          );\r\n          setLoadingLastGPDetails(false);\r\n        });\r\n    };\r\n\r\n    fetchCircuitFastestLap();\r\n    fetchCircuitFirstGP();\r\n    fetchCircuitLastRaceDetails();\r\n  }, [raceInfo.Circuit.circuitId, raceInfo.Circuit.circuitName]);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"text-center\">\r\n        <h1>{raceInfo.Circuit.circuitName.toUpperCase()}</h1>\r\n        <h3>\r\n          <CircleFlag\r\n            countryCode={CountriesCodeNationality[\r\n              eventCountryCode\r\n            ].toLowerCase()}\r\n            height=\"30\"\r\n          />{\" \"}\r\n          {raceInfo.Circuit.Location.country} (\r\n          {raceInfo.Circuit.Location.locality})\r\n        </h3>\r\n      </Row>\r\n\r\n      {loadingWikiData ? null : (\r\n        <Row>\r\n          <p style={{ textAlign: \"justify\" }}>\r\n            {circuitInformation[wikiPageId][\"extract\"]}\r\n            <br />\r\n            Source:{\" \"}\r\n            <a\r\n              href={`https://en.wikipedia.org/wiki/${circuitInformation[wikiPageId][\"title\"]}`}\r\n            >\r\n              Wikipedia\r\n            </a>\r\n          </p>\r\n        </Row>\r\n      )}\r\n\r\n      <Map\r\n        coordinates={[\r\n          raceInfo.Circuit.Location.lat,\r\n          raceInfo.Circuit.Location.long,\r\n        ]}\r\n        circuitName={raceInfo.Circuit.circuitName}\r\n        mapHeight={{ height: \"700px\" }}\r\n      />\r\n\r\n      {loadingFastestLap || loadingFirstGP || loadingLastGPDetails ? (\r\n        <Row\r\n          className=\"justify-content-center text-center\"\r\n          style={{ marginTop: \"15px\" }}\r\n        >\r\n          <Spinner animation=\"border\" />\r\n        </Row>\r\n      ) : (\r\n        <CircuitInformation\r\n          firstGP={firstGP}\r\n          lastGP={lastGP}\r\n          lastGPDetails={lastGPDetails}\r\n          fastestLap={fastestLap}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Circuit;\r\n","export const LineColors = {\r\n  1: \"rgb(128,0,0)\",\r\n  2: \"rgb(255,215,0)\",\r\n  3: \"rgb(255,0,0)\",\r\n  4: \"rgb(255,140,0)\",\r\n  5: \"rgb(0,100,0)\",\r\n  6: \"rgb(100,149,237)\",\r\n  7: \"rgb(0,191,255)\",\r\n  8: \"rgb(30,144,255)\",\r\n  9: \"rgb(0,0,255)\",\r\n  10: \"rgb(138,43,226)\",\r\n  11: \"rgb(147,112,219)\",\r\n  12: \"rgb(148,0,211)\",\r\n  13: \"rgb(255,0,255)\",\r\n  14: \"rgb(255,20,147)\",\r\n  15: \"rgb(139,69,19)\",\r\n  16: \"rgb(210,105,30)\",\r\n  17: \"rgb(244,164,96)\",\r\n  18: \"rgb(112,128,144)\",\r\n  19: \"rgb(176,196,222)\",\r\n  20: \"rgb(255,99,71)\",\r\n  21: \"rgb(250,128,114)\",\r\n  22: \"rgb(184,134,11)\",\r\n  23: \"rgb(154,205,50)\",\r\n  24: \"rgb(50,205,50)\",\r\n  25: \"rgb(75,0,130)\",\r\n  26: \"rgb(210,180,140)\",\r\n  27: \"rgb(128,128,128)\",\r\n  28: \"rgb(34,139,34)\",\r\n  29: \"rgb(127,255,0)\",\r\n  30: \"rgb(240,230,140)\",\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { LineColors } from \"../../data/LineColors\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst Laps = ({ season, round }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [data, setData] = useState({ labels: null, datasets: null });\r\n  const [loadingLaps, setLoadingLaps] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLaps = async () => {\r\n      await fetch(\r\n        `https://ergast.com/api/f1/${season}/${round}/laps.json?limit=2000`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => lapsPerDriver(result.MRData.RaceTable.Races[0].Laps));\r\n    };\r\n\r\n    fetchLaps();\r\n  }, [season, round]);\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        reverse: true,\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 20,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 20,\r\n          },\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const optionsMobile = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        reverse: true,\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 10,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 10,\r\n          },\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const lapsPerDriver = (laps) => {\r\n    const lapsObj = {};\r\n    const lapsNumber = [];\r\n\r\n    laps.forEach((lap) => {\r\n      lapsNumber.push(parseInt(lap.number));\r\n\r\n      lap.Timings.forEach((driver) => {\r\n        if (!lapsObj[driver.driverId]) {\r\n          lapsObj[driver.driverId] = [];\r\n        }\r\n\r\n        lapsObj[driver.driverId].push(driver.position);\r\n      });\r\n    });\r\n\r\n    const datasets = [];\r\n    var position = 1;\r\n\r\n    for (const [key, value] of Object.entries(lapsObj)) {\r\n      const data = {\r\n        label: key,\r\n        data: value,\r\n        fill: false,\r\n        backgroundColor: LineColors[position],\r\n        borderColor: LineColors[position],\r\n      };\r\n\r\n      datasets.push(data);\r\n      position++;\r\n    }\r\n\r\n    setData({ labels: lapsNumber, datasets: datasets });\r\n    setLoadingLaps(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingLaps ? null : (\r\n        <>\r\n          <MediaQuery minWidth={1224}>\r\n            <Line data={data} height={325} width={500} options={options} />\r\n          </MediaQuery>\r\n\r\n          <MediaQuery maxWidth={1224}>\r\n            <Line\r\n              data={data}\r\n              height={850}\r\n              width={500}\r\n              options={optionsMobile}\r\n            />\r\n          </MediaQuery>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Laps;\r\n","import React from \"react\";\r\nimport RaceClassification from \"../Classifications/RaceClassification\";\r\nimport QualifyingClassification from \"../Classifications/QualifyingClassification\";\r\nimport RaceInformation from \"./RaceInformation\";\r\nimport Circuit from \"../Circuit/Circuit\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ClockCountdown from \"../Countdown/ClockCountdown\";\r\nimport Laps from \"../Laps/Laps\";\r\n\r\nconst Event = ({\r\n  raceInfo,\r\n  raceClassification,\r\n  qualifyingClassification,\r\n  sprintClassification,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ul\r\n        className=\"nav nav-pills nav-fill mb-2\"\r\n        id=\"myTab\"\r\n        role=\"tablist\"\r\n        style={{ marginTop: \"10px\" }}\r\n      >\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            className=\"nav-link active\"\r\n            id=\"race-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#race\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"race\"\r\n            aria-selected=\"true\"\r\n          >\r\n            RACE\r\n          </button>\r\n        </li>\r\n\r\n        {raceClassification != null && raceInfo.season >= 1996 ? (\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"laps-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#laps\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"laps\"\r\n              aria-selected=\"false\"\r\n            >\r\n              LAPS\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n\r\n        {qualifyingClassification != null ? (\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"qualifying-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#qualifying\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"qualifying\"\r\n              aria-selected=\"false\"\r\n            >\r\n              QUALIFYING\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            className=\"nav-link\"\r\n            id=\"circuit-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#circuit\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"circuit\"\r\n            aria-selected=\"false\"\r\n          >\r\n            CIRCUIT\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"tab-content\">\r\n        <div\r\n          className=\"tab-pane fade show active\"\r\n          id=\"race\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"race-tab\"\r\n        >\r\n          <RaceInformation\r\n            raceInfo={raceInfo}\r\n            eventCountryCode={raceInfo.Circuit.Location.country}\r\n          />\r\n\r\n          {raceClassification != null ? (\r\n            <RaceClassification raceClassification={raceClassification} />\r\n          ) : (\r\n            <Row\r\n              className=\"justify-content-center text-center\"\r\n              style={{ marginTop: \"75px\" }}\r\n            >\r\n              <ClockCountdown\r\n                date={raceInfo.date}\r\n                time={raceInfo.time}\r\n                size=\"big\"\r\n              />\r\n            </Row>\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"laps\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"laps-tab\"\r\n        >\r\n          {raceClassification != null && raceInfo.season >= 1996 ? (\r\n            <>\r\n              <RaceInformation\r\n                raceInfo={raceInfo}\r\n                eventCountryCode={raceInfo.Circuit.Location.country}\r\n              />\r\n              <div style={{ minHeight: \"300px\" }}>\r\n                <Laps season={raceInfo.season} round={raceInfo.round} />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"qualifying\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"qualifying-tab\"\r\n        >\r\n          {qualifyingClassification != null ? (\r\n            <>\r\n              <RaceInformation\r\n                raceInfo={raceInfo}\r\n                eventCountryCode={raceInfo.Circuit.Location.country}\r\n              />\r\n\r\n              <QualifyingClassification\r\n                qualifyingClassification={qualifyingClassification}\r\n                sprintClassification={sprintClassification}\r\n              />\r\n            </>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"circuit\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"circuit-tab\"\r\n        >\r\n          <Circuit\r\n            raceInfo={raceInfo}\r\n            eventCountryCode={raceInfo.Circuit.Location.country}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Event from \"./Event\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst FutureRace = ({ season, round }) => {\r\n  const [raceInfo, setRaceInfo] = useState(null);\r\n  const [qualifying, setQualifying] = useState(null);\r\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\r\n  const [loadingQualifying, setLoadingQualifying] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchRaceInfo = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (\r\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\r\n          ) {\r\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\r\n          }\r\n        });\r\n\r\n      setLoadingRaceInfo(false);\r\n    };\r\n\r\n    const fetchQualifying = async () => {\r\n      await fetch(\r\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setQualifying(result.MRData.RaceTable.Races[0].QualifyingResults);\r\n          }\r\n        });\r\n\r\n      setLoadingQualifying(false);\r\n    };\r\n\r\n    fetchRaceInfo();\r\n    fetchQualifying();\r\n  }, [season, round]);\r\n\r\n  return (\r\n    <div style={{ minHeight: \"600px\" }}>\r\n      {loadingRaceInfo || loadingQualifying ? null : raceInfo === null ? (\r\n        <Redirect to=\"/error\" />\r\n      ) : (\r\n        <Event\r\n          season={season}\r\n          round={round}\r\n          raceInfo={raceInfo}\r\n          qualifyingClassification={qualifying}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FutureRace;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Event from \"./Event\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FutureRace from \"./FutureRace\";\r\n\r\nconst Race = ({ season, round }) => {\r\n  const [raceInfo, setRaceInfo] = useState(null);\r\n  const [raceClassification, setRaceClassification] = useState(null);\r\n  const [qualifying, setQualifying] = useState(null);\r\n  const [sprintQualifying, setSprintQualifying] = useState(null);\r\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\r\n  const [loadingQualifying, setLoadingQualifying] = useState(true);\r\n  const [loadingSprintQualifying, setLoadingSprintQualifying] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchRaceResult = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\r\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\r\n          }\r\n        });\r\n\r\n      setLoadingRaceResult(false);\r\n    };\r\n\r\n    const fetchRaceQualifying = async () => {\r\n      await fetch(\r\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setQualifying(result.MRData.RaceTable.Races[0].QualifyingResults);\r\n          }\r\n        });\r\n\r\n      setLoadingQualifying(false);\r\n    };\r\n\r\n    const fetchRaceSprintQualifying = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/sprint.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setSprintQualifying(result.MRData.RaceTable.Races[0].SprintResults);\r\n          }\r\n        });\r\n\r\n      setLoadingSprintQualifying(false);\r\n    };\r\n\r\n    fetchRaceResult();\r\n    fetchRaceQualifying();\r\n    fetchRaceSprintQualifying();\r\n  }, [season, round]);\r\n\r\n  return (\r\n    <Container fluid=\"md\" style={{ minHeight: \"600px\" }}>\r\n      {loadingRaceResult || loadingQualifying || loadingSprintQualifying ? (\r\n        <Container style={{ marginTop: \"5%\", minHeight: \"500px\" }}>\r\n          <Row className=\"justify-content-center text-center\">\r\n            <Spinner animation=\"border\" />\r\n          </Row>\r\n        </Container>\r\n      ) : raceClassification == null ? (\r\n        <FutureRace season={season} round={round} />\r\n      ) : (\r\n        <Event\r\n          raceInfo={raceInfo}\r\n          raceClassification={raceClassification}\r\n          qualifyingClassification={qualifying}\r\n          sprintClassification={sprintQualifying}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Race;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Race from \"../components/Race/Race\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst RaceResult = () => {\r\n  const { season } = useParams();\r\n  const { round } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Race season={season} round={round} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceResult;\r\n","export const CountriesCodeNationality = {\r\n  British: \"GB\",\r\n  Finnish: \"FI\",\r\n  Dutch: \"NL\",\r\n  Mexican: \"MX\",\r\n  Spanish: \"ES\",\r\n  Australian: \"AU\",\r\n  Monegasque: \"MC\",\r\n  French: \"FR\",\r\n  German: \"DE\",\r\n  Japanese: \"JP\",\r\n  Canadian: \"CA\",\r\n  Italian: \"IT\",\r\n  Russian: \"RU\",\r\n  Austrian: \"AT\",\r\n  Swiss: \"CH\",\r\n  American: \"US\",\r\n  Thai: \"TH\",\r\n  \"New Zealander\": \"NZ\",\r\n  \"New Zealand\": \"NZ\",\r\n  Swedish: \"SE\",\r\n  Portuguese: \"PT\",\r\n  Brazilian: \"BR\",\r\n  Hungarian: \"HU\",\r\n  Argentine: \"AR\",\r\n  Belgian: \"BE\",\r\n  Belgium: \"BE\",\r\n  \"South African\": \"ZA\",\r\n  Danish: \"DK\",\r\n  Liechtensteiner: \"LI\",\r\n  \"Hong Kong\": \"HK\",\r\n  Irish: \"IE\",\r\n  Chilean: \"CL\",\r\n  Venezuelan: \"VE\",\r\n  Colombian: \"CO\",\r\n  Czech: \"CZ\",\r\n  Malaysia: \"MY\",\r\n  Indian: \"IN\",\r\n  Polish: \"PL\",\r\n  Indonesian: \"ID\",\r\n  Rhodesian: \"ZW\",\r\n  Russia: \"RU\",\r\n  Korea: \"KR\",\r\n  Argentina: \"AR\",\r\n  UAE: \"AE\",\r\n  Australia: \"AU\",\r\n  Austria: \"AT\",\r\n  Azerbaijan: \"AZ\",\r\n  Bahrain: \"BH\",\r\n  Brazil: \"BR\",\r\n  Canada: \"CA\",\r\n  China: \"CN\",\r\n  France: \"FR\",\r\n  Germany: \"DE\",\r\n  Hungary: \"HU\",\r\n  India: \"IN\",\r\n  Italy: \"IT\",\r\n  Japan: \"JP\",\r\n  Malyasia: \"MY\",\r\n  Malaysian: \"MY\",\r\n  Mexico: \"MX\",\r\n  Monaco: \"MC\",\r\n  Morocco: \"MA\",\r\n  Netherlands: \"NL\",\r\n  Portugal: \"PT\",\r\n  \"Saudi Arabia\": \"SA\",\r\n  Singapore: \"SG\",\r\n  \"South Africa\": \"ZA\",\r\n  Spain: \"ES\",\r\n  Sweden: \"SE\",\r\n  Switzerland: \"CH\",\r\n  Turkey: \"TR\",\r\n  UK: \"GB\",\r\n  USA: \"US\",\r\n  \"United States\": \"US\",\r\n  Qatar: \"QA\",\r\n  Chinese: \"CN\"\r\n};\r\n","export const TeamColors = {\r\n  red_bull: \"#0600EF\",\r\n  williams: \"#005AFF\",\r\n  mercedes: \"#00D2BE\",\r\n  mclaren: \"#FF8700\",\r\n  aston_martin: \"#006F62\",\r\n  alphatauri: \"#2B4562\",\r\n  alpine: \"#0090FF\",\r\n  ferrari: \"#DC0000\",\r\n  haas: \"#FFFFFF\",\r\n  alfa: \"#900000\",\r\n  renault: \"#FFF500\",\r\n  racing_point: \"#FFC0CB\",\r\n  toro_rosso: \"#469BFF\",\r\n  force_india: \"#F596C8\",\r\n  sauber: \"#9B0000\",\r\n  manor: \"#323232\",\r\n  lotus_f1: \"#FFB800\",\r\n  marussia: \"#6E0000\",\r\n  caterham: \"#0b361f\",\r\n};\r\n","import React from \"react\";\r\nimport { TeamColors } from \"../../data/TeamColors\";\r\n\r\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"3px\",\r\n        height: height,\r\n        display: \"table\",\r\n        margin: \"0 auto\",\r\n        borderRadius: \"20px\",\r\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\r\n          ? TeamColors[constructorId]\r\n          : \"#000000\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TeamColor;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport DayNightToggle from \"react-day-and-night-toggle\";\r\n\r\nconst NavBar = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const themeToggler = () => {\r\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(toggle);\r\n    localStorage.setItem(\"theme\", toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\r\n      <Container style={{ minHeight: \"40px\" }}>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"icon-link\">\r\n            <GiCheckeredFlag size={30} />\r\n          </Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Row className=\"g-2\">\r\n            <Col style={{ marginTop: \"15px\" }}>\r\n              <DayNightToggle\r\n                onChange={() => themeToggler()}\r\n                checked={theme === \"dark\"}\r\n                size={20}\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Navbar.Brand\r\n                className=\"icon-link\"\r\n                href=\"https://github.com/jdro10\"\r\n                aria-label=\"Github\"\r\n              >\r\n                <AiFillGithub size={25} />\r\n              </Navbar.Brand>\r\n            </Col>\r\n          </Row>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { BsBootstrap } from \"react-icons/bs\";\r\nimport { SiVisualstudiocode } from \"react-icons/si\";\r\nimport { IoLogoNpm } from \"react-icons/io\";\r\nimport { FaHtml5 } from \"react-icons/fa\";\r\nimport { FaCss3Alt } from \"react-icons/fa\";\r\nimport { SiLeaflet } from \"react-icons/si\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\r\n          <Col>\r\n            <GiCheckeredFlag size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaGithub size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaReact size={40} />\r\n          </Col>\r\n          <Col>\r\n            <IoLogoJavascript size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaHtml5 size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaCss3Alt size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <BsBootstrap size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiLeaflet size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <IoLogoNpm size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiVisualstudiocode size={40} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>API</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            All racing data is obtained through{\" \"}\r\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\r\n              Ergast API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Some drivers' and circuits' information are obtained through{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/w/api.php\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              Wikipedia API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>DISCLAIMER</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            This website was developed for learning and educational purposes\r\n            only.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Data displayed may be inaccurate. By using this website you\r\n            acknowledge this.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            The author disclaims all responsibility for any loss or damage\r\n            arising from the use of this website.\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={7}>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              This website is unofficial and is not associated in any way with\r\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\r\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\r\n              marks of Formula One Licensing B.V.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export function getLocalRaceDate(date, time) {\r\n  const raceDate = new Date(date + \"T\" + time);\r\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\r\n  const minutes =\r\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\r\n\r\n  return hours + \":\" + minutes;\r\n}\r\n\r\nexport function convertDate(dateToConvert) {\r\n  const date = dateToConvert.split(\"-\");\r\n\r\n  return `${date[2]}/${date[1]}/${date[0]}`;\r\n}","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nconst ClockCountdown = ({ date, time, size }) => {\r\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      return (\r\n        <>\r\n          {size === \"big\" ? (\r\n            <Col>\r\n              <h1 className=\"countdown-font\">EVENT IN PROGRESS/ENDED</h1>\r\n              <h5 className=\"countdown-font\">WAITING FOR RESULTS</h5>\r\n            </Col>\r\n          ) : size === \"small\" ? (\r\n            <Col>\r\n              <h1 className=\"countdown-font-small\">EVENT IN PROGRESS/ENDED</h1>\r\n            </Col>\r\n          ) : (\r\n            <Col>\r\n              <h1>EVENT IN PROGRESS/ENDED</h1>\r\n              <h5>WAITING FOR RESULTS</h5>\r\n            </Col>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {size === \"big\" ? (\r\n            <>\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{days}</h1>\r\n                <h1>DAYS</h1>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{hours}</h1>\r\n                <h1>HRS</h1>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{minutes}</h1>\r\n                <h1>MIN</h1>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={2}>\r\n                <h1 className=\"countdown-font\">{seconds}</h1>\r\n                <h1>SEC</h1>\r\n              </Col>\r\n            </>\r\n          ) : size === \"small\" ? (\r\n            <>\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{days} d</h1>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{hours} hrs</h1>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{minutes} min</h1>\r\n              </Col>\r\n\r\n              <Col>\r\n                <h1 className=\"countdown-font-small\">{seconds} sec</h1>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Col xs={3} lg={1}>\r\n                <h1>{days}</h1>\r\n                <h5>DAYS</h5>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={1}>\r\n                <h1>{hours}</h1>\r\n                <h5>HRS</h5>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={1}>\r\n                <h1>{minutes}</h1>\r\n                <h5>MIN</h5>\r\n              </Col>\r\n\r\n              <Col xs={3} lg={1}>\r\n                <h1>{seconds}</h1>\r\n                <h5>SEC</h5>\r\n              </Col>\r\n            </>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Countdown\r\n      date={\r\n        Date.now() +\r\n        (new Date(date).getTime() +\r\n          time.split(\":\")[0] * 3600000 +\r\n          time.split(\":\")[1] * 60000 -\r\n          new Date().getTime())\r\n      }\r\n      renderer={renderer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ClockCountdown;\r\n"],"sourceRoot":""}