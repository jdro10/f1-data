{"version":3,"file":"static/js/869.4bb2679a.chunk.js","mappings":"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","sources":["components/Footer/Footer.js","components/Navbar/Navbar.js","data/CountryCodeNationality.js","data/config.js","helpers/Helpers.js","../node_modules/react-bootstrap/esm/Alert.js","components/Calendar/RaceInformation.js","components/Calendar/Calendar.js","pages/SeasonCalendar.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { BsBootstrap } from \"react-icons/bs\";\r\nimport { SiVisualstudiocode } from \"react-icons/si\";\r\nimport { IoLogoNpm } from \"react-icons/io\";\r\nimport { FaHtml5 } from \"react-icons/fa\";\r\nimport { FaCss3Alt } from \"react-icons/fa\";\r\nimport { SiLeaflet } from \"react-icons/si\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\r\n          <Col>\r\n            <GiCheckeredFlag size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaGithub size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaReact size={40} />\r\n          </Col>\r\n          <Col>\r\n            <IoLogoJavascript size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaHtml5 size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaCss3Alt size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <BsBootstrap size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiLeaflet size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <IoLogoNpm size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiVisualstudiocode size={40} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>API</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            All racing data is obtained through{\" \"}\r\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\r\n              Ergast API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Some drivers' and circuits' information are obtained through{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/w/api.php\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              Wikipedia API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>DISCLAIMER</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            This website was developed for learning and educational purposes\r\n            only.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Data displayed may be inaccurate. By using this website you\r\n            acknowledge this.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            The author disclaims all responsibility for any loss or damage\r\n            arising from the use of this website.\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={7}>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              This website is unofficial and is not associated in any way with\r\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\r\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\r\n              marks of Formula One Licensing B.V.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { React, useContext, useEffect } from \"react\";\r\nimport { Container, Row, Col, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport DayNightToggle from \"react-day-and-night-toggle\";\r\nimport \"./Navbar.css\";\r\n\r\nconst NavBar = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const themeToggler = () => {\r\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(toggle);\r\n    localStorage.setItem(\"theme\", toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Link to=\"/\">\r\n          <Navbar.Brand className=\"icon-link\">\r\n            <GiCheckeredFlag size={30} />\r\n          </Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/schedule\">\r\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/standings\">\r\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Row className=\"g-2\">\r\n            <Col className=\"dark-mode-toggle\">\r\n              <DayNightToggle onChange={() => themeToggler()} checked={theme === \"dark\"} size={20} />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Navbar.Brand className=\"icon-link\" href=\"https://github.com/jdro10\" aria-label=\"Github\">\r\n                <AiFillGithub size={25} />\r\n              </Navbar.Brand>\r\n            </Col>\r\n          </Row>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const CountriesCodeNationality = {\r\n  British: \"GB\",\r\n  Finnish: \"FI\",\r\n  Dutch: \"NL\",\r\n  Mexican: \"MX\",\r\n  Spanish: \"ES\",\r\n  Australian: \"AU\",\r\n  Monegasque: \"MC\",\r\n  French: \"FR\",\r\n  German: \"DE\",\r\n  Japanese: \"JP\",\r\n  Canadian: \"CA\",\r\n  Italian: \"IT\",\r\n  Russian: \"RU\",\r\n  Austrian: \"AT\",\r\n  Swiss: \"CH\",\r\n  American: \"US\",\r\n  Thai: \"TH\",\r\n  \"New Zealander\": \"NZ\",\r\n  \"New Zealand\": \"NZ\",\r\n  Swedish: \"SE\",\r\n  Portuguese: \"PT\",\r\n  Brazilian: \"BR\",\r\n  Hungarian: \"HU\",\r\n  Argentine: \"AR\",\r\n  Belgian: \"BE\",\r\n  Belgium: \"BE\",\r\n  \"South African\": \"ZA\",\r\n  Danish: \"DK\",\r\n  Liechtensteiner: \"LI\",\r\n  \"Hong Kong\": \"HK\",\r\n  Irish: \"IE\",\r\n  Chilean: \"CL\",\r\n  Venezuelan: \"VE\",\r\n  Colombian: \"CO\",\r\n  Czech: \"CZ\",\r\n  Malaysia: \"MY\",\r\n  Indian: \"IN\",\r\n  Polish: \"PL\",\r\n  Indonesian: \"ID\",\r\n  Rhodesian: \"ZW\",\r\n  Russia: \"RU\",\r\n  Korea: \"KR\",\r\n  Argentina: \"AR\",\r\n  UAE: \"AE\",\r\n  Australia: \"AU\",\r\n  Austria: \"AT\",\r\n  Azerbaijan: \"AZ\",\r\n  Bahrain: \"BH\",\r\n  Brazil: \"BR\",\r\n  Canada: \"CA\",\r\n  China: \"CN\",\r\n  France: \"FR\",\r\n  Germany: \"DE\",\r\n  Hungary: \"HU\",\r\n  India: \"IN\",\r\n  Italy: \"IT\",\r\n  Japan: \"JP\",\r\n  Malyasia: \"MY\",\r\n  Malaysian: \"MY\",\r\n  Mexico: \"MX\",\r\n  Monaco: \"MC\",\r\n  Morocco: \"MA\",\r\n  Netherlands: \"NL\",\r\n  Portugal: \"PT\",\r\n  \"Saudi Arabia\": \"SA\",\r\n  Singapore: \"SG\",\r\n  \"South Africa\": \"ZA\",\r\n  Spain: \"ES\",\r\n  Sweden: \"SE\",\r\n  Switzerland: \"CH\",\r\n  Turkey: \"TR\",\r\n  UK: \"GB\",\r\n  USA: \"US\",\r\n  \"United States\": \"US\",\r\n  Qatar: \"QA\",\r\n  Chinese: \"CN\"\r\n};\r\n","export const config = {\r\n  first_season: 1950,\r\n  current_season: 2023,\r\n  previous_season_n_races: 22,\r\n  current_season_n_races: 23,\r\n};\r\n","export function getLocalRaceDate(date, time) {\r\n  const raceDate = new Date(date + \"T\" + time);\r\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\r\n  const minutes =\r\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\r\n\r\n  return hours + \":\" + minutes;\r\n}\r\n\r\nexport function convertDate(dateToConvert) {\r\n  const date = dateToConvert.split(\"-\");\r\n\r\n  return `${date[2]}/${date[1]}/${date[0]}`;\r\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\n\r\nconst RaceInformation = ({ race }) => {\r\n  return (\r\n    <Row className=\"center-xs justify-content-between g-0\">\r\n      <Col xs={12} lg=\"auto\" className=\"text-center\">\r\n        <CircleFlag\r\n          countryCode={CountriesCodeNationality[\r\n            race.Circuit.Location.country\r\n          ].toLowerCase()}\r\n          height={75}\r\n          style={{ marginBottom: \"2%\" }}\r\n        />\r\n      </Col>\r\n\r\n      <Col xs={12} lg=\"auto\" className=\"align-self-center\">\r\n        <Link to={`/race/${race.season}/${race.round}`}>\r\n          <Alert variant=\"primary\">Round #{race.round}</Alert>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Col xs={12} lg={6} className=\"center-xs align-self-center\">\r\n        <h3>{race.raceName.toUpperCase()}</h3>\r\n        <h5>{race.Circuit.circuitName}</h5>\r\n      </Col>\r\n\r\n      <Col xs={12} lg={3} className=\"center-xs center align-self-center\">\r\n        <h5>{convertDate(race.date)}</h5>\r\n        <h5>\r\n          {race.hasOwnProperty(\"time\")\r\n            ? getLocalRaceDate(race.date, race.time)\r\n            : null}\r\n        </h5>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RaceInformation;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport RaceInformation from \"./RaceInformation\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Styles.css\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { config } from \"../../data/config\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst Calendar = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [season, setSeason] = useState(\r\n    sessionStorage.getItem(\"seasonScheduleInput\") !== null\r\n      ? sessionStorage.getItem(\"seasonScheduleInput\")\r\n      : config.current_season\r\n  );\r\n  const [seasonSchedule, setSeasonSchedule] = useState(null);\r\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\r\n  const [loadingSeasonSchedule, setLoadingSchedule] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSeasonSchedule = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setSeasonSchedule(result.MRData.RaceTable.Races);\r\n          setLoadingSchedule(false);\r\n        });\r\n    };\r\n\r\n    fetchSeasonSchedule();\r\n    setSeasonsYearsList(\r\n      Array(config.current_season - config.first_season + 1)\r\n        .fill()\r\n        .map((_, i) => config.first_season + i)\r\n        .reverse()\r\n    );\r\n  }, [season]);\r\n\r\n  const seasonYearChange = (text) => {\r\n    setSeason(text);\r\n    sessionStorage.setItem(\"seasonScheduleInput\", text);\r\n    setLoadingSchedule(true);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ minHeight: \"650px\" }}>\r\n      {loadingSeasonSchedule ? (\r\n        <Row className=\"justify-content-center text-center\">\r\n          <h1>{season} FORMULA 1</h1>\r\n          <Spinner animation=\"border\" />\r\n        </Row>\r\n      ) : (\r\n        <>\r\n          <Row className=\"justify-content-center text-center\">\r\n            <h1>{season} FORMULA 1</h1>\r\n          </Row>\r\n\r\n          <Row\r\n            className=\"justify-content-center text-center\"\r\n            style={{ marginBottom: \"5px\" }}\r\n          >\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                className=\"main-btn\"\r\n                id=\"dropdown-basic\"\r\n                variant=\"secondary\"\r\n              >\r\n                {season}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"dropdown-menu\">\r\n                {seasonsYearsList.map((season, index) => (\r\n                  <Dropdown.Item\r\n                    key={index}\r\n                    onClick={(e) => seasonYearChange(e.target.textContent)}\r\n                  >\r\n                    {season}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Table\r\n              className=\"standings-table table-striped\"\r\n              responsive\r\n              variant={theme}\r\n            >\r\n              <tbody>\r\n                {seasonSchedule.map((race, index) => (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <RaceInformation race={race} />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Calendar from \"../components/Calendar/Calendar\";\r\n\r\nconst SeasonSchedule = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Calendar />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SeasonSchedule;\r\n"],"names":["Container","Row","className","xs","id","Col","size","md","style","textAlign","href","color","useContext","ThemeContext","theme","setTheme","useEffect","localStorage","setItem","Navbar","bg","variant","to","Brand","Collapse","onChange","toggle","themeToggler","checked","CountriesCodeNationality","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","config","first_season","current_season","previous_season_n_races","current_season_n_races","getLocalRaceDate","date","time","raceDate","Date","getHours","getMinutes","convertDate","dateToConvert","split","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","race","lg","countryCode","Circuit","Location","country","toLowerCase","height","marginBottom","season","round","raceName","toUpperCase","circuitName","hasOwnProperty","useState","sessionStorage","getItem","setSeason","seasonSchedule","setSeasonSchedule","seasonsYearsList","setSeasonsYearsList","loadingSeasonSchedule","setLoadingSchedule","fetchSeasonSchedule","fetch","then","res","json","result","MRData","RaceTable","Races","Array","fill","map","_","i","reverse","minHeight","Spinner","animation","Dropdown","Toggle","Menu","index","Item","text","target","textContent","responsive","Footer"],"sourceRoot":""}