{"version":3,"sources":["components/Driver/DriverInformation.js","components/Driver/Driver.js","pages/DriverPage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js"],"names":["DriverInformation","stats","firstGP","lastGP","history","useHistory","theme","useContext","ThemeContext","teamRowClick","wikiConstructorLink","window","open","raceRowClick","season","round","push","Row","className","responsive","variant","onClick","Results","Constructor","url","Col","xs","TeamColor","constructorId","name","parseInt","Date","getFullYear","height","wins","podiums","totalFastestLaps","poles","totalPoints","size","totalGrandPrix","raceName","totalLapsRaced","Driver","driverId","useState","setLastGP","setFirstGP","loading","setLoading","setName","wikiPageId","setWikiPageId","driverRaces","setDriverRaces","driverPhoto","setDriverPhoto","driverNationality","setDriverNationality","driverInformation","setDriverInformation","loadingDriverRaces","setLoadingDriverRaces","loadingDriverStats","setLoadingDriverStats","driverStats","setDriverStats","useEffect","fetchDriverInformation","a","fetch","then","res","json","result","driverName","MRData","DriverTable","Drivers","split","givenName","familyName","nationality","method","Object","keys","query","pages","replace","catch","error","console","log","fetchDriverResults","RaceTable","Races","length","filter","race","position","includes","grid","reduce","acc","current","parseFloat","points","FastestLap","rank","laps","Container","style","minHeight","Spinner","animation","lg","fontWeight","fontSize","marginBottom","countryCode","undefined","CountriesCodeNationality","toLowerCase","hasOwnProperty","borderRadius","src","width","alt","textAlign","href","DriverPage","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","display","margin","backgroundColor","NavBar","setTheme","localStorage","setItem","bg","to","textDecoration","Brand","Collapse","marginTop","onChange","toggle","themeToggler","checked","id","md","color"],"mappings":"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","file":"static/js/11.10352a86.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport TeamColor from \"../TeamColor/TeamColor\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiPodium } from \"react-icons/gi\";\nimport { GiPodiumWinner } from \"react-icons/gi\";\nimport { SiFastly } from \"react-icons/si\";\nimport { GiRaceCar } from \"react-icons/gi\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport \"../SharedStyles/Table.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst DriverInformation = ({ stats, firstGP, lastGP }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const teamRowClick = (wikiConstructorLink) => {\n    window.open(wikiConstructorLink, \"_blank\");\n  };\n\n  const raceRowClick = (season, round) => {\n    history.push(`/race/${season}/${round}`);\n  };\n\n  return (\n    <div>\n      <Row className=\"justify-content-center\">\n        <Table\n          responsive\n          className=\"standings-table table-striped table-hover\"\n          variant={theme}\n        >\n          <tbody>\n            <tr>\n              <td className=\"row-stats\">Former team:</td>\n              <td\n                className=\"text-end clickable-row\"\n                onClick={() => teamRowClick(firstGP.Results[0].Constructor.url)}\n              >\n                <Row className=\"justify-content-end text-end g-2\">\n                  <Col className=\"align-self-center\" xs=\"auto\">\n                    <TeamColor\n                      constructorId={\n                        firstGP.Results[0].Constructor.constructorId\n                      }\n                    />\n                  </Col>\n                  <Col xs=\"auto\">{firstGP.Results[0].Constructor.name}</Col>\n                </Row>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">\n                {parseInt(lastGP.season) !== new Date().getFullYear()\n                  ? \"Last team:\"\n                  : \"Current team:\"}\n              </td>\n              <td\n                className=\"text-end clickable-row\"\n                onClick={() => teamRowClick(lastGP.Results[0].Constructor.url)}\n              >\n                <Row className=\"justify-content-end text-end g-2\">\n                  <Col className=\"align-self-center\" xs=\"auto\">\n                    <TeamColor\n                      constructorId={\n                        lastGP.Results[0].Constructor.constructorId\n                      }\n                      height=\"30px\"\n                    />\n                  </Col>\n                  <Col xs=\"auto\">{lastGP.Results[0].Constructor.name}</Col>\n                </Row>\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Wins:</td>\n              <td className=\"text-end row-stats\">\n                {stats.wins} <GiPodiumWinner />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Podiums:</td>\n              <td className=\"text-end row-stats\">\n                {stats.podiums} <GiPodium />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Fastest laps:</td>\n              <td className=\"text-end row-stats\">\n                {stats.totalFastestLaps} <FaStopwatch />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats no-wrap\">Pole positions:</td>\n              <td className=\"text-end row-stats\">\n                {stats.poles} <SiFastly />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Total points:</td>\n              <td className=\"text-end row-stats\">\n                {stats.totalPoints} <GiRaceCar size={30} />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Grands Prix:</td>\n              <td className=\"text-end row-stats\">\n                {stats.totalGrandPrix} <GiCheckeredFlag size={25} />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">First race:</td>\n              <td\n                className=\"text-end clickable-row no-wrap\"\n                onClick={() => raceRowClick(firstGP.season, firstGP.round)}\n              >\n                {firstGP.raceName} {firstGP.season}\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Last race:</td>\n              <td\n                className=\"text-end clickable-row no-wrap\"\n                onClick={() => raceRowClick(lastGP.season, lastGP.round)}\n              >\n                {lastGP.raceName + \" \" + lastGP.season}\n              </td>\n            </tr>\n            <tr>\n              <td className=\"row-stats\">Laps raced:</td>\n              <td className=\"text-end row-stats\">\n                {stats.totalLapsRaced} <GiRaceCar size={30} />\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n      </Row>\n    </div>\n  );\n};\n\nexport default DriverInformation;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { BsPersonFill } from \"react-icons/bs\";\nimport \"../SharedStyles/Table.css\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\nimport DriverInformation from \"./DriverInformation\";\n\nconst Driver = ({ driverId }) => {\n  const [lastGP, setLastGP] = useState(null);\n  const [firstGP, setFirstGP] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [name, setName] = useState(null);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [driverRaces, setDriverRaces] = useState(null);\n  const [driverPhoto, setDriverPhoto] = useState(null);\n  const [driverNationality, setDriverNationality] = useState(null);\n  const [driverInformation, setDriverInformation] = useState(null);\n  const [loadingDriverRaces, setLoadingDriverRaces] = useState(true);\n  const [loadingDriverStats, setLoadingDriverStats] = useState(true);\n  const [driverStats, setDriverStats] = useState({\n    wins: 0,\n    podiums: 0,\n    poles: 0,\n    totalPoints: 0,\n    totalFastestLaps: 0,\n    totalLapsRaced: 0,\n    totalGrandPrix: 0,\n  });\n\n  useEffect(() => {\n    const fetchDriverInformation = async () => {\n      await fetch(`https://ergast.com/api/f1/drivers/${driverId}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          const driverURL = result.MRData.DriverTable.Drivers[0].url;\n          const driverName = driverURL.split(\"/\")[4];\n          setName(\n            result.MRData.DriverTable.Drivers[0].givenName +\n              \" \" +\n              result.MRData.DriverTable.Drivers[0].familyName\n          );\n          setDriverNationality(\n            result.MRData.DriverTable.Drivers[0].nationality\n          );\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${driverName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setDriverInformation(result.query.pages);\n          const driverName = result.query.pages[\n            Object.keys(result.query.pages)\n          ][\"title\"].replace(\" \", \"_\");\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?action=query&prop=pageimages&format=json&piprop=original&titles=${driverName}&origin=*`\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setDriverPhoto(result.query.pages);\n          setLoading(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    const fetchDriverResults = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/drivers/${driverId}/results.json?limit=1000`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setDriverRaces(result.MRData.RaceTable.Races);\n          setFirstGP(result.MRData.RaceTable.Races[0]);\n          setLastGP(\n            result.MRData.RaceTable.Races[\n              parseInt(result.MRData.RaceTable.Races.length - 1)\n            ]\n          );\n          setLoadingDriverRaces(false);\n        });\n    };\n\n    const driverStats = () => {\n      if (!loadingDriverRaces) {\n        const wins = driverRaces.filter(\n          (race) => race.Results[0].position === \"1\"\n        ).length;\n\n        const podiums = driverRaces.filter((race) =>\n          [\"1\", \"2\", \"3\"].includes(race.Results[0].position)\n        ).length;\n\n        const poles = driverRaces.filter(\n          (race) => race.Results[0].grid === \"1\"\n        ).length;\n\n        const totalPoints = driverRaces.reduce(\n          (acc, current) => acc + parseFloat(current.Results[0].points),\n          0\n        );\n\n        const totalFastestLaps = driverRaces.filter(\n          (race) =>\n            race.Results[0].FastestLap &&\n            race.Results[0].FastestLap.rank === \"1\"\n        ).length;\n\n        const totalLapsRaced = driverRaces.reduce(\n          (acc, current) => acc + parseInt(current.Results[0].laps),\n          0\n        );\n\n        setDriverStats({\n          wins: wins,\n          podiums: podiums,\n          poles: poles,\n          totalPoints: totalPoints,\n          totalFastestLaps: totalFastestLaps,\n          totalLapsRaced: totalLapsRaced,\n          totalGrandPrix: driverRaces.length,\n        });\n        setLoadingDriverStats(false);\n      }\n    };\n\n    if (loading) {\n      fetchDriverInformation();\n      fetchDriverResults();\n    }\n\n    driverStats();\n  }, [driverId, loading, driverRaces, loadingDriverRaces]);\n\n  return (\n    <Container style={{ minHeight: \"500px\" }}>\n      {loading ? (\n        <Row className=\"justify-content-center text-center\">\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <>\n          <Row className=\"justify-content-center text-center\">\n            <Col xs={12} lg=\"auto\">\n              <h1\n                style={{\n                  fontWeight: \"700\",\n                  fontSize: \"60px\",\n                }}\n              >\n                {name}\n              </h1>\n            </Col>\n            <Col xs={12} lg=\"auto\" style={{ marginBottom: \"20px\" }}>\n              <CircleFlag\n                countryCode={\n                  CountriesCodeNationality[driverNationality] !== undefined\n                    ? CountriesCodeNationality[driverNationality].toLowerCase()\n                    : null\n                }\n                height={66}\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col xs={12} lg={3} style={{ marginBottom: \"10px\" }}>\n              {driverPhoto[wikiPageId].hasOwnProperty(\"original\") ? (\n                <img\n                  style={{ borderRadius: \"15px\" }}\n                  src={driverPhoto[wikiPageId][\"original\"][\"source\"]}\n                  width=\"250px\"\n                  alt=\"driver\"\n                />\n              ) : (\n                <BsPersonFill size={150} />\n              )}\n            </Col>\n            <Col xs={12} lg={9}>\n              <p style={{ textAlign: \"justify\" }}>\n                {driverInformation[wikiPageId][\"extract\"]} (Source:{\" \"}\n                <a\n                  href={`https://en.wikipedia.org/wiki/${driverInformation[wikiPageId][\"title\"]}`}\n                >\n                  Wikipedia\n                </a>\n                )\n              </p>\n            </Col>\n          </Row>\n          {loadingDriverStats ? (\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          ) : (\n            <DriverInformation\n              stats={driverStats}\n              firstGP={firstGP}\n              lastGP={lastGP}\n            />\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Driver;\n","import React from \"react\";\nimport Driver from \"../components/Driver/Driver\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useParams } from \"react-router-dom\";\n\nconst DriverPage = () => {\n  const { driverId } = useParams();\n\n  return (\n    <>\n      <NavBar />\n      <Driver driverId={driverId} />\n      <Footer />\n    </>\n  );\n};\n\nexport default DriverPage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Malaysian: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n  Qatar: \"QA\"\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n            <Col>\n              <Navbar.Brand className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n"],"sourceRoot":""}