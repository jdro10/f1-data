{"version":3,"sources":["components/Countdown/ClockCountdown.js","components/Stats/Classifications/RaceClassification.js","components/Stats/Classifications/RaceQualifying.js","components/Stats/RaceData/RaceTab.js","components/Map/Map.js","components/Stats/RaceData/CircuitTab.js","data/LineColors.js","components/Stats/RaceData/LapsTab.js","components/Stats/RaceData/EventTabs.js","components/Stats/RaceData/FutureRace.js","components/Stats/RaceData/Race.js","pages/RaceResult.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js","helpers/Helpers.js"],"names":["ClockCountdown","date","time","Date","now","getTime","split","renderer","days","hours","minutes","seconds","completed","xs","sm","lg","boldFont","fontWeight","margin","padding","display","RaceClassification","raceClassification","history","useHistory","theme","useContext","ThemeContext","Table","className","responsive","style","overflow","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","number","Row","Col","TeamColor","constructorId","Constructor","height","md","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","FastestLap","rank","points","grid","RaceQualifying","raceQualifying","hasOwnProperty","code","substring","Q1","Q2","Q3","RaceTab","raceInfo","eventCountryCode","href","url","raceName","convertDate","getLocalRaceDate","countryCode","CountriesCodeNationality","toLowerCase","Map","coordinates","circuitName","useState","setMap","useEffect","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","Marker","Popup","CircuitTab","fastestLap","setFastestLap","firstGrandPrix","setFirstGrandPrix","wikiPageId","setWikiPageId","circuitInformation","setCircuitInformation","loadingWikiData","setLoadingWikiData","loadingFastestLap","setLoadingFastestLap","loadingFirstGrandPrix","setLoadingFirstGrandPrix","fetch","Circuit","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","Results","season","method","Object","keys","query","pages","Location","country","locality","textAlign","lat","long","mapHeight","marginTop","AverageSpeed","speed","timeSplitted","secondsSplitted","timeInSeconds","parseInt","parseFloat","length","Math","round","calculateCircuitLength","wikiConstructorLink","window","open","LineColors","LapsTab","labels","datasets","data","setData","loadingLaps","setLoadingLaps","a","lapsPerDriver","Laps","fetchLaps","options","plugins","legend","scales","y","reverse","ticks","color","font","size","stepSize","x","optionsMobile","lapsObj","lapsNumber","Timings","entries","label","fill","backgroundColor","borderColor","minWidth","width","maxWidth","EventTabs","Tabs","defaultActiveKey","id","Tab","tabClassName","eventKey","title","minHeight","FutureRace","setRaceInfo","setRaceQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingRaceQualifying","setLoadingRaceQualifying","fetchRaceInfo","fetchRaceQualifying","QualifyingResults","Container","fluid","to","Race","setRaceClassification","loadingRaceResult","setLoadingRaceResult","fetchRaceResult","Spinner","animation","RaceResult","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","NavBar","setTheme","localStorage","setItem","bg","textDecoration","Brand","Collapse","onChange","toggle","themeToggler","checked","raceDate","getHours","getMinutes","dateToConvert"],"mappings":"0GAAA,iCAkDeA,IA9CQ,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAiC9B,OACE,cAAC,IAAD,CACED,KACEE,KAAKC,OACJ,IAAID,KAAKF,GAAMI,UACO,KAArBH,EAAKI,MAAM,KAAK,IAChB,IAAIH,MAAOE,WAEfE,SAxCa,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,QACxC,OADiE,EAAhBC,UAG7C,eAAC,IAAD,WACE,kDACA,6DAKF,qCACE,eAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACE,6BAAKP,IACL,yCAEF,eAAC,IAAD,CAAKK,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACE,6BAAKN,IACL,wCAEF,eAAC,IAAD,CAAKI,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACE,6BAAKL,IACL,wCAEF,eAAC,IAAD,CAAKG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACE,6BAAKJ,IACL,gD,0NCpBNK,EAAW,CACfC,WAAY,IACZC,OAAQ,MACRC,QAAS,MACTC,QAAS,UAiGIC,EA/FY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACtBC,EAAUC,cACRC,EAAUC,qBAAWC,KAArBF,MAMR,OACE,gCACE,eAACG,EAAA,EAAD,CACEC,UAAU,4CACVC,WAAW,KACXC,MAAO,CAAEC,SAAU,UACnBC,QAASR,EAJX,UAME,gCACE,+BACE,qCACA,oBAAII,UAAU,SAAd,oBACA,wCACA,oBAAIA,UAAU,SAAd,kBACA,oBAAIA,UAAU,SAAd,kBACA,8CACA,qCACA,oBAAIA,UAAU,SAAd,sBAGJ,gCACGP,EAAmBY,KAAI,SAACC,EAAQC,GAAT,OACtB,qBAEEL,MAAO,CAAEM,OAAQ,WACjBC,QAAS,kBA7BHC,EA6BkBJ,EAAOK,OAAOD,cA5BhDhB,EAAQkB,KAAR,kBAAwBF,IADT,IAACA,GA0BR,UAKE,6BAAKJ,EAAOO,WACZ,oBAAIb,UAAU,SAAd,SAAwBM,EAAOQ,SAC/B,6BACE,eAACC,EAAA,EAAD,CAAKf,UAAU,MAAf,UACE,cAACgB,EAAA,EAAD,CAAKhC,GAAI,EAAGgB,UAAU,SAAtB,SACE,cAACiB,EAAA,EAAD,CACEC,cAAeZ,EAAOa,YAAYD,cAClCE,OAAO,WAGX,cAACJ,EAAA,EAAD,CAAKhC,GAAI,EAAGgB,UAAU,SAAtB,SACE,cAACiB,EAAA,EAAD,CACEC,cAAeZ,EAAOa,YAAYD,kBAGtC,eAACF,EAAA,EAAD,CAAKhC,GAAI,EAAGqC,GAAI,GAAhB,UACGf,EAAOK,OAAOW,UAAW,IAC1B,mBAAGpB,MAAOf,EAAV,SACGmB,EAAOK,OAAOY,WAAWC,wBAKlC,oBAAIxB,UAAU,SAAd,SAAwBM,EAAOa,YAAYM,OAC3C,oBAAIzB,UAAU,SAAd,SAAwBM,EAAOoB,OAC/B,kCACmBC,IAAhBrB,EAAOsB,MACc,aAAlBtB,EAAOuB,OACLvB,EAAOsB,KAAKvD,KAEdiC,EAAOuB,SAEZvB,EAAOwB,YAAyC,MAA3BxB,EAAOwB,WAAWC,KACtC,6BACE,eAAChB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKhC,GAAI,EAAT,SAAasB,EAAO0B,SACpB,cAAChB,EAAA,EAAD,UACE,cAAC,IAAD,WAKN,6BAAKV,EAAO0B,SAEd,oBAAIhC,UAAU,SAAd,SACmB,MAAhBM,EAAO2B,KACJ,GAAK3B,EAAOO,SACZP,EAAO2B,KAAO3B,EAAOO,aAnDtBN,WAyDb,8BACE,cAAC,IAAD,IADF,oCC/FApB,EAAW,CACfC,WAAY,IACZC,OAAQ,MACRC,QAAS,MACTC,QAAS,UAiFI2C,EA9EQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAClBzC,EAAUC,cACRC,EAAUC,qBAAWC,KAArBF,MAMR,OACE,eAACG,EAAA,EAAD,CACEE,WAAW,KACXD,UAAU,4CACVI,QAASR,EAHX,UAKE,gCACE,+BACE,qCACA,oBAAII,UAAU,SAAd,oBACA,wCACA,oBAAIA,UAAU,SAAd,kBACA,oCACA,oCACA,yCAGJ,gCACGmC,EAAe9B,KAAI,SAACC,EAAQC,GAAT,OAClB,qBAEEL,MAAO,CAAEM,OAAQ,WACjBC,QAAS,kBA1BDC,EA0BgBJ,EAAOK,OAAOD,cAzB9ChB,EAAQkB,KAAR,kBAAwBF,IADT,IAACA,GAuBV,UAKE,6BAAKJ,EAAOO,WACZ,oBAAIb,UAAU,SAAd,SAAwBM,EAAOQ,SAC/B,oBAAId,UAAU,SAAd,SACE,eAACe,EAAA,EAAD,CAAKf,UAAU,MAAf,UACE,cAACgB,EAAA,EAAD,CAAKhC,GAAI,EAAT,SACE,cAACiC,EAAA,EAAD,CAAWC,cAAeZ,EAAOa,YAAYD,kBAE/C,eAACF,EAAA,EAAD,WACGV,EAAOK,OAAOW,UAAW,IAC1B,mBAAGpB,MAAOf,EAAV,SACGmB,EAAOK,OAAOY,WAAWC,wBAKlC,oBAAIxB,UAAU,SAAd,SACE,eAACe,EAAA,EAAD,CAAKf,UAAU,MAAf,UACE,cAACgB,EAAA,EAAD,CAAKhC,GAAI,EAAT,SACE,cAACiC,EAAA,EAAD,CAAWC,cAAeZ,EAAOa,YAAYD,kBAE/C,cAACF,EAAA,EAAD,CAAKhC,GAAI,EAAT,SACE,mBAAGkB,MAAOf,EAAV,SACImB,EAAOK,OAAOyB,eAAe,QAE3B9B,EAAOK,OAAO0B,KADd/B,EAAOK,OAAOY,WAAWe,UAAU,EAAG,GAAGd,uBAMrD,oBAAIxB,UAAU,SAAd,SAAwBM,EAAOa,YAAYM,OAC3C,6BACGnB,EAAO8B,eAAe,MACL,KAAd9B,EAAOiC,GACL,IACAjC,EAAOiC,GACT,MAEN,6BAAKjC,EAAO8B,eAAe,MAAQ9B,EAAOkC,GAAK,MAC/C,6BAAKlC,EAAO8B,eAAe,MAAQ9B,EAAOmC,GAAK,QA1C1ClC,Y,wBCAFmC,EAtCC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAC3B,OACE,gCACE,cAAC7B,EAAA,EAAD,CAAKf,UAAU,qCAAf,SACE,cAACgB,EAAA,EAAD,CAAKK,GAAG,OAAR,SACE,mBAAGrB,UAAU,YAAY6C,KAAMF,EAASG,IAAxC,SACE,6BAAKH,EAASI,SAASvB,sBAI7B,cAACT,EAAA,EAAD,CAAKf,UAAU,qCAAf,SACE,cAACgB,EAAA,EAAD,CAAKK,GAAG,OAAR,SACE,6BAAK2B,YAAYL,EAASvE,YAG9B,cAAC2C,EAAA,EAAD,CAAKf,UAAU,qCAAf,SACE,cAACgB,EAAA,EAAD,CAAKK,GAAG,OAAR,SACE,6BACGsB,EAASP,eAAe,QACrBa,YAAiBN,EAASvE,KAAMuE,EAAStE,MACzC,WAIV,cAAC0C,EAAA,EAAD,CAAKf,UAAU,qCAAf,SACE,cAACgB,EAAA,EAAD,CAAKK,GAAG,OAAR,SACE,cAAC,IAAD,CACE6B,YAAaC,IACXP,GACAQ,cACFhC,OAAO,gB,6CCDJiC,EA/BH,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC1B,EAAsBC,mBAAS,MAA/B,mBAAOnD,EAAP,KAAYoD,EAAZ,KAUA,OARAC,qBAAU,WACJrD,GACFsD,aAAY,WACVtD,EAAIuD,mBACH,OAEJ,CAACvD,IAGF,eAACwD,EAAA,EAAD,CACEC,OAAQR,EACRS,KAAM,GACNC,iBAAiB,EACjBC,YAAaR,EAJf,UAME,cAACS,EAAA,EAAD,CACEC,YAAY,yEACZrB,IAAI,uDAEN,cAACsB,EAAA,EAAD,CAAQvD,SAAUyC,EAAlB,SACE,eAACe,EAAA,EAAD,WACGd,EADH,IACgB,uBADhB,IACwBD,EAAY,GADpC,MAC2CA,EAAY,YCjBzDnE,EAAW,CACfC,WAAY,IACZC,OAAQ,MACRC,QAAS,MACTC,QAAS,UAkNI+E,EA/MI,SAAC,GAAoC,IAAlC3B,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBACxBlD,EAAUC,cACRC,EAAUC,qBAAWC,KAArBF,MACR,EAAoC4D,mBAAS,MAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAA4ChB,mBAAS,MAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAAoClB,mBAAS,MAA7C,mBAAOmB,EAAP,KAAmBC,EAAnB,KACA,EAAoDpB,mBAAS,MAA7D,mBAAOqB,EAAP,KAA2BC,EAA3B,KACA,EAA8CtB,oBAAS,GAAvD,mBAAOuB,EAAP,KAAwBC,EAAxB,KACA,EAAkDxB,oBAAS,GAA3D,mBAAOyB,EAAP,KAA0BC,EAA1B,KACA,EAA0D1B,oBAAS,GAAnE,mBAAO2B,EAAP,KAA8BC,EAA9B,KAUA1B,qBAAU,WAEN2B,MAAM,sCAAD,OACmC1C,EAAS2C,QAAQC,UADpD,4BAGFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAUD,EAAOE,OAAOC,UAAUC,MAAM,GAE5CJ,EAAOE,OAAOC,UAAUC,MAAMC,SAAQ,SAACC,GAEnCA,EAAIC,QAAQ,GAAGpE,WAAWF,KAAKvD,KAC/BuH,EAAQM,QAAQ,GAAGpE,WAAWF,KAAKvD,OAEnCuH,EAAUK,MAIdzB,EAAcoB,GACdV,GAAqB,MAKzBG,MAAM,sCAAD,OACmC1C,EAAS2C,QAAQC,UADpD,gBAGFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAIL,OAHAjB,EAAkBiB,EAAOE,OAAOC,UAAUC,MAAM,GAAGI,QACnDf,GAAyB,GAElBC,MAAM,oHAAD,OAC0G1C,EAAS2C,QAAQ/B,YAD3H,aAEV,CAAE6C,OAAQ,WAGbZ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLf,EAAcyB,OAAOC,KAAKX,EAAOY,MAAMC,QACvC1B,EAAsBa,EAAOY,MAAMC,OACnCxB,GAAmB,QAMxB,CAACrC,EAAS2C,QAAQC,UAAW5C,EAAS2C,QAAQ/B,cAgBjD,OACE,gCACE,eAACxC,EAAA,EAAD,CAAKf,UAAU,cAAf,UACE,6BAAK2C,EAAS2C,QAAQ/B,cACtB,+BACE,cAAC,IAAD,CACEL,YAAaC,IACXP,GACAQ,cACFhC,OAAO,OACN,IACFuB,EAAS2C,QAAQmB,SAASC,WAE7B,6BAAK/D,EAAS2C,QAAQmB,SAASE,cAGhC5B,EAAkB,KACjB,cAAChE,EAAA,EAAD,UACE,oBAAGb,MAAO,CAAE0G,UAAW,WAAvB,UACG/B,EAAmBF,GAAnB,QADH,YACuD,IACrD,mBACE9B,KAAI,wCAAmCgC,EAAmBF,GAAnB,OADzC,uBAFF,SAYJ,cAAC,EAAD,CACErB,YAAa,CACXX,EAAS2C,QAAQmB,SAASI,IAC1BlE,EAAS2C,QAAQmB,SAASK,MAE5BvD,YAAaZ,EAAS2C,QAAQ/B,YAC9BwD,UAAW,CAAE3F,OAAQ,WAGtB6D,GAAqBE,EAAwB,KAC5C,cAACpF,EAAA,EAAD,CACEE,YAAU,EACVD,UAAU,4CACVI,QAASR,EACTM,MAAO,CAAE8G,UAAW,QAJtB,SAME,kCACE,+BACE,oBAAIhH,UAAU,YAAd,8BACA,oBAAIA,UAAU,qBAAd,SAAoCyE,YAEtB9C,IAAf4C,EAA2B,KAC1B,qCACE,+BACE,oBAAIvE,UAAU,YAAd,4CACA,qBAAIA,UAAU,qBAAd,UACGuE,EAAW2B,QAAQ,GAAGpE,WAAWF,KAAKvD,KADzC,KAEGkG,EAAW4B,OAFd,UAKF,+BACE,oBAAInG,UAAU,YAAd,2BACA,qBAAIA,UAAU,qBAAd,UACGuE,EAAW2B,QAAQ,GAAGpE,WAAWmF,aAAaC,MADjD,cAIF,+BACE,oBAAIlH,UAAU,YAAd,oBACA,qBAAIA,UAAU,qBAAd,cACI,IAnFW,SAACkH,EAAO7I,GACrC,IAAM8I,EAAe9I,EAAKI,MAAM,KAC1B2I,EAAkB/I,EAAKI,MAAM,KAC7B4I,EACJC,SAA2B,GAAlBH,EAAa,IACtBG,SAASH,EAAa,IACtBI,WAAWH,EAAgB,GAAK,KAG5BI,EAFuC,IAApBD,WAAWL,GAAiB,KAEnBG,EAAiB,IAEnD,OAAOI,KAAKC,MAAe,IAATF,GAAiB,IAyElBG,CACCJ,WACEhD,EAAW2B,QAAQ,GAAGpE,WAAWmF,aAAaC,OAEhD3C,EAAW2B,QAAQ,GAAGpE,WAAWF,KAAKvD,MACrC,IAPL,WAWF,+BACE,oBAAI2B,UAAU,YAAd,oBACA,qBACEA,UAAU,yBACVS,QAAS,kBA1JHC,EA2JW6D,EAAW2B,QAAQ,GAAGvF,OAAOD,cA1J9DhB,EAAQkB,KAAR,kBAAwBF,IADH,IAACA,GAwJR,UAMG6D,EAAW2B,QAAQ,GAAGvF,OAAOW,UAAW,IACzC,mBAAGpB,MAAOf,EAAV,SACGoF,EAAW2B,QAAQ,GAAGvF,OAAOY,WAAWC,sBAI/C,+BACE,oBAAIxB,UAAU,YAAd,kBACA,oBACEA,UAAU,yBACVS,QAAS,kBApKEmH,EAqKWrD,EAAW2B,QAAQ,GAAG/E,YAAY2B,SApKxE+E,OAAOC,KAAKF,EAAqB,UADP,IAACA,GAkKb,SAME,eAAC7G,EAAA,EAAD,CAAKf,UAAU,+BAAf,UACE,cAACgB,EAAA,EAAD,CAAKhC,GAAG,OAAR,SACE,cAACiC,EAAA,EAAD,CACEC,cACEqD,EAAW2B,QAAQ,GAAG/E,YAAYD,cAEpCE,OAAO,WAGX,cAACJ,EAAA,EAAD,CAAKhC,GAAG,OAAR,SACGuF,EAAW2B,QAAQ,GAAG/E,YAAYM,2B,kBCnN9CsG,EAAa,CACxB,EAAG,eACH,EAAG,iBACH,EAAG,eACH,EAAG,iBACH,EAAG,eACH,EAAG,mBACH,EAAG,iBACH,EAAG,kBACH,EAAG,eACH,GAAI,kBACJ,GAAI,mBACJ,GAAI,iBACJ,GAAI,iBACJ,GAAI,kBACJ,GAAI,iBACJ,GAAI,kBACJ,GAAI,kBACJ,GAAI,mBACJ,GAAI,mBACJ,GAAI,iBACJ,GAAI,mBACJ,GAAI,kBACJ,GAAI,kBACJ,GAAI,iBACJ,GAAI,gBACJ,GAAI,mBACJ,GAAI,mBACJ,GAAI,iBACJ,GAAI,iBACJ,GAAI,oB,kBC4HSC,EAnJC,SAAC,GAAuB,IAArB7B,EAAoB,EAApBA,OAAQuB,EAAY,EAAZA,MACjB9H,EAAUC,qBAAWC,KAArBF,MACR,EAAwB4D,mBAAS,CAAEyE,OAAQ,KAAMC,SAAU,OAA3D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsC5E,oBAAS,GAA/C,mBAAO6E,EAAP,KAAoBC,EAApB,KAEA5E,qBAAU,YACO,uCAAG,sBAAA6E,EAAA,sEACVlD,MAAM,6BAAD,OACoBc,EADpB,YAC8BuB,EAD9B,0BAGRlC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAY6C,EAAc7C,EAAOE,OAAOC,UAAUC,MAAM,GAAG0C,SALnD,2CAAH,qDAQfC,KACC,CAACvC,EAAQuB,IAEZ,IAAMiB,EAAU,CACdC,QAAS,CACPC,OAAQ,CACNtJ,SAAS,EACTsB,SAAU,WAGdiI,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,MAAO,CACLC,MAAiB,SAAVtJ,EAAmB,QAAU,OACpCuJ,KAAM,CACJC,KAAM,IAERC,SAAU,GAEZpH,KAAM,CACJiH,MAAO,SAGXI,EAAG,CACDL,MAAO,CACLC,MAAiB,SAAVtJ,EAAmB,QAAU,OACpCuJ,KAAM,CACJC,KAAM,KAGVnH,KAAM,CACJiH,MAAO,WAMTK,EAAgB,CACpBX,QAAS,CACPC,OAAQ,CACNtJ,SAAS,EACTsB,SAAU,WAGdiI,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,MAAO,CACLC,MAAiB,SAAVtJ,EAAmB,QAAU,OACpCuJ,KAAM,CACJC,KAAM,IAERC,SAAU,GAEZpH,KAAM,CACJiH,MAAO,SAGXI,EAAG,CACDL,MAAO,CACLC,MAAiB,SAAVtJ,EAAmB,QAAU,OACpCuJ,KAAM,CACJC,KAAM,KAGVnH,KAAM,CACJiH,MAAO,WAMTV,EAAgB,SAAC9G,GACrB,IAAM8H,EAAU,GACVC,EAAa,GAEnB/H,EAAKsE,SAAQ,SAACC,GACZwD,EAAW7I,KAAK0G,SAASrB,EAAInF,SAE7BmF,EAAIyD,QAAQ1D,SAAQ,SAAC1F,GACdkJ,EAAQlJ,EAAOI,YAClB8I,EAAQlJ,EAAOI,UAAY,IAG7B8I,EAAQlJ,EAAOI,UAAUE,KAAKN,EAAOO,gBAOzC,IAHA,IAAMqH,EAAW,GACbrH,EAAW,EAEf,MAA2BwF,OAAOsD,QAAQH,GAA1C,eAAoD,CAA/C,0BACGrB,EAAO,CACXyB,MAFC,KAGDzB,KAHC,KAID0B,MAAM,EACNC,gBAAiB/B,EAAWlH,GAC5BkJ,YAAahC,EAAWlH,IAG1BqH,EAAStH,KAAKuH,GACdtH,IAGFuH,EAAQ,CAAEH,OAAQwB,EAAYvB,SAAUA,IACxCI,GAAe,IAGjB,OACE,mCACGD,EAAc,KACb,qCACE,cAACtH,EAAA,EAAD,CAAKf,UAAU,cAAf,SACE,iEAEF,cAAC,IAAD,CAAYgK,SAAU,KAAtB,SACE,cAAC,IAAD,CAAM7B,KAAMA,EAAM/G,OAAQ,IAAK6I,MAAO,IAAKtB,QAASA,MAEtD,cAAC,IAAD,CAAYuB,SAAU,KAAtB,SACE,cAAC,IAAD,CACE/B,KAAMA,EACN/G,OAAQ,IACR6I,MAAO,IACPtB,QAASY,YC/ERY,EAvDG,SAAC,GAAsD,IAApDxH,EAAmD,EAAnDA,SAAUlD,EAAyC,EAAzCA,mBAAoB0C,EAAqB,EAArBA,eACjD,OACE,8BACE,eAACiI,EAAA,EAAD,CACEC,iBAAiB,OACjBC,GAAG,2BACHtK,UAAU,OAHZ,UAKE,eAACuK,EAAA,EAAD,CAAKC,aAAa,YAAYC,SAAS,OAAOC,MAAM,OAApD,UACE,cAAC,EAAD,CACE/H,SAAUA,EACVC,iBAAkBD,EAAS2C,QAAQmB,SAASC,UAGvB,MAAtBjH,EACC,qBAAKS,MAAO,CAAE8G,UAAW,QAAzB,SACE,cAAC,EAAD,CAAoBvH,mBAAoBA,MAG1C,eAACsB,EAAA,EAAD,CAAKf,UAAU,qCAAf,UACE,sBACA,cAAC7B,EAAA,EAAD,CAAgBC,KAAMuE,EAASvE,KAAMC,KAAMsE,EAAStE,aAKnC,MAAtBoB,GAA8BkD,EAASwD,QAAU,KAChD,cAACoE,EAAA,EAAD,CAAKC,aAAa,YAAYC,SAAS,OAAOC,MAAM,OAApD,SACE,qBAAKxK,MAAO,CAAEyK,UAAW,SAAzB,SACE,cAAC,EAAD,CAASxE,OAAQxD,EAASwD,OAAQuB,MAAO/E,EAAS+E,YAGpD,KAEe,MAAlBvF,EACC,cAACoI,EAAA,EAAD,CACEC,aAAa,YACbC,SAAS,aACTC,MAAM,aAHR,SAKE,cAAC,EAAD,CAAgBvI,eAAgBA,MAEhC,KAEJ,cAACoI,EAAA,EAAD,CAAKC,aAAa,YAAYC,SAAS,UAAUC,MAAM,UAAvD,SACE,cAAC,EAAD,CACE/H,SAAUA,EACVC,iBAAkBD,EAAS2C,QAAQmB,SAASC,kB,QCQzCkE,EA7DI,SAAC,GAAuB,IAArBzE,EAAoB,EAApBA,OAAQuB,EAAY,EAAZA,MAC5B,EAAgClE,mBAAS,MAAzC,mBAAOb,EAAP,KAAiBkI,EAAjB,KACA,EAA4CrH,mBAAS,MAArD,mBAAOrB,EAAP,KAAuB2I,EAAvB,KACA,EAA8CtH,oBAAS,GAAvD,mBAAOuH,EAAP,KAAwBC,EAAxB,KACA,EAA0DxH,oBAAS,GAAnE,mBAAOyH,EAAP,KAA8BC,EAA9B,KAqCA,OAnCAxH,qBAAU,WACR,IAAMyH,EAAa,uCAAG,sBAAA5C,EAAA,sEACdlD,MAAM,6BAAD,OAA8Bc,EAA9B,UACRX,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QAEoDhE,IAAvDgE,EAAOE,OAAOC,UAAUC,MAAMuB,SAASI,GAAS,IAEhDmD,EAAYlF,EAAOE,OAAOC,UAAUC,MAAMuB,SAASI,GAAS,OAP9C,OAWpBsD,GAAmB,GAXC,2CAAH,qDAcbI,EAAmB,uCAAG,sBAAA7C,EAAA,sEACpBlD,MAAM,6BAAD,OACoBc,EADpB,YAC8BuB,EAD9B,qBAGRlC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACoChE,IAArCgE,EAAOE,OAAOC,UAAUC,MAAM,IAChC+E,EACEnF,EAAOE,OAAOC,UAAUC,MAAM,GAAGsF,sBARf,OAa1BH,GAAyB,GAbC,2CAAH,qDAgBzBC,IACAC,MACC,CAACjF,EAAQuB,IAGV,8BACE,cAAC4D,EAAA,EAAD,CAAWC,MAAM,KAAKrL,MAAO,CAAEyK,UAAW,SAA1C,SACGI,GAAmBE,EAAwB,KAAoB,OAAbtI,EACjD,cAAC,IAAD,CAAU6I,GAAG,WAEb,8BACE,cAAC,EAAD,CACErF,OAAQA,EACRuB,MAAOA,EACP/E,SAAUA,EACVR,eAAgBA,WCcfsJ,EAhEF,SAAC,GAAuB,IAArBtF,EAAoB,EAApBA,OAAQuB,EAAY,EAAZA,MACtB,EAAgClE,mBAAS,MAAzC,mBAAOb,EAAP,KAAiBkI,EAAjB,KACA,EAAoDrH,mBAAS,MAA7D,mBAAO/D,EAAP,KAA2BiM,EAA3B,KACA,EAA4ClI,mBAAS,MAArD,mBAAOrB,EAAP,KAAuB2I,EAAvB,KACA,EAAkDtH,oBAAS,GAA3D,mBAAOmI,EAAP,KAA0BC,EAA1B,KACA,EAA0DpI,oBAAS,GAAnE,mBAAOyH,EAAP,KAA8BC,EAA9B,KAoCA,OAlCAxH,qBAAU,WACR,IAAMmI,EAAe,uCAAG,sBAAAtD,EAAA,sEAChBlD,MAAM,6BAAD,OAA8Bc,EAA9B,YAAwCuB,EAAxC,kBACRlC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACoChE,IAArCgE,EAAOE,OAAOC,UAAUC,MAAM,KAChC8E,EAAYlF,EAAOE,OAAOC,UAAUC,MAAM,IAC1C2F,EAAsB/F,EAAOE,OAAOC,UAAUC,MAAM,GAAGG,aANvC,OAUtB0F,GAAqB,GAVC,2CAAH,qDAafR,EAAmB,uCAAG,sBAAA7C,EAAA,sEACpBlD,MAAM,6BAAD,OACoBc,EADpB,YAC8BuB,EAD9B,qBAGRlC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,QACoChE,IAArCgE,EAAOE,OAAOC,UAAUC,MAAM,IAChC+E,EACEnF,EAAOE,OAAOC,UAAUC,MAAM,GAAGsF,sBARf,OAa1BH,GAAyB,GAbC,2CAAH,qDAgBzBW,IACAT,MACC,CAACjF,EAAQuB,IAGV,8BACE,cAAC4D,EAAA,EAAD,CAAWC,MAAM,KAAjB,SACGI,GAAqBV,EACpB,cAACK,EAAA,EAAD,CAAWpL,MAAO,CAAE8G,UAAW,KAAM2D,UAAW,SAAhD,SACE,cAAC5J,EAAA,EAAD,CAAKf,UAAU,qCAAf,SACE,cAAC8L,EAAA,EAAD,CAASC,UAAU,eAGC,MAAtBtM,EACF,cAAC,EAAD,CAAY0G,OAAQA,EAAQuB,MAAOA,IAEnC,cAAC,EAAD,CACE/E,SAAUA,EACVlD,mBAAoBA,EACpB0C,eAAgBA,SC5Cb6J,UAbI,WACjB,IAAQ7F,EAAW8F,cAAX9F,OACAuB,EAAUuE,cAAVvE,MAER,OACE,qCACE,cAAC,IAAD,IACA,cAAC,EAAD,CAAMvB,OAAQA,EAAQuB,MAAOA,IAC7B,cAACwE,EAAA,EAAD,S,gCCdN,kCAAO,IAAM/I,EAA2B,CACtCgJ,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,WAAY,KACZC,OAAQ,KACRC,OAAQ,KACRC,SAAU,KACVC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,SAAU,KACVC,KAAM,KACN,gBAAiB,KACjB,cAAe,KACfC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,QAAS,KACTC,QAAS,KACT,gBAAiB,KACjBC,OAAQ,KACRC,gBAAiB,KACjB,YAAa,KACbC,MAAO,KACPC,QAAS,KACTC,WAAY,KACZC,UAAW,KACXC,MAAO,KACPC,SAAU,KACVC,OAAQ,KACRC,OAAQ,KACRC,WAAY,KACZC,UAAW,KACXC,OAAQ,KACRC,MAAO,KACPC,UAAW,KACXC,IAAK,KACLC,UAAW,KACXC,QAAS,KACTC,WAAY,KACZC,QAAS,KACTC,OAAQ,KACRC,OAAQ,KACRC,MAAO,KACPC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPC,MAAO,KACPC,MAAO,KACPC,SAAU,KACVC,UAAW,KACXC,OAAQ,KACRC,OAAQ,KACRC,QAAS,KACTC,YAAa,KACbC,SAAU,KACV,eAAgB,KAChBC,UAAW,KACX,eAAgB,KAChBC,MAAO,KACPC,OAAQ,KACRC,YAAa,KACbC,OAAQ,KACRC,GAAI,KACJC,IAAK,KACLC,MAAO,O,8DC1EIC,EAAa,CACxBC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,QAAS,UACTC,aAAc,UACdC,WAAY,UACZC,OAAQ,UACRC,QAAS,UACTC,KAAM,UACNC,KAAM,UACNC,QAAS,UACTC,aAAc,UACdC,WAAY,UACZC,YAAa,UACbC,OAAQ,UACRC,MAAO,UACPC,SAAU,UACVC,SAAU,UACVC,SAAU,W,OCAGzQ,IAhBG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAqC,IAAtBE,cAAsB,MAAb,OAAa,EACxD,OACE,qBACElB,MAAO,CACL+J,MAAO,MACP7I,OAAQA,EACR7B,QAAS,QACTF,OAAQ,SACRyK,gBAAiByG,EAAWnO,eAAelB,GACvCqP,EAAWrP,GACX,e,gCCbZ,iGAgEeyQ,IApDA,WACb,MAA4B9R,qBAAWC,KAA/BF,EAAR,EAAQA,MAAOgS,EAAf,EAAeA,SAYf,OAJAlO,qBAAU,WACRmO,aAAaC,QAAQ,QAASlS,KAC7B,CAACA,IAGF,cAAC,IAAD,CAAQI,UAAU,SAAS+R,GAAG,OAAO3R,QAAQ,OAA7C,SACE,eAAC,IAAD,CAAWF,MAAO,CAAEyK,UAAW,QAA/B,UACE,cAAC,IAAD,CAAMa,GAAG,IAAItL,MAAO,CAAE8R,eAAgB,QAAtC,SACE,cAAC,IAAOC,MAAR,CAAcjS,UAAU,YAAxB,SACE,cAAC,IAAD,CAAiBoJ,KAAM,SAI3B,cAAC,IAAD,CAAMoC,GAAG,YAAYtL,MAAO,CAAE8R,eAAgB,QAA9C,SACE,cAAC,IAAOC,MAAR,CAAcjS,UAAU,YAAxB,qBAEF,cAAC,IAAD,CAAMwL,GAAG,aAAatL,MAAO,CAAE8R,eAAgB,QAA/C,SACE,cAAC,IAAOC,MAAR,CAAcjS,UAAU,YAAxB,yBAEF,cAAC,IAAOkS,SAAR,CAAiBlS,UAAU,sBAA3B,SACE,eAAC,IAAD,CAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CAAKE,MAAO,CAAE8G,UAAW,QAAzB,SACE,cAAC,IAAD,CACEmL,SAAU,kBA7BH,WACnB,IAAMC,EAAmB,UAAVxS,EAAoB,OAAS,QAC5CgS,EAASQ,GACTP,aAAaC,QAAQ,QAASM,GA0BFC,IAChBC,QAAmB,SAAV1S,EACTwJ,KAAM,OAGV,cAAC,IAAD,UACE,cAAC,IAAO6I,MAAR,CAAcjS,UAAU,YACtB6C,KAAK,4BACL,aAAW,SAFb,SAIE,cAAC,IAAD,CAAcuG,KAAM,qB,qDCtDpC,sFAuHe8C,IAvGA,WACb,OACE,iCACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKlM,UAAU,qCAAqChB,GAAG,OAAOsL,GAAG,MAAjE,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAiBlB,KAAM,OAEzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAUA,KAAM,OAElB,cAAC,IAAD,UACE,cAAC,IAAD,CAASA,KAAM,OAEjB,cAAC,IAAD,UACE,cAAC,IAAD,CAAkBA,KAAM,OAE1B,cAAC,IAAD,UACE,cAAC,IAAD,CAASA,KAAM,OAEjB,cAAC,IAAD,UACE,cAAC,IAAD,CAAWA,KAAM,OAEnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAaA,KAAM,OAErB,cAAC,IAAD,UACE,cAAC,IAAD,CAAWA,KAAM,OAEnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAWA,KAAM,OAEnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAoBA,KAAM,UAG9B,cAAC,IAAD,CAAKpJ,UAAU,4BAA4BhB,GAAG,OAAOsL,GAAG,YACxD,cAAC,IAAD,CAAKtK,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,SACE,yCAGJ,cAAC,IAAD,CAAK5G,UAAU,4BAAf,SACE,eAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,gDACsC,IACpC,mBAAG/D,KAAK,yBAAyB3C,MAAO,CAAEgJ,MAAO,SAAjD,wBAFF,SAQF,cAAC,IAAD,CAAKlJ,UAAU,4BAAf,SACE,eAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,yEAC+D,IAC7D,mBACE/D,KAAK,qCACL3C,MAAO,CAAEgJ,MAAO,SAFlB,2BAFF,SAWF,uBACA,cAAC,IAAD,CAAKlJ,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,SACE,gDAGJ,cAAC,IAAD,CAAK5G,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,sFAKF,cAAC,IAAD,CAAK5G,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,6FAKF,cAAC,IAAD,CAAK5G,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKqB,GAAG,OAAOnB,MAAO,CAAE0G,UAAW,UAAnC,oHAKF,uBACA,cAAC,IAAD,CAAK5G,UAAU,4BAAf,SACE,cAAC,IAAD,CAAKqB,GAAI,EAAT,SACE,mBAAGnB,MAAO,CAAE0G,UAAW,UAAvB,6P,qDC1GL,SAAS3D,EAAiB7E,EAAMC,GACrC,IAAMkU,EAAW,IAAIjU,KAAKF,EAAO,IAAMC,GAKvC,OAJekU,EAASC,WAAa,GAAK,IAAM,IAAMD,EAASC,WAIhD,MAFZD,EAASE,aAAe,GAAK,IAAM,IAAMF,EAASE,cAKhD,SAASzP,EAAY0P,GAC1B,IAAMtU,EAAOsU,EAAcjU,MAAM,KAEjC,MAAM,GAAN,OAAUL,EAAK,GAAf,YAAqBA,EAAK,GAA1B,YAAgCA,EAAK,IAZvC","file":"static/js/8.48f92706.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Countdown from \"react-countdown\";\n\nconst ClockCountdown = ({ date, time }) => {\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      return (\n        <Col>\n          <h1>RACE IN PROGRESS</h1>\n          <h5>WAITING FOR RACE RESULTS</h5>\n        </Col>\n      );\n    } else {\n      return (\n        <>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{days}</h1>\n            <h5>DAYS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{hours}</h1>\n            <h5>HRS</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{minutes}</h1>\n            <h5>MIN</h5>\n          </Col>\n          <Col xs={3} sm={2} lg={1}>\n            <h1>{seconds}</h1>\n            <h5>SEC</h5>\n          </Col>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Countdown\n      date={\n        Date.now() +\n        (new Date(date).getTime() +\n          time.split(\":\")[0] * 3600000 -\n          new Date().getTime())\n      }\n      renderer={renderer}\n    />\n  );\n};\n\nexport default ClockCountdown;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { FaStopwatch } from \"react-icons/fa\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\nconst RaceClassification = ({ raceClassification }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div>\n      <Table\n        className=\"table-hover table-striped standings-table\"\n        responsive=\"sm\"\n        style={{ overflow: \"hidden\" }}\n        variant={theme}\n      >\n        <thead>\n          <tr>\n            <th>POS</th>\n            <th className=\"hideXS\">NUMBER</th>\n            <th>DRIVER</th>\n            <th className=\"hideXS\">TEAM</th>\n            <th className=\"hideXS\">LAPS</th>\n            <th>TIME/RETIRED</th>\n            <th>PTS</th>\n            <th className=\"hideXS\">+/-</th>\n          </tr>\n        </thead>\n        <tbody>\n          {raceClassification.map((driver, index) => (\n            <tr\n              key={index}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.number}</td>\n              <td>\n                <Row className=\"g-2\">\n                  <Col xs={1} className=\"showXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                      height=\"45px\"\n                    />\n                  </Col>\n                  <Col xs={1} className=\"hideXS\">\n                    <TeamColor\n                      constructorId={driver.Constructor.constructorId}\n                    />\n                  </Col>\n                  <Col xs={6} md={10}>\n                    {driver.Driver.givenName}{\" \"}\n                    <p style={boldFont}>\n                      {driver.Driver.familyName.toUpperCase()}\n                    </p>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\n              <td className=\"hideXS\">{driver.laps}</td>\n              <td>\n                {driver.Time !== undefined\n                  ? driver.status === \"Finished\"\n                    ? driver.Time.time\n                    : driver.status\n                  : driver.status}\n              </td>\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\n                <td>\n                  <Row>\n                    <Col xs={2}>{driver.points}</Col>\n                    <Col>\n                      <FaStopwatch />\n                    </Col>\n                  </Row>\n                </td>\n              ) : (\n                <td>{driver.points}</td>\n              )}\n              <td className=\"hideXS\">\n                {driver.grid === \"0\"\n                  ? 20 - driver.position\n                  : driver.grid - driver.position}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <p>\n        <FaStopwatch /> - Fastest lap of the race\n      </p>\n    </div>\n  );\n};\n\nexport default RaceClassification;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"../../SharedStyles/Table.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst RaceQualifying = ({ raceQualifying }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <Table\n      responsive=\"sm\"\n      className=\"table-hover table-striped standings-table\"\n      variant={theme}\n    >\n      <thead>\n        <tr>\n          <th>POS</th>\n          <th className=\"hideXS\">NUMBER</th>\n          <th>DRIVER</th>\n          <th className=\"hideXS\">TEAM</th>\n          <th>Q1</th>\n          <th>Q2</th>\n          <th>Q3</th>\n        </tr>\n      </thead>\n      <tbody>\n        {raceQualifying.map((driver, index) => (\n          <tr\n            key={index}\n            style={{ cursor: \"pointer\" }}\n            onClick={() => rowClick(driver.Driver.driverId)}\n          >\n            <td>{driver.position}</td>\n            <td className=\"hideXS\">{driver.number}</td>\n            <td className=\"hideXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col>\n                  {driver.Driver.givenName}{\" \"}\n                  <p style={boldFont}>\n                    {driver.Driver.familyName.toUpperCase()}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"showXS\">\n              <Row className=\"g-2\">\n                <Col xs={1}>\n                  <TeamColor constructorId={driver.Constructor.constructorId} />\n                </Col>\n                <Col xs={6}>\n                  <p style={boldFont}>\n                    {!driver.Driver.hasOwnProperty(\"code\")\n                      ? driver.Driver.familyName.substring(0, 3).toUpperCase()\n                      : driver.Driver.code}\n                  </p>\n                </Col>\n              </Row>\n            </td>\n            <td className=\"hideXS\">{driver.Constructor.name}</td>\n            <td>\n              {driver.hasOwnProperty(\"Q1\")\n                ? driver.Q1 === \"\"\n                  ? \"-\"\n                  : driver.Q1\n                : \"-\"}\n            </td>\n            <td>{driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}</td>\n            <td>{driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default RaceQualifying;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { convertDate, getLocalRaceDate } from \"../../../helpers/Helpers\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\n\nconst RaceTab = ({ raceInfo, eventCountryCode }) => {\n  return (\n    <div>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <a className=\"race-link\" href={raceInfo.url}>\n            <h1>{raceInfo.raceName.toUpperCase()}</h1>\n          </a>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>{convertDate(raceInfo.date)}</h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <h3>\n            {raceInfo.hasOwnProperty(\"time\")\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\n              : null}\n          </h3>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-center text-center\">\n        <Col md=\"auto\">\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              eventCountryCode\n            ].toLowerCase()}\n            height=\"100\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RaceTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Map.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst Map = ({ coordinates, circuitName }) => {\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    if (map) {\n      setInterval(function () {\n        map.invalidateSize();\n      }, 100);\n    }\n  }, [map]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={14}\n      scrollWheelZoom={true}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={coordinates}>\n        <Popup>\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Map from \"../../Map/Map\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport Table from \"react-bootstrap/Table\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\nimport { useHistory } from \"react-router-dom\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst CircuitTab = ({ raceInfo, eventCountryCode }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n  const [fastestLap, setFastestLap] = useState(null);\n  const [firstGrandPrix, setFirstGrandPrix] = useState(null);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [circuitInformation, setCircuitInformation] = useState(null);\n  const [loadingWikiData, setLoadingWikiData] = useState(true);\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\n  const [loadingFirstGrandPrix, setLoadingFirstGrandPrix] = useState(true);\n\n  const driverRowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  const constructorRowClick = (wikiConstructorLink) => {\n    window.open(wikiConstructorLink, \"_blank\");\n  };\n\n  useEffect(() => {\n    const fetchCircuitFastestLap = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          let bestLap = result.MRData.RaceTable.Races[0];\n\n          result.MRData.RaceTable.Races.forEach((lap) => {\n            if (\n              lap.Results[0].FastestLap.Time.time <\n              bestLap.Results[0].FastestLap.Time.time\n            ) {\n              bestLap = lap;\n            }\n          });\n\n          setFastestLap(bestLap);\n          setLoadingFastestLap(false);\n        });\n    };\n\n    const fetchCircuitFirstGP = () => {\n      fetch(\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setFirstGrandPrix(result.MRData.RaceTable.Races[0].season);\n          setLoadingFirstGrandPrix(false);\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${raceInfo.Circuit.circuitName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setCircuitInformation(result.query.pages);\n          setLoadingWikiData(false);\n        });\n    };\n\n    fetchCircuitFastestLap();\n    fetchCircuitFirstGP();\n  }, [raceInfo.Circuit.circuitId, raceInfo.Circuit.circuitName]);\n\n  const calculateCircuitLength = (speed, time) => {\n    const timeSplitted = time.split(\":\");\n    const secondsSplitted = time.split(\".\");\n    const timeInSeconds =\n      parseInt(timeSplitted[0] * 60) +\n      parseInt(timeSplitted[1]) +\n      parseFloat(secondsSplitted[1] / 1000);\n    const metersPerSecond = (parseFloat(speed) * 1000) / 3600;\n\n    const length = (metersPerSecond * timeInSeconds) / 1000;\n\n    return Math.round(length * 1000) / 1000;\n  };\n\n  return (\n    <div>\n      <Row className=\"text-center\">\n        <h1>{raceInfo.Circuit.circuitName}</h1>\n        <h3>\n          <CircleFlag\n            countryCode={CountriesCodeNationality[\n              eventCountryCode\n            ].toLowerCase()}\n            height=\"30\"\n          />{\" \"}\n          {raceInfo.Circuit.Location.country}\n        </h3>\n        <h3>{raceInfo.Circuit.Location.locality}</h3>\n      </Row>\n\n      {loadingWikiData ? null : (\n        <Row>\n          <p style={{ textAlign: \"justify\" }}>\n            {circuitInformation[wikiPageId][\"extract\"]} (Source:{\" \"}\n            <a\n              href={`https://en.wikipedia.org/wiki/${circuitInformation[wikiPageId][\"title\"]}`}\n            >\n              Wikipedia\n            </a>\n            )\n          </p>\n        </Row>\n      )}\n\n      <Map\n        coordinates={[\n          raceInfo.Circuit.Location.lat,\n          raceInfo.Circuit.Location.long,\n        ]}\n        circuitName={raceInfo.Circuit.circuitName}\n        mapHeight={{ height: \"700px\" }}\n      />\n\n      {loadingFastestLap || loadingFirstGrandPrix ? null : (\n        <Table\n          responsive\n          className=\"standings-table table-striped table-hover\"\n          variant={theme}\n          style={{ marginTop: \"15px\" }}\n        >\n          <tbody>\n            <tr>\n              <td className=\"row-stats\">First grand prix</td>\n              <td className=\"text-end row-stats\">{firstGrandPrix}</td>\n            </tr>\n            {fastestLap === undefined ? null : (\n              <>\n                <tr>\n                  <td className=\"row-stats\">Lap record (All track layouts)</td>\n                  <td className=\"text-end row-stats\">\n                    {fastestLap.Results[0].FastestLap.Time.time} (\n                    {fastestLap.season})\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"row-stats\">Average speed</td>\n                  <td className=\"text-end row-stats\">\n                    {fastestLap.Results[0].FastestLap.AverageSpeed.speed} km/h\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"row-stats\">Length</td>\n                  <td className=\"text-end row-stats\">\n                    ~{\" \"}\n                    {calculateCircuitLength(\n                      parseFloat(\n                        fastestLap.Results[0].FastestLap.AverageSpeed.speed\n                      ),\n                      fastestLap.Results[0].FastestLap.Time.time\n                    )}{\" \"}\n                    km\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"row-stats\">Driver</td>\n                  <td\n                    className=\"clickable-row text-end\"\n                    onClick={() =>\n                      driverRowClick(fastestLap.Results[0].Driver.driverId)\n                    }\n                  >\n                    {fastestLap.Results[0].Driver.givenName}{\" \"}\n                    <p style={boldFont}>\n                      {fastestLap.Results[0].Driver.familyName.toUpperCase()}\n                    </p>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"row-stats\">Team</td>\n                  <td\n                    className=\"clickable-row text-end\"\n                    onClick={() =>\n                      constructorRowClick(fastestLap.Results[0].Constructor.url)\n                    }\n                  >\n                    <Row className=\"justify-content-end text-end\">\n                      <Col xs=\"auto\">\n                        <TeamColor\n                          constructorId={\n                            fastestLap.Results[0].Constructor.constructorId\n                          }\n                          height=\"35px\"\n                        />\n                      </Col>\n                      <Col xs=\"auto\">\n                        {fastestLap.Results[0].Constructor.name}\n                      </Col>\n                    </Row>\n                  </td>\n                </tr>\n              </>\n            )}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default CircuitTab;\n","export const LineColors = {\n  1: \"rgb(128,0,0)\",\n  2: \"rgb(255,215,0)\",\n  3: \"rgb(255,0,0)\",\n  4: \"rgb(255,140,0)\",\n  5: \"rgb(0,100,0)\",\n  6: \"rgb(100,149,237)\",\n  7: \"rgb(0,191,255)\",\n  8: \"rgb(30,144,255)\",\n  9: \"rgb(0,0,255)\",\n  10: \"rgb(138,43,226)\",\n  11: \"rgb(147,112,219)\",\n  12: \"rgb(148,0,211)\",\n  13: \"rgb(255,0,255)\",\n  14: \"rgb(255,20,147)\",\n  15: \"rgb(139,69,19)\",\n  16: \"rgb(210,105,30)\",\n  17: \"rgb(244,164,96)\",\n  18: \"rgb(112,128,144)\",\n  19: \"rgb(176,196,222)\",\n  20: \"rgb(255,99,71)\",\n  21: \"rgb(250,128,114)\",\n  22: \"rgb(184,134,11)\",\n  23: \"rgb(154,205,50)\",\n  24: \"rgb(50,205,50)\",\n  25: \"rgb(75,0,130)\",\n  26: \"rgb(210,180,140)\",\n  27: \"rgb(128,128,128)\",\n  28: \"rgb(34,139,34)\",\n  29: \"rgb(127,255,0)\",\n  30: \"rgb(240,230,140)\",\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { LineColors } from \"../../../data/LineColors\";\nimport MediaQuery from \"react-responsive\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\nimport Row from \"react-bootstrap/Row\";\n\nconst LapsTab = ({ season, round }) => {\n  const { theme } = useContext(ThemeContext);\n  const [data, setData] = useState({ labels: null, datasets: null });\n  const [loadingLaps, setLoadingLaps] = useState(true);\n\n  useEffect(() => {\n    const fetchLaps = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/laps.json?limit=2000`\n      )\n        .then((res) => res.json())\n        .then((result) => lapsPerDriver(result.MRData.RaceTable.Races[0].Laps));\n    };\n\n    fetchLaps();\n  }, [season, round]);\n\n  const options = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n    },\n    scales: {\n      y: {\n        reverse: true,\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 20,\n          },\n          stepSize: 1,\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n      x: {\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 20,\n          },\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n    },\n  };\n\n  const optionsMobile = {\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n      },\n    },\n    scales: {\n      y: {\n        reverse: true,\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 10,\n          },\n          stepSize: 1,\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n      x: {\n        ticks: {\n          color: theme === \"dark\" ? \"white\" : \"dark\",\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          color: \"#777\",\n        },\n      },\n    },\n  };\n\n  const lapsPerDriver = (laps) => {\n    const lapsObj = {};\n    const lapsNumber = [];\n\n    laps.forEach((lap) => {\n      lapsNumber.push(parseInt(lap.number));\n\n      lap.Timings.forEach((driver) => {\n        if (!lapsObj[driver.driverId]) {\n          lapsObj[driver.driverId] = [];\n        }\n\n        lapsObj[driver.driverId].push(driver.position);\n      });\n    });\n\n    const datasets = [];\n    var position = 1;\n\n    for (const [key, value] of Object.entries(lapsObj)) {\n      const data = {\n        label: key,\n        data: value,\n        fill: false,\n        backgroundColor: LineColors[position],\n        borderColor: LineColors[position],\n      };\n\n      datasets.push(data);\n      position++;\n    }\n\n    setData({ labels: lapsNumber, datasets: datasets });\n    setLoadingLaps(false);\n  };\n\n  return (\n    <>\n      {loadingLaps ? null : (\n        <>\n          <Row className=\"text-center\">\n            <h1>Driver position by lap number</h1>\n          </Row>\n          <MediaQuery minWidth={1224}>\n            <Line data={data} height={325} width={500} options={options} />\n          </MediaQuery>\n          <MediaQuery maxWidth={1224}>\n            <Line\n              data={data}\n              height={850}\n              width={500}\n              options={optionsMobile}\n            />\n          </MediaQuery>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LapsTab;\n","import React from \"react\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport RaceClassification from \"../Classifications/RaceClassification\";\nimport RaceQualifying from \"../Classifications/RaceQualifying\";\nimport RaceTab from \"./RaceTab\";\nimport CircuitTab from \"./CircuitTab\";\nimport Row from \"react-bootstrap/Row\";\nimport ClockCountdown from \"../../Countdown/ClockCountdown\";\nimport LapsTab from \"./LapsTab\";\n\nconst EventTabs = ({ raceInfo, raceClassification, raceQualifying }) => {\n  return (\n    <div>\n      <Tabs\n        defaultActiveKey=\"race\"\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        <Tab tabClassName=\"tab-style\" eventKey=\"race\" title=\"RACE\">\n          <RaceTab\n            raceInfo={raceInfo}\n            eventCountryCode={raceInfo.Circuit.Location.country}\n          />\n\n          {raceClassification != null ? (\n            <div style={{ marginTop: \"20px\" }}>\n              <RaceClassification raceClassification={raceClassification} />\n            </div>\n          ) : (\n            <Row className=\"justify-content-center text-center\">\n              <p></p>\n              <ClockCountdown date={raceInfo.date} time={raceInfo.time} />\n            </Row>\n          )}\n        </Tab>\n\n        {raceClassification != null && raceInfo.season >= 1996 ? (\n          <Tab tabClassName=\"tab-style\" eventKey=\"laps\" title=\"LAPS\">\n            <div style={{ minHeight: \"300px\" }}>\n              <LapsTab season={raceInfo.season} round={raceInfo.round} />\n            </div>\n          </Tab>\n        ) : null}\n\n        {raceQualifying != null ? (\n          <Tab\n            tabClassName=\"tab-style\"\n            eventKey=\"qualifying\"\n            title=\"QUALIFYING\"\n          >\n            <RaceQualifying raceQualifying={raceQualifying} />\n          </Tab>\n        ) : null}\n\n        <Tab tabClassName=\"tab-style\" eventKey=\"circuit\" title=\"CIRCUIT\">\n          <CircuitTab\n            raceInfo={raceInfo}\n            eventCountryCode={raceInfo.Circuit.Location.country}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EventTabs;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport { Redirect } from \"react-router-dom\";\n\nconst FutureRace = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceInfo = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\n          ) {\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\n          }\n        });\n\n      setLoadingRaceInfo(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceInfo();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\" style={{ minHeight: \"500px\" }}>\n        {loadingRaceInfo || loadingRaceQualifying ? null : raceInfo === null ? (\n          <Redirect to=\"/error\" />\n        ) : (\n          <div>\n            <EventTabs\n              season={season}\n              round={round}\n              raceInfo={raceInfo}\n              raceQualifying={raceQualifying}\n            />\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default FutureRace;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport EventTabs from \"./EventTabs\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport FutureRace from \"./FutureRace\";\n\nconst Race = ({ season, round }) => {\n  const [raceInfo, setRaceInfo] = useState(null);\n  const [raceClassification, setRaceClassification] = useState(null);\n  const [raceQualifying, setRaceQualifying] = useState(null);\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\n  const [loadingRaceQualifying, setLoadingRaceQualifying] = useState(true);\n\n  useEffect(() => {\n    const fetchRaceResult = async () => {\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\n          }\n        });\n\n      setLoadingRaceResult(false);\n    };\n\n    const fetchRaceQualifying = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\n            setRaceQualifying(\n              result.MRData.RaceTable.Races[0].QualifyingResults\n            );\n          }\n        });\n\n      setLoadingRaceQualifying(false);\n    };\n\n    fetchRaceResult();\n    fetchRaceQualifying();\n  }, [season, round]);\n\n  return (\n    <div>\n      <Container fluid=\"md\">\n        {loadingRaceResult || loadingRaceQualifying ? (\n          <Container style={{ marginTop: \"5%\", minHeight: \"500px\" }}>\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          </Container>\n        ) : raceClassification == null ? (\n          <FutureRace season={season} round={round} />\n        ) : (\n          <EventTabs\n            raceInfo={raceInfo}\n            raceClassification={raceClassification}\n            raceQualifying={raceQualifying}\n          />\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default Race;\n","import React from \"react\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport Race from \"../components/Stats/RaceData/Race\";\nimport { useParams } from \"react-router-dom\";\n\nconst RaceResult = () => {\n  const { season } = useParams();\n  const { round } = useParams();\n\n  return (\n    <>\n      <NavBar />\n      <Race season={season} round={round} />\n      <Footer />\n    </>\n  );\n};\n\nexport default RaceResult;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Malaysian: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n  Qatar: \"QA\"\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n            <Col>\n              <Navbar.Brand className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export function getLocalRaceDate(date, time) {\n  const raceDate = new Date(date + \"T\" + time);\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\n  const minutes =\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\n\n  return hours + \":\" + minutes;\n}\n\nexport function convertDate(dateToConvert) {\n  const date = dateToConvert.split(\"-\");\n\n  return `${date[2]}/${date[1]}/${date[0]}`;\n}\n"],"sourceRoot":""}