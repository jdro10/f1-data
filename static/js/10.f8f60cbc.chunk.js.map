{"version":3,"sources":["components/Stats/Standings/DriversStandings.js","components/Stats/Standings/ConstructorsStandings.js","components/Stats/Standings/Standings.js","pages/StandingsPage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","components/Navbar/Navbar.js","components/Footer/Footer.js"],"names":["boldFont","fontWeight","margin","padding","display","DriversStandings","style","driversStandings","history","useHistory","theme","useContext","ThemeContext","className","responsive","variant","map","driver","index","cursor","onClick","driverId","Driver","push","position","permanentNumber","xs","lg","countryCode","undefined","CountriesCodeNationality","nationality","toLowerCase","height","constructorId","Constructors","familyName","toUpperCase","givenName","fontSize","name","wins","points","ConstructorsStandings","constructorsStandings","constructor","wikiConstructorLink","Constructor","url","window","open","md","Standings","useState","sessionStorage","getItem","season","setSeason","seasonsYearsList","setSeasonsYearsList","setDriversStandings","setConstructorsStandings","loadingDriversStandings","setLoadingDriversStandings","loadingConstructorsStandings","setLoadingConstructorsStandings","useEffect","start","end","fetchConstructorsStandings","a","fetch","then","res","json","result","MRData","StandingsTable","StandingsLists","ConstructorStandings","fetchDriversStandings","DriverStandings","Date","getFullYear","Array","fill","_","i","reverse","Container","minHeight","Row","Spinner","animation","Col","marginBottom","Dropdown","Toggle","id","Menu","maxHeight","overflowY","Item","e","text","target","textContent","setItem","StandingsPage","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","TeamColor","width","backgroundColor","hasOwnProperty","NavBar","setTheme","localStorage","bg","to","textDecoration","Brand","size","Collapse","marginTop","onChange","toggle","themeToggler","checked","href","textAlign","color"],"mappings":"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","file":"static/js/10.f8f60cbc.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { useHistory } from \"react-router-dom\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  const history = useHistory();\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (driverId) => {\n    history.push(`/driver/${driverId}`);\n  };\n\n  return (\n    <div style={style}>\n      <Table\n        className=\"table-hover table-striped standings-table\"\n        responsive=\"xs\"\n        variant={theme}\n      >\n        <thead>\n          <tr>\n            <th>POS</th>\n            <th className=\"hideXS\">NO</th>\n            <th>NAME/TEAM</th>\n            <th className=\"hideXS\">WINS</th>\n            <th>POINTS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr\n              key={index}\n              className=\"align-middle\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => rowClick(driver.Driver.driverId)}\n            >\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\n              <td>\n                <Row className=\"g-0\">\n                  <Col xs={2} lg={1} className=\"align-self-center\">\n                    <CircleFlag\n                      countryCode={\n                        CountriesCodeNationality[\n                          driver.Driver.nationality\n                        ] !== undefined\n                          ? CountriesCodeNationality[\n                              driver.Driver.nationality\n                            ].toLowerCase()\n                          : null\n                      }\n                      height={20}\n                    />\n                  </Col>\n                  <Col xs={2} lg={1}>\n                    <TeamColor\n                      constructorId={driver.Constructors[0].constructorId}\n                      height=\"42px\"\n                    />\n                  </Col>\n                  <Col xs={8} className=\"text-start\">\n                    <Row>\n                      <Col className=\"showXS\">\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                      <Col className=\"hideXS\">\n                        {driver.Driver.givenName}{\" \"}\n                        <p style={boldFont}>\n                          {driver.Driver.familyName.toUpperCase()}\n                        </p>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col style={{ fontSize: \"13px\" }}>\n                        {driver.Constructors[0].name}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n","import React, { useContext } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../SharedStyles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\nimport { ThemeContext } from \"../../../helpers/ThemeContext\";\n\nconst boldFont = {\n  fontWeight: 600,\n  margin: \"0px\",\n  padding: \"0px\",\n  display: \"inline\",\n};\n\nconst ConstructorsStandings = ({ style, constructorsStandings }) => {\n  const { theme } = useContext(ThemeContext);\n\n  const rowClick = (wikiConstructorLink) => {\n    window.open(wikiConstructorLink, \"_blank\");\n  };\n\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table\n          className=\"table-hover standings-table table-striped\"\n          responsive=\"sm\"\n          variant={theme}\n        >\n          <thead>\n            <tr>\n              <th>POS</th>\n              <th>NAME</th>\n              <th className=\"hideXS\">WINS</th>\n              <th>POINTS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr\n                key={index}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => rowClick(constructor.Constructor.url)}\n              >\n                <td>{constructor.position}</td>\n                <td>\n                  <Row>\n                    <Col xs={2}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          constructor.Constructor.nationality\n                        ].toLowerCase()}\n                        height={20}\n                      />\n                    </Col>\n                    <Col xs={2} lg={1}>\n                      <TeamColor\n                        constructorId={constructor.Constructor.constructorId}\n                      />\n                    </Col>\n                    <Col xs={8} className=\"text-start\">\n                      <Row>\n                        <p style={boldFont}>\n                          {constructor.Constructor.name.toUpperCase()}\n                        </p>\n                      </Row>\n                    </Col>\n                  </Row>\n                </td>\n                <td className=\"hideXS\">{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n","import React, { useState, useEffect } from \"react\";\nimport ConstructorsStandings from \"./ConstructorsStandings\";\nimport DriversStandings from \"./DriversStandings\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nconst Standings = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\n    sessionStorage.getItem(\"seasonStandingsInput\") !== null\n      ? sessionStorage.getItem(\"seasonStandingsInput\")\n      : \"2021\"\n  );\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n  const [loadingConstructorsStandings, setLoadingConstructorsStandings] =\n    useState(true);\n\n  useEffect(() => {\n    const fetchConstructorsStandings = async () => {\n      setLoadingConstructorsStandings(true);\n      await fetch(\n        `https://ergast.com/api/f1/${season}/constructorStandings.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.StandingsTable.StandingsLists[0] !== undefined) {\n            setConstructorsStandings(\n              result.MRData.StandingsTable.StandingsLists[0]\n                .ConstructorStandings\n            );\n          } else {\n            setConstructorsStandings(null);\n          }\n        });\n\n      setLoadingConstructorsStandings(false);\n    };\n\n    const fetchDriversStandings = async () => {\n      setLoadingDriversStandings(true);\n      await fetch(\n        `https://ergast.com/api/f1/${season}/driverStandings.json?limit=50`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setDriversStandings(\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\n          );\n          setLoadingDriversStandings(false);\n        });\n    };\n\n    const fillArrayBetweenTwoNumbers = (start, end) => {\n      setSeasonsYearsList(\n        Array(end - start + 1)\n          .fill()\n          .map((_, i) => start + i)\n          .reverse()\n      );\n    };\n\n    fetchConstructorsStandings();\n    fetchDriversStandings();\n    fillArrayBetweenTwoNumbers(FIRST_SEASON, new Date().getFullYear());\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n    sessionStorage.setItem(\"seasonStandingsInput\", text);\n  };\n\n  return (\n    <>\n      {loadingConstructorsStandings || loadingDriversStandings ? (\n        <Container style={{ minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <h1>{season} FORMULA 1</h1>\n            <Spinner animation=\"border\" />\n          </Row>\n        </Container>\n      ) : (\n        <Container>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>{season} FORMULA 1</h1>\n            </Col>\n          </Row>\n          <Row\n            className=\"justify-content-center text-center\"\n            style={{ marginBottom: \"2%\" }}\n          >\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle\n                  variant=\"danger\"\n                  className=\"red-btn\"\n                  id=\"dropdown-basic\"\n                >\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  style={{ maxHeight: \"500px\", overflowY: \"scroll\" }}\n                >\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <h2>CONSTRUCTORS' STANDINGS</h2>\n            <ConstructorsStandings\n              constructorsStandings={constructorsStandings}\n            />\n            <h2>DRIVERS' STANDINGS</h2>\n            <DriversStandings driversStandings={driversStandings} />\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Standings;\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Standings from \"../components/Stats/Standings/Standings\";\n\nconst StandingsPage = () => {\n  return (\n    <>\n      <NavBar />\n      <Standings />\n      <Footer />\n    </>\n  );\n};\n\nexport default StandingsPage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysia: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea: \"KR\",\n  Argentina: \"AR\",\n  UAE: \"AE\",\n  Australia: \"AU\",\n  Austria: \"AT\",\n  Azerbaijan: \"AZ\",\n  Bahrain: \"BH\",\n  Brazil: \"BR\",\n  Canada: \"CA\",\n  China: \"CN\",\n  France: \"FR\",\n  Germany: \"DE\",\n  Hungary: \"HU\",\n  India: \"IN\",\n  Italy: \"IT\",\n  Japan: \"JP\",\n  Malyasia: \"MY\",\n  Malaysian: \"MY\",\n  Mexico: \"MX\",\n  Monaco: \"MC\",\n  Morocco: \"MA\",\n  Netherlands: \"NL\",\n  Portugal: \"PT\",\n  \"Saudi Arabia\": \"SA\",\n  Singapore: \"SG\",\n  \"South Africa\": \"ZA\",\n  Spain: \"ES\",\n  Sweden: \"SE\",\n  Switzerland: \"CH\",\n  Turkey: \"TR\",\n  UK: \"GB\",\n  USA: \"US\",\n  Qatar: \"QA\"\n};\n","export const TeamColors = {\n  red_bull: \"#0600EF\",\n  williams: \"#005AFF\",\n  mercedes: \"#00D2BE\",\n  mclaren: \"#FF8700\",\n  aston_martin: \"#006F62\",\n  alphatauri: \"#2B4562\",\n  alpine: \"#0090FF\",\n  ferrari: \"#DC0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#900000\",\n  renault: \"#FFF500\",\n  racing_point: \"#FFC0CB\",\n  toro_rosso: \"#469BFF\",\n  force_india: \"#F596C8\",\n  sauber: \"#9B0000\",\n  manor: \"#323232\",\n  lotus_f1: \"#FFB800\",\n  marussia: \"#6E0000\",\n  caterham: \"#0b361f\",\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        display: \"table\",\n        margin: \"0 auto\",\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import React, { useContext, useEffect } from \"react\";\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport DayNightToggle from \"react-day-and-night-toggle\";\n\nconst NavBar = () => {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  const themeToggler = () => {\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(toggle);\n    localStorage.setItem(\"theme\", toggle);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container style={{ minHeight: \"40px\" }}>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"icon-link\">\n            <GiCheckeredFlag size={30} />\n          </Navbar.Brand>\n        </Link>\n\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Row className=\"g-2\">\n            <Col style={{ marginTop: \"15px\" }}>\n              <DayNightToggle\n                onChange={() => themeToggler()}\n                checked={theme === \"dark\"}\n                size={20}\n              />\n            </Col>\n            <Col>\n              <Navbar.Brand className=\"icon-link\"\n                href=\"https://github.com/jdro10\"\n                aria-label=\"Github\"\n              >\n                <AiFillGithub size={25} />\n              </Navbar.Brand>\n            </Col>\n          </Row>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers' and circuits' information are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/w/api.php\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>DISCLAIMER</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n"],"sourceRoot":""}