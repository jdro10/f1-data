{"version":3,"sources":["helpers/ThemeContext.js","themes/Themes.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["ThemeContext","createContext","lightTheme","body","fontColor","scrollColor","cardColor","darkTheme","GlobalStyles","createGlobalStyle","props","theme","HomePage","lazy","RaceResult","SeasonRaces","ErrorPage","StandingsPage","DriverPage","StyledApp","styled","div","backgroundColor","App","useState","localStorage","getItem","setTheme","fallback","Provider","value","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"yGAAA,6CAEaA,EAAeC,wBAAc,K,2JCA7BC,EAAa,CACxBC,KAAM,UACNC,UAAW,OACXC,YAAa,UACbC,UAAW,WAGAC,EAAY,CACvBJ,KAAM,UACNC,UAAW,OACXC,YAAa,UACbC,UAAW,WAGAE,EAAeC,4BAAH,2nDAEA,SAACC,GAAD,OAAWA,EAAMC,MAAMR,QAQ9B,SAACO,GAAD,OAAWA,EAAMC,MAAMN,eAa5B,SAACK,GAAD,OAAWA,EAAMC,MAAMP,aAIvB,SAACM,GAAD,OAAWA,EAAMC,MAAMP,aASvB,SAACM,GAAD,OAAWA,EAAMC,MAAMP,aAIvB,SAACM,GAAD,OAAWA,EAAMC,MAAMP,aAwBZ,SAACM,GAAD,MACG,YAArBA,EAAMC,MAAMR,KAAqB,UAAY,aAEtC,SAACO,GAAD,MAAiC,YAArBA,EAAMC,MAAMR,KAAqB,OAAS,UAKtD,SAACO,GAAD,OAAWA,EAAMC,MAAMP,aACZ,SAACM,GAAD,MACG,YAArBA,EAAMC,MAAMR,KAAqB,UAAY,UAI3B,SAACO,GAAD,OAAWA,EAAMC,MAAML,aAIvB,SAACI,GAAD,OAAWA,EAAMC,MAAML,aAIvB,SAACI,GAAD,OAAWA,EAAMC,MAAML,aAClC,SAACI,GAAD,OAAWA,EAAMC,MAAMP,aAIZ,SAACM,GAAD,OAAWA,EAAMC,MAAML,aAIvB,SAACI,GAAD,OAAWA,EAAMC,MAAML,a,OCtGzCM,EAAWC,gBAAK,kBAAM,8DACtBC,EAAaD,gBAAK,kBAAM,sEACxBE,EAAcF,gBAAK,kBAAM,+DACzBG,EAAYH,gBAAK,kBAAM,gEACvBI,EAAgBJ,gBAAK,kBAAM,8DAC3BK,EAAaL,gBAAK,kBAAM,uDAExBM,EAAYC,UAAOC,IAAV,qEACJ,SAACX,GAAD,OAAWA,EAAMC,MAAMP,aACZ,SAACM,GAAD,OAAWA,EAAMC,MAAMW,mBAmD9BC,MAhDf,WACE,MAA0BC,mBACU,OAAlCC,aAAaC,QAAQ,SACjBD,aAAaC,QAAQ,SACrB,SAHN,mBAAOf,EAAP,KAAcgB,EAAd,KAMA,OACE,cAAC,WAAD,CAAUC,SAAU,KAApB,SACE,eAAC,gBAAD,CAAejB,MAAiB,UAAVA,EAAoBT,EAAaK,EAAvD,UACE,cAACC,EAAD,IACA,cAACW,EAAD,UACE,cAACnB,EAAA,EAAa6B,SAAd,CAAuBC,MAAO,CAAEnB,QAAOgB,YAAvC,SACE,cAAC,IAAD,CAAQI,SAAS,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWtB,IAExC,cAAC,IAAD,CACEoB,KAAK,uBACLC,OAAO,EACPC,UAAWpB,IAGb,cAAC,IAAD,CACEkB,KAAK,oBACLC,OAAO,EACPC,UAAWhB,IAEb,cAAC,IAAD,CAAOc,KAAK,YAAYC,OAAO,EAAMC,UAAWnB,IAEhD,cAAC,IAAD,CAAOiB,KAAK,SAASC,OAAO,EAAMC,UAAWlB,IAE7C,cAAC,IAAD,CACEgB,KAAK,aACLC,OAAO,EACPC,UAAWjB,IAGb,cAAC,IAAD,CAAOiB,UAAWlB,mBC/CnBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCPRQ,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UACe,UAA7BF,OAAOC,SAASC,UAChBF,OAAOC,SAASC,SAASC,MACvB,4DA8BN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTb,MAAK,SAACkB,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAC1BC,QAAQC,IACN,+GAIEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAGlBO,QAAQC,IAAI,sCAERZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCzDjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SDPnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAEzE,GADkB,IAAIqB,IAAIC,WAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OACvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,WAAN,sBAEP/B,IAoDV,SAAiCO,EAAOC,GACtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5B1C,MAAK,SAAC2C,GACL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAE5ChC,UAAUC,cAAcgC,MAAMhD,MAAK,SAACkB,GAClCA,EAAa+B,aAAajD,MAAK,WAC7BQ,OAAOC,SAASyC,eAIpBtC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAxEAyB,CAAwBtC,EAAOC,GAE/BC,UAAUC,cAAcgC,MAAMhD,MAAK,WACjCyB,QAAQC,IACN,+GAKJd,EAAgBC,EAAOC,OCV/BsC,GAKAvD,M","file":"static/js/main.eca2664e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext({});\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n  body: \"#dee3ed\",\r\n  fontColor: \"#000\",\r\n  scrollColor: \"#FFFFFF\",\r\n  cardColor: \"#f8f9fc\"\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#1d1e20\",\r\n  fontColor: \"#fff\",\r\n  scrollColor: \"#212529\",\r\n  cardColor: \"#111213\"\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background-color : ${(props) => props.theme.body};\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: ${(props) => props.theme.scrollColor};\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n\r\n  .tab-style {\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n\r\n  .tab-style:hover {\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n\r\n  tab-style:active {\r\n      color: black !important;\r\n  }\r\n\r\n  .race-link {\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n\r\n  .race-link:hover{\r\n    color: ${(props) => props.theme.fontColor};\r\n    text-decoration: underline;\r\n    text-decoration-color: #e10600;\r\n    text-decoration-thickness: 3px;\r\n    text-underline-offset: 3px;\r\n    display: block;\r\n  }\r\n\r\n  .red-btn{\r\n    background-color: #e10600;\r\n    border-color: #e10600;\r\n    font-weight: 600;\r\n    border-radius: 15px;\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .red-btn:hover{\r\n    opacity: 0.5;\r\n    background-color: #e10600;\r\n    border-color: #e10600;\r\n  }\r\n\r\n  .nav-pills .nav-link.active, .nav-pills .show > .nav-link {\r\n    color: #F0F8FF;\r\n    background-color: ${(props) =>\r\n      props.theme.body === \"#1d1e20\" ? \"#dee3ed\" : \"#1d1e20\"};\r\n    border-radius: 15px !important;\r\n    color: ${(props) => (props.theme.body === \"#1d1e20\" ? \"#000\" : \"#fff\")};\r\n  }\r\n\r\n  .nav-link, .nav-link:hover, .nav-link:not(:active) {\r\n    border-radius: 15px !important;\r\n    color: ${(props) => props.theme.fontColor};\r\n    background-color: ${(props) =>\r\n      props.theme.body === \"#1d1e20\" ? \"#404040\" : \"#fff\"};\r\n  }\r\n\r\n  .generic-card {\r\n    background-color: ${(props) => props.theme.cardColor} !important;\r\n  }\r\n\r\n  .info-row{\r\n    background-color: ${(props) => props.theme.cardColor} !important;\r\n  }\r\n\r\n  th {\r\n    background-color: ${(props) => props.theme.cardColor} !important;\r\n    color: ${(props) => props.theme.fontColor} !important;\r\n  } \r\n\r\n  thead th {\r\n    background-color: ${(props) => props.theme.cardColor} !important;\r\n  }\r\n\r\n  tbody td {\r\n    background-color: ${(props) => props.theme.cardColor} !important;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { ThemeContext } from \"./helpers/ThemeContext\";\r\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes/Themes\";\r\n\r\nconst HomePage = lazy(() => import(\"./pages/HomePage\"));\r\nconst RaceResult = lazy(() => import(\"./pages/RaceResult\"));\r\nconst SeasonRaces = lazy(() => import(\"./pages/SeasonCalendar\"));\r\nconst ErrorPage = lazy(() => import(\"./pages/ErrorPage\"));\r\nconst StandingsPage = lazy(() => import(\"./pages/StandingsPage\"));\r\nconst DriverPage = lazy(() => import(\"./pages/DriverPage\"));\r\n\r\nconst StyledApp = styled.div`\r\n  color: ${(props) => props.theme.fontColor};\r\n  background-color: ${(props) => props.theme.backgroundColor};\r\n`;\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(\r\n    localStorage.getItem(\"theme\") !== null\r\n      ? localStorage.getItem(\"theme\")\r\n      : \"light\"\r\n  );\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n        <StyledApp>\r\n          <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            <Router basename=\"/\">\r\n              <Switch>\r\n                <Route path=\"/\" exact={true} component={HomePage} />\r\n\r\n                <Route\r\n                  path=\"/race/:season/:round\"\r\n                  exact={true}\r\n                  component={RaceResult}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/driver/:driverId\"\r\n                  exact={true}\r\n                  component={DriverPage}\r\n                />\r\n                <Route path=\"/schedule\" exact={true} component={SeasonRaces} />\r\n\r\n                <Route path=\"/error\" exact={true} component={ErrorPage} />\r\n\r\n                <Route\r\n                  path=\"/standings\"\r\n                  exact={true}\r\n                  component={StandingsPage}\r\n                />\r\n\r\n                <Route component={ErrorPage} />\r\n              </Switch>\r\n            </Router>\r\n          </ThemeContext.Provider>\r\n        </StyledApp>\r\n      </ThemeProvider>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"[::1]\" ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}