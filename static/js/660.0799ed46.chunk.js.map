{"version":3,"file":"static/js/660.0799ed46.chunk.js","mappings":"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","sources":["components/Footer/Footer.js","components/Navbar/Navbar.js","data/TeamColors.js","components/TeamColor/TeamColor.js","data/CountryCodeNationality.js","helpers/Helpers.js","components/Classifications/RaceClassification.js","components/Classifications/QualifyingClassification.js","components/Race/RaceInformation.js","components/Map/Map.js","components/Circuit/CircuitInformation.js","components/Circuit/Circuit.js","data/LineColors.js","components/Laps/Laps.js","components/Race/FutureRaceDetails.js","components/Race/Event.js","components/Race/FutureRace.js","components/Race/Race.js","pages/RaceResult.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { BsBootstrap } from \"react-icons/bs\";\r\nimport { SiVisualstudiocode } from \"react-icons/si\";\r\nimport { IoLogoNpm } from \"react-icons/io\";\r\nimport { FaHtml5 } from \"react-icons/fa\";\r\nimport { FaCss3Alt } from \"react-icons/fa\";\r\nimport { SiLeaflet } from \"react-icons/si\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\r\n          <Col>\r\n            <GiCheckeredFlag size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaGithub size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaReact size={40} />\r\n          </Col>\r\n          <Col>\r\n            <IoLogoJavascript size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaHtml5 size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <FaCss3Alt size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <BsBootstrap size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiLeaflet size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <IoLogoNpm size={40} />\r\n          </Col>\r\n\r\n          <Col>\r\n            <SiVisualstudiocode size={40} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>API</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            All racing data is obtained through{\" \"}\r\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\r\n              Ergast API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Some drivers' and circuits' information are obtained through{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/w/api.php\"\r\n              style={{ color: \"white\" }}\r\n            >\r\n              Wikipedia API\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            <h5>DISCLAIMER</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            This website was developed for learning and educational purposes\r\n            only.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            Data displayed may be inaccurate. By using this website you\r\n            acknowledge this.\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\r\n            The author disclaims all responsibility for any loss or damage\r\n            arising from the use of this website.\r\n          </Col>\r\n        </Row>\r\n\r\n        <br />\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={7}>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              This website is unofficial and is not associated in any way with\r\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\r\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\r\n              marks of Formula One Licensing B.V.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiFillGithub } from \"react-icons/ai\";\r\nimport { GiCheckeredFlag } from \"react-icons/gi\";\r\nimport DayNightToggle from \"react-day-and-night-toggle\";\r\n\r\nconst NavBar = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const themeToggler = () => {\r\n    const toggle = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(toggle);\r\n    localStorage.setItem(\"theme\", toggle);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\r\n      <Container style={{ minHeight: \"40px\" }}>\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"icon-link\">\r\n            <GiCheckeredFlag size={30} />\r\n          </Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">RACES</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\r\n          <Navbar.Brand className=\"text-link\">STANDINGS</Navbar.Brand>\r\n        </Link>\r\n\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Row className=\"g-2\">\r\n            <Col style={{ marginTop: \"15px\" }}>\r\n              <DayNightToggle\r\n                onChange={() => themeToggler()}\r\n                checked={theme === \"dark\"}\r\n                size={20}\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Navbar.Brand\r\n                className=\"icon-link\"\r\n                href=\"https://github.com/jdro10\"\r\n                aria-label=\"Github\"\r\n              >\r\n                <AiFillGithub size={25} />\r\n              </Navbar.Brand>\r\n            </Col>\r\n          </Row>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export const TeamColors = {\r\n  red_bull: \"#0600EF\",\r\n  williams: \"#005AFF\",\r\n  mercedes: \"#00D2BE\",\r\n  mclaren: \"#FF8700\",\r\n  aston_martin: \"#006F62\",\r\n  alphatauri: \"#2B4562\",\r\n  alpine: \"#0090FF\",\r\n  ferrari: \"#DC0000\",\r\n  haas: \"#FFFFFF\",\r\n  alfa: \"#900000\",\r\n  renault: \"#FFF500\",\r\n  racing_point: \"#FFC0CB\",\r\n  toro_rosso: \"#469BFF\",\r\n  force_india: \"#F596C8\",\r\n  sauber: \"#9B0000\",\r\n  manor: \"#323232\",\r\n  lotus_f1: \"#FFB800\",\r\n  marussia: \"#6E0000\",\r\n  caterham: \"#0b361f\",\r\n};\r\n","import React from \"react\";\r\nimport { TeamColors } from \"../../data/TeamColors\";\r\n\r\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"3px\",\r\n        height: height,\r\n        display: \"table\",\r\n        margin: \"0 auto\",\r\n        borderRadius: \"20px\",\r\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\r\n          ? TeamColors[constructorId]\r\n          : \"#000000\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TeamColor;\r\n","export const CountriesCodeNationality = {\r\n  British: \"GB\",\r\n  Finnish: \"FI\",\r\n  Dutch: \"NL\",\r\n  Mexican: \"MX\",\r\n  Spanish: \"ES\",\r\n  Australian: \"AU\",\r\n  Monegasque: \"MC\",\r\n  French: \"FR\",\r\n  German: \"DE\",\r\n  Japanese: \"JP\",\r\n  Canadian: \"CA\",\r\n  Italian: \"IT\",\r\n  Russian: \"RU\",\r\n  Austrian: \"AT\",\r\n  Swiss: \"CH\",\r\n  American: \"US\",\r\n  Thai: \"TH\",\r\n  \"New Zealander\": \"NZ\",\r\n  \"New Zealand\": \"NZ\",\r\n  Swedish: \"SE\",\r\n  Portuguese: \"PT\",\r\n  Brazilian: \"BR\",\r\n  Hungarian: \"HU\",\r\n  Argentine: \"AR\",\r\n  Belgian: \"BE\",\r\n  Belgium: \"BE\",\r\n  \"South African\": \"ZA\",\r\n  Danish: \"DK\",\r\n  Liechtensteiner: \"LI\",\r\n  \"Hong Kong\": \"HK\",\r\n  Irish: \"IE\",\r\n  Chilean: \"CL\",\r\n  Venezuelan: \"VE\",\r\n  Colombian: \"CO\",\r\n  Czech: \"CZ\",\r\n  Malaysia: \"MY\",\r\n  Indian: \"IN\",\r\n  Polish: \"PL\",\r\n  Indonesian: \"ID\",\r\n  Rhodesian: \"ZW\",\r\n  Russia: \"RU\",\r\n  Korea: \"KR\",\r\n  Argentina: \"AR\",\r\n  UAE: \"AE\",\r\n  Australia: \"AU\",\r\n  Austria: \"AT\",\r\n  Azerbaijan: \"AZ\",\r\n  Bahrain: \"BH\",\r\n  Brazil: \"BR\",\r\n  Canada: \"CA\",\r\n  China: \"CN\",\r\n  France: \"FR\",\r\n  Germany: \"DE\",\r\n  Hungary: \"HU\",\r\n  India: \"IN\",\r\n  Italy: \"IT\",\r\n  Japan: \"JP\",\r\n  Malyasia: \"MY\",\r\n  Malaysian: \"MY\",\r\n  Mexico: \"MX\",\r\n  Monaco: \"MC\",\r\n  Morocco: \"MA\",\r\n  Netherlands: \"NL\",\r\n  Portugal: \"PT\",\r\n  \"Saudi Arabia\": \"SA\",\r\n  Singapore: \"SG\",\r\n  \"South Africa\": \"ZA\",\r\n  Spain: \"ES\",\r\n  Sweden: \"SE\",\r\n  Switzerland: \"CH\",\r\n  Turkey: \"TR\",\r\n  UK: \"GB\",\r\n  USA: \"US\",\r\n  \"United States\": \"US\",\r\n  Qatar: \"QA\",\r\n  Chinese: \"CN\"\r\n};\r\n","export function getLocalRaceDate(date, time) {\r\n  const raceDate = new Date(date + \"T\" + time);\r\n  const hours = (raceDate.getHours() < 10 ? \"0\" : \"\") + raceDate.getHours();\r\n  const minutes =\r\n    (raceDate.getMinutes() < 10 ? \"0\" : \"\") + raceDate.getMinutes();\r\n\r\n  return hours + \":\" + minutes;\r\n}\r\n\r\nexport function convertDate(dateToConvert) {\r\n  const date = dateToConvert.split(\"-\");\r\n\r\n  return `${date[2]}/${date[1]}/${date[0]}`;\r\n}","import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { FaStopwatch } from \"react-icons/fa\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\nconst RaceClassification = ({ raceClassification }) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const rowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        className=\"table-hover table-striped standings-table\"\r\n        responsive=\"sm\"\r\n        style={{ overflow: \"hidden\", marginTop: \"10px\" }}\r\n        variant={theme}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">POS</th>\r\n            <th className=\"hideXS text-center\">NUMBER</th>\r\n            <th>DRIVER</th>\r\n            <th className=\"hideXS\">TEAM</th>\r\n            <th className=\"hideXS\">LAPS</th>\r\n            <th>TIME/RETIRED</th>\r\n            <th>PTS</th>\r\n            <th className=\"hideXS\">GRID</th>\r\n            <th className=\"hideXS\">+/-</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {raceClassification.map((driver, index) => (\r\n            <tr\r\n              key={index}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rowClick(driver.Driver.driverId)}\r\n              className=\"align-middle\"\r\n            >\r\n              <td className=\"text-center\">{driver.position}</td>\r\n              <td className=\"hideXS text-center\">{driver.number}</td>\r\n              <td>\r\n                <Row className=\"g-2\">\r\n                  <Col xs={1} className=\"showXS\">\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                      height=\"45px\"\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={1} className=\"hideXS\">\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={6} md={10}>\r\n                    {driver.Driver.givenName}{\" \"}\r\n                    <p style={boldFont}>\r\n                      {driver.Driver.familyName.toUpperCase()}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\r\n              <td className=\"hideXS\">{driver.laps}</td>\r\n              <td>\r\n                {driver.Time !== undefined\r\n                  ? driver.status === \"Finished\"\r\n                    ? driver.Time.time\r\n                    : driver.status\r\n                  : driver.status}\r\n              </td>\r\n\r\n              {driver.FastestLap && driver.FastestLap.rank === \"1\" ? (\r\n                <td>\r\n                  <Row>\r\n                    <Col xs={2}>{driver.points}</Col>\r\n\r\n                    <Col>\r\n                      <FaStopwatch />\r\n                    </Col>\r\n                  </Row>\r\n                </td>\r\n              ) : (\r\n                <td>{driver.points}</td>\r\n              )}\r\n\r\n              <td className=\"hideXS\">{driver.grid}</td>\r\n              <td className=\"hideXS\">\r\n                {driver.grid === \"0\"\r\n                  ? 20 - driver.position\r\n                  : driver.grid - driver.position}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      <FaStopwatch /> - Fastest lap of the race\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceClassification;\r\n","import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../SharedStyles/Table.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\n\r\nconst QualifyingClassification = ({\r\n  qualifyingClassification,\r\n  sprintClassification,\r\n}) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const rowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {sprintClassification !== null && sprintClassification !== undefined ? (\r\n        <>\r\n          <h2 className=\"text-center\">SPRINT QUALYFING</h2>\r\n          <Table\r\n            responsive=\"sm\"\r\n            className=\"table-hover table-striped standings-table\"\r\n            variant={theme}\r\n            style={{ marginTop: \"10px\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\">POS</th>\r\n                <th className=\"hideXS text-center\">NUMBER</th>\r\n                <th>DRIVER</th>\r\n                <th className=\"hideXS\">TEAM</th>\r\n                <th className=\"hideXS\">LAPS</th>\r\n                <th>TIME/RETIRED</th>\r\n                <th>PTS</th>\r\n                <th className=\"hideXS\">GRID</th>\r\n                <th className=\"hideXS\">+/-</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {sprintClassification.map((driver, index) => (\r\n                <tr\r\n                  key={index}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => rowClick(driver.Driver.driverId)}\r\n                  className=\"align-middle\"\r\n                >\r\n                  <td className=\"text-center\">{driver.position}</td>\r\n                  <td className=\"hideXS text-center\">{driver.number}</td>\r\n                  <td>\r\n                    <Row className=\"g-2\">\r\n                      <Col xs={1} className=\"showXS\">\r\n                        <TeamColor\r\n                          constructorId={driver.Constructor.constructorId}\r\n                          height=\"45px\"\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={1} className=\"hideXS\">\r\n                        <TeamColor\r\n                          constructorId={driver.Constructor.constructorId}\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col xs={6} md={10}>\r\n                        {driver.Driver.givenName}{\" \"}\r\n                        <p style={boldFont}>\r\n                          {driver.Driver.familyName.toUpperCase()}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </td>\r\n                  <td className=\"hideXS\">{driver.Constructor.name}</td>\r\n                  <td className=\"hideXS\">{driver.laps}</td>\r\n                  <td>\r\n                    {driver.Time !== undefined\r\n                      ? driver.status === \"Finished\"\r\n                        ? driver.Time.time\r\n                        : driver.status\r\n                      : driver.status}\r\n                  </td>\r\n                  <td>{driver.points}</td>\r\n                  <td className=\"hideXS\">{driver.grid}</td>\r\n                  <td className=\"hideXS\">\r\n                    {driver.grid === \"0\"\r\n                      ? 20 - driver.position\r\n                      : driver.grid - driver.position}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n\r\n          <h2 className=\"text-center\">QUALIFYING</h2>\r\n        </>\r\n      ) : null}\r\n\r\n      <Table\r\n        responsive=\"sm\"\r\n        className=\"table-hover table-striped standings-table\"\r\n        variant={theme}\r\n        style={{ marginTop: \"10px\" }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">POS</th>\r\n            <th className=\"hideXS text-center\">NUMBER</th>\r\n            <th>DRIVER</th>\r\n            <th className=\"hideXS\">TEAM</th>\r\n            <th className=\"text-center\">Q1</th>\r\n            <th className=\"text-center\">Q2</th>\r\n            <th className=\"text-center\">Q3</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {qualifyingClassification.map((driver, index) => (\r\n            <tr\r\n              key={index}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rowClick(driver.Driver.driverId)}\r\n            >\r\n              <td className=\"text-center\">{driver.position}</td>\r\n              <td className=\"hideXS text-center\">{driver.number}</td>\r\n              <td className=\"hideXS\">\r\n                <Row className=\"g-2\">\r\n                  <Col xs={1}>\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    {driver.Driver.givenName}{\" \"}\r\n                    <p style={boldFont}>\r\n                      {driver.Driver.familyName.toUpperCase()}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"showXS\">\r\n                <Row className=\"g-2\">\r\n                  <Col xs={1}>\r\n                    <TeamColor\r\n                      constructorId={driver.Constructor.constructorId}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={6}>\r\n                    <p style={boldFont}>\r\n                      {!driver.Driver.hasOwnProperty(\"code\")\r\n                        ? driver.Driver.familyName.substring(0, 3).toUpperCase()\r\n                        : driver.Driver.code}\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </td>\r\n              <td className=\"hideXS\">{driver.Constructor.name}</td>\r\n              <td className=\"text-center\">\r\n                {driver.hasOwnProperty(\"Q1\")\r\n                  ? driver.Q1 === \"\"\r\n                    ? \"-\"\r\n                    : driver.Q1\r\n                  : \"-\"}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {driver.hasOwnProperty(\"Q2\") ? driver.Q2 : \"-\"}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {driver.hasOwnProperty(\"Q3\") ? driver.Q3 : \"-\"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QualifyingClassification;\r\n","import Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\n\r\nconst RaceInformation = ({ raceInfo, eventCountryCode }) => {\r\n  return (\r\n    <>\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <a className=\"race-link\" href={raceInfo.url}>\r\n            <h1>{raceInfo.raceName.toUpperCase()}</h1>\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <h3>ROUND {raceInfo.round}</h3>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <h5>{convertDate(raceInfo.date)}</h5>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <h5>\r\n            {raceInfo.hasOwnProperty(\"time\")\r\n              ? getLocalRaceDate(raceInfo.date, raceInfo.time)\r\n              : null}\r\n          </h5>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center text-center\">\r\n        <Col md=\"auto\">\r\n          <CircleFlag\r\n            countryCode={CountriesCodeNationality[\r\n              eventCountryCode\r\n            ].toLowerCase()}\r\n            height=\"100\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceInformation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Map.css\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nconst Map = ({ coordinates, circuitName }) => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (map) {\r\n      setInterval(function () {\r\n        map.invalidateSize();\r\n      }, 100);\r\n    }\r\n  }, [map]);\r\n\r\n  return (\r\n    <MapContainer\r\n      center={coordinates}\r\n      zoom={14}\r\n      scrollWheelZoom={true}\r\n      whenCreated={setMap}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={coordinates}>\r\n        <Popup>\r\n          {circuitName} <br /> {coordinates[0]} | {coordinates[1]}\r\n        </Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from \"react\";\r\nimport TeamColor from \"../TeamColor/TeamColor\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst boldFont = {\r\n  fontWeight: 600,\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  display: \"inline\",\r\n};\r\n\r\nconst CircuitInformation = ({ firstGP, lastGP, lastGPDetails, fastestLap }) => {\r\n  const history = useHistory();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const driverRowClick = (driverId) => {\r\n    history.push(`/driver/${driverId}`);\r\n  };\r\n\r\n  const constructorRowClick = (wikiConstructorLink) => {\r\n    window.open(wikiConstructorLink, \"_blank\");\r\n  };\r\n\r\n  const raceRowClick = (season, round) => {\r\n    history.push(`/race/${season}/${round}`);\r\n    window.location.reload();\r\n  };\r\n\r\n  const calculateCircuitLength = (speed, time) => {\r\n    const timeSplitted = time.split(\":\");\r\n    const secondsSplitted = time.split(\".\");\r\n\r\n    const timeInSeconds =\r\n      parseInt(timeSplitted[0] * 60) +\r\n      parseInt(timeSplitted[1]) +\r\n      parseFloat(secondsSplitted[1] / 1000);\r\n\r\n    const metersPerSecond = (parseFloat(speed) * 1000) / 3600;\r\n    const length = (metersPerSecond * timeInSeconds) / 1000;\r\n\r\n    return Math.round(length * 1000) / 1000;\r\n  };\r\n\r\n  return (\r\n    <Table\r\n      responsive\r\n      className=\"standings-table table-striped table-hover\"\r\n      variant={theme}\r\n      style={{ marginTop: \"15px\" }}\r\n    >\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"row-stats\">First Grand Prix:</td>\r\n          <td\r\n            className=\" text-end clickable-row no-wrap\"\r\n            onClick={() => raceRowClick(firstGP.season, firstGP.round)}\r\n          >\r\n            {firstGP.season} {firstGP.raceName}\r\n          </td>\r\n        </tr>\r\n\r\n        {lastGPDetails === undefined ? null : (\r\n          <tr>\r\n            <td className=\"row-stats\">Latest Grand Prix:</td>\r\n            <td\r\n              className=\"text-end clickable-row no-wrap\"\r\n              onClick={() =>\r\n                raceRowClick(lastGPDetails.season, lastGPDetails.round)\r\n              }\r\n            >\r\n              {lastGPDetails.season} {lastGPDetails.raceName}\r\n            </td>\r\n          </tr>\r\n        )}\r\n\r\n        {fastestLap === undefined ? null : (\r\n          <>\r\n            <tr>\r\n              <td className=\"row-stats\">Laps:</td>\r\n              <td className=\"text-end row-stats\">\r\n                {lastGPDetails.Results[0].laps} ({lastGPDetails.season})\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Race distance:</td>\r\n              <td className=\"text-end row-stats\">\r\n                {Math.round(\r\n                  parseInt(lastGPDetails.Results[0].laps) *\r\n                    calculateCircuitLength(\r\n                      parseFloat(\r\n                        lastGP.Results[0].FastestLap.AverageSpeed.speed\r\n                      ),\r\n                      lastGP.Results[0].FastestLap.Time.time\r\n                    ) *\r\n                    1000\r\n                ) / 1000}{\" \"}\r\n                km ({lastGPDetails.season})\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Circuit length:</td>\r\n              <td className=\"text-end row-stats\">\r\n                {calculateCircuitLength(\r\n                  parseFloat(lastGP.Results[0].FastestLap.AverageSpeed.speed),\r\n                  lastGP.Results[0].FastestLap.Time.time\r\n                )}{\" \"}\r\n                km\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Lap record (All circuit's layouts):</td>\r\n              <td\r\n                className=\"text-end clickable-row align-middle\"\r\n                onClick={() =>\r\n                  raceRowClick(fastestLap.season, fastestLap.round)\r\n                }\r\n              >\r\n                {fastestLap.Results[0].FastestLap.Time.time} (\r\n                {fastestLap.season})\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Average speed:</td>\r\n              <td\r\n                className=\"text-end clickable-row no-wrap\"\r\n                onClick={() =>\r\n                  raceRowClick(fastestLap.season, fastestLap.round)\r\n                }\r\n              >\r\n                {fastestLap.Results[0].FastestLap.AverageSpeed.speed} km/h (\r\n                {calculateCircuitLength(\r\n                  parseFloat(\r\n                    fastestLap.Results[0].FastestLap.AverageSpeed.speed\r\n                  ),\r\n                  fastestLap.Results[0].FastestLap.Time.time\r\n                )}{\" \"}\r\n                km)\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"row-stats\">Driver:</td>\r\n              <td\r\n                className=\"clickable-row text-end\"\r\n                onClick={() =>\r\n                  driverRowClick(fastestLap.Results[0].Driver.driverId)\r\n                }\r\n              >\r\n                {fastestLap.Results[0].Driver.givenName}{\" \"}\r\n                <p style={boldFont}>\r\n                  {fastestLap.Results[0].Driver.familyName.toUpperCase()}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            \r\n            <tr>\r\n              <td className=\"row-stats\">Team:</td>\r\n              <td\r\n                className=\"clickable-row text-end\"\r\n                onClick={() =>\r\n                  constructorRowClick(fastestLap.Results[0].Constructor.url)\r\n                }\r\n              >\r\n                <Row className=\"justify-content-end text-end g-2\">\r\n                  <Col className=\"align-self-center\" xs=\"auto\">\r\n                    <TeamColor\r\n                      constructorId={\r\n                        fastestLap.Results[0].Constructor.constructorId\r\n                      }\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs=\"auto\">{fastestLap.Results[0].Constructor.name}</Col>\r\n                </Row>\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default CircuitInformation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Map from \"../Map/Map\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { CircleFlag } from \"react-circle-flags\";\r\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport CircuitInformation from \"./CircuitInformation\";\r\n\r\nconst Circuit = ({ raceInfo, eventCountryCode }) => {\r\n  const [firstGP, setFirstGP] = useState(null);\r\n  const [lastGP, setLastGP] = useState(null);\r\n  const [lastGPDetails, setLastGPDetails] = useState(null);\r\n  const [fastestLap, setFastestLap] = useState(null);\r\n  const [wikiPageId, setWikiPageId] = useState(null);\r\n  const [circuitInformation, setCircuitInformation] = useState(null);\r\n  const [loadingWikiData, setLoadingWikiData] = useState(true);\r\n  const [loadingFirstGP, setLoadingFirstGP] = useState(true);\r\n  const [loadingFastestLap, setLoadingFastestLap] = useState(true);\r\n  const [loadingLastGPDetails, setLoadingLastGPDetails] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCircuitFastestLap = () => {\r\n      fetch(\r\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/fastest/1/results.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          let bestLap = result.MRData.RaceTable.Races[0];\r\n\r\n          result.MRData.RaceTable.Races.forEach((lap) => {\r\n            if (\r\n              lap.Results[0].FastestLap.Time.time <\r\n              bestLap.Results[0].FastestLap.Time.time\r\n            ) {\r\n              bestLap = lap;\r\n            }\r\n          });\r\n\r\n          setLastGP(\r\n            result.MRData.RaceTable.Races[\r\n              result.MRData.RaceTable.Races.length - 1\r\n            ]\r\n          );\r\n          setFastestLap(bestLap);\r\n          setLoadingFastestLap(false);\r\n        });\r\n    };\r\n\r\n    const fetchCircuitFirstGP = () => {\r\n      fetch(\r\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/races.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setFirstGP(result.MRData.RaceTable.Races[0]);\r\n          setLoadingFirstGP(false);\r\n\r\n          return fetch(\r\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${raceInfo.Circuit.circuitName}&origin=*`,\r\n            { method: \"GET\" }\r\n          );\r\n        })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWikiPageId(Object.keys(result.query.pages));\r\n          setCircuitInformation(result.query.pages);\r\n          setLoadingWikiData(false);\r\n        });\r\n    };\r\n\r\n    const fetchCircuitLastRaceDetails = () => {\r\n      fetch(\r\n        `https://ergast.com/api/f1/circuits/${raceInfo.Circuit.circuitId}/results/1.json?limit=100`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setLastGPDetails(\r\n            result.MRData.RaceTable.Races[\r\n              result.MRData.RaceTable.Races.length - 1\r\n            ]\r\n          );\r\n          setLoadingLastGPDetails(false);\r\n        });\r\n    };\r\n\r\n    fetchCircuitFastestLap();\r\n    fetchCircuitFirstGP();\r\n    fetchCircuitLastRaceDetails();\r\n  }, [raceInfo.Circuit.circuitId, raceInfo.Circuit.circuitName]);\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"text-center\">\r\n        <h1>{raceInfo.Circuit.circuitName.toUpperCase()}</h1>\r\n        <h3>\r\n          <CircleFlag\r\n            countryCode={CountriesCodeNationality[\r\n              eventCountryCode\r\n            ].toLowerCase()}\r\n            height=\"30\"\r\n          />{\" \"}\r\n          {raceInfo.Circuit.Location.country} (\r\n          {raceInfo.Circuit.Location.locality})\r\n        </h3>\r\n      </Row>\r\n\r\n      {loadingWikiData ? null : (\r\n        <Row>\r\n          <p style={{ textAlign: \"justify\" }}>\r\n            {circuitInformation[wikiPageId][\"extract\"]}\r\n            <br />\r\n            Source:{\" \"}\r\n            <a\r\n              href={`https://en.wikipedia.org/wiki/${circuitInformation[wikiPageId][\"title\"]}`}\r\n            >\r\n              Wikipedia\r\n            </a>\r\n          </p>\r\n        </Row>\r\n      )}\r\n\r\n      <Map\r\n        coordinates={[\r\n          raceInfo.Circuit.Location.lat,\r\n          raceInfo.Circuit.Location.long,\r\n        ]}\r\n        circuitName={raceInfo.Circuit.circuitName}\r\n        mapHeight={{ height: \"700px\" }}\r\n      />\r\n\r\n      {loadingFastestLap || loadingFirstGP || loadingLastGPDetails ? (\r\n        <Row\r\n          className=\"justify-content-center text-center\"\r\n          style={{ marginTop: \"15px\" }}\r\n        >\r\n          <Spinner animation=\"border\" />\r\n        </Row>\r\n      ) : (\r\n        <CircuitInformation\r\n          firstGP={firstGP}\r\n          lastGP={lastGP}\r\n          lastGPDetails={lastGPDetails}\r\n          fastestLap={fastestLap}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Circuit;\r\n","export const LineColors = {\r\n  1: \"rgb(128,0,0)\",\r\n  2: \"rgb(255,215,0)\",\r\n  3: \"rgb(255,0,0)\",\r\n  4: \"rgb(255,140,0)\",\r\n  5: \"rgb(0,100,0)\",\r\n  6: \"rgb(100,149,237)\",\r\n  7: \"rgb(0,191,255)\",\r\n  8: \"rgb(30,144,255)\",\r\n  9: \"rgb(0,0,255)\",\r\n  10: \"rgb(138,43,226)\",\r\n  11: \"rgb(147,112,219)\",\r\n  12: \"rgb(148,0,211)\",\r\n  13: \"rgb(255,0,255)\",\r\n  14: \"rgb(255,20,147)\",\r\n  15: \"rgb(139,69,19)\",\r\n  16: \"rgb(210,105,30)\",\r\n  17: \"rgb(244,164,96)\",\r\n  18: \"rgb(112,128,144)\",\r\n  19: \"rgb(176,196,222)\",\r\n  20: \"rgb(255,99,71)\",\r\n  21: \"rgb(250,128,114)\",\r\n  22: \"rgb(184,134,11)\",\r\n  23: \"rgb(154,205,50)\",\r\n  24: \"rgb(50,205,50)\",\r\n  25: \"rgb(75,0,130)\",\r\n  26: \"rgb(210,180,140)\",\r\n  27: \"rgb(128,128,128)\",\r\n  28: \"rgb(34,139,34)\",\r\n  29: \"rgb(127,255,0)\",\r\n  30: \"rgb(240,230,140)\",\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { LineColors } from \"../../data/LineColors\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\n\r\nconst Laps = ({ season, round }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const [data, setData] = useState({ labels: null, datasets: null });\r\n  const [loadingLaps, setLoadingLaps] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchLaps = async () => {\r\n      await fetch(\r\n        `https://ergast.com/api/f1/${season}/${round}/laps.json?limit=2000`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => lapsPerDriver(result.MRData.RaceTable.Races[0].Laps));\r\n    };\r\n\r\n    fetchLaps();\r\n  }, [season, round]);\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        reverse: true,\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 20,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 20,\r\n          },\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const optionsMobile = {\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        reverse: true,\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 10,\r\n          },\r\n          stepSize: 1,\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: theme === \"dark\" ? \"white\" : \"dark\",\r\n          font: {\r\n            size: 10,\r\n          },\r\n        },\r\n        grid: {\r\n          color: \"#777\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const lapsPerDriver = (laps) => {\r\n    const lapsObj = {};\r\n    const lapsNumber = [];\r\n\r\n    laps.forEach((lap) => {\r\n      lapsNumber.push(parseInt(lap.number));\r\n\r\n      lap.Timings.forEach((driver) => {\r\n        if (!lapsObj[driver.driverId]) {\r\n          lapsObj[driver.driverId] = [];\r\n        }\r\n\r\n        lapsObj[driver.driverId].push(driver.position);\r\n      });\r\n    });\r\n\r\n    const datasets = [];\r\n    var position = 1;\r\n\r\n    for (const [key, value] of Object.entries(lapsObj)) {\r\n      const data = {\r\n        label: key,\r\n        data: value,\r\n        fill: false,\r\n        backgroundColor: LineColors[position],\r\n        borderColor: LineColors[position],\r\n      };\r\n\r\n      datasets.push(data);\r\n      position++;\r\n    }\r\n\r\n    setData({ labels: lapsNumber, datasets: datasets });\r\n    setLoadingLaps(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingLaps ? null : (\r\n        <>\r\n          <MediaQuery minWidth={1224}>\r\n            <Line data={data} height={325} width={500} options={options} />\r\n          </MediaQuery>\r\n\r\n          <MediaQuery maxWidth={1224}>\r\n            <Line\r\n              data={data}\r\n              height={850}\r\n              width={500}\r\n              options={optionsMobile}\r\n            />\r\n          </MediaQuery>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Laps;\r\n","import React, { useContext } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { ThemeContext } from \"../../helpers/ThemeContext\";\r\nimport { convertDate, getLocalRaceDate } from \"../../helpers/Helpers\";\r\n\r\nconst FutureRaceDetails = ({ raceInfo }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const eventMonth = (date) => {\r\n    return new Date(date).toLocaleString(\"en-UK\", {\r\n      month: \"long\",\r\n    });\r\n  };\r\n\r\n  const eventStartDate = (date) => {\r\n    return convertDate(date).split(\"/\")[0];\r\n  };\r\n\r\n  const eventEndTime = (date, time, timeSpan) => {\r\n    const splittedTime = getLocalRaceDate(date, time).split(\":\");\r\n    const endDate = parseInt(splittedTime[0]) + timeSpan;\r\n\r\n    return endDate < 10 ? \"0\" + endDate : endDate;\r\n  };\r\n\r\n  const eventEndMinutes = (time) => {\r\n    return time.split(\":\")[1];\r\n  };\r\n\r\n  return (\r\n    <Table\r\n      responsive\r\n      className=\"standings-table table-striped\"\r\n      variant={theme}\r\n      style={{ marginTop: \"5%\" }}\r\n    >\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"row-stats\">RACE:</td>\r\n          <td className=\"text-end row-stats\">\r\n            {eventStartDate(raceInfo.date)} {eventMonth(raceInfo.date)}{\" \"}\r\n            {getLocalRaceDate(raceInfo.date, raceInfo.time)} -{\" \"}\r\n            {eventEndTime(raceInfo.date, raceInfo.time, 2)}:\r\n            {eventEndMinutes(raceInfo.time)}\r\n          </td>\r\n        </tr>\r\n        {raceInfo.Sprint === undefined ? (\r\n          <>\r\n            <tr>\r\n              <td className=\"row-stats\">QUALIFYING: </td>\r\n              <td className=\"text-end row-stats\">\r\n                {eventStartDate(raceInfo.Qualifying.date)}{\" \"}\r\n                {eventMonth(raceInfo.Qualifying.date)}{\" \"}\r\n                {getLocalRaceDate(\r\n                  raceInfo.Qualifying.date,\r\n                  raceInfo.Qualifying.time\r\n                )}{\" \"}\r\n                -{\" \"}\r\n                {eventEndTime(\r\n                  raceInfo.Qualifying.date,\r\n                  raceInfo.Qualifying.time,\r\n                  1\r\n                )}\r\n                :{eventEndMinutes(raceInfo.Qualifying.time)}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"row-stats\">FREE PRACTICE 3: </td>\r\n              <td className=\"text-end row-stats\">\r\n                {eventStartDate(raceInfo.ThirdPractice.date)}{\" \"}\r\n                {eventMonth(raceInfo.ThirdPractice.date)}{\" \"}\r\n                {getLocalRaceDate(\r\n                  raceInfo.ThirdPractice.date,\r\n                  raceInfo.ThirdPractice.time\r\n                )}{\" \"}\r\n                -{\" \"}\r\n                {eventEndTime(\r\n                  raceInfo.ThirdPractice.date,\r\n                  raceInfo.ThirdPractice.time,\r\n                  1\r\n                )}\r\n                :{eventEndMinutes(raceInfo.ThirdPractice.time)}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"row-stats\">FREE PRACTICE 2: </td>\r\n              <td className=\"text-end row-stats\">\r\n                {eventStartDate(raceInfo.SecondPractice.date)}{\" \"}\r\n                {eventMonth(raceInfo.SecondPractice.date)}{\" \"}\r\n                {getLocalRaceDate(\r\n                  raceInfo.SecondPractice.date,\r\n                  raceInfo.SecondPractice.time\r\n                )}{\" \"}\r\n                -{\" \"}\r\n                {eventEndTime(\r\n                  raceInfo.SecondPractice.date,\r\n                  raceInfo.SecondPractice.time,\r\n                  1\r\n                )}\r\n                :{eventEndMinutes(raceInfo.SecondPractice.time)}\r\n              </td>\r\n            </tr>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <tr>\r\n              <td className=\"row-stats\">SPRINT: </td>\r\n              <td className=\"text-end row-stats\">\r\n                {eventStartDate(raceInfo.Sprint.date)}{\" \"}\r\n                {eventMonth(raceInfo.Sprint.date)}{\" \"}\r\n                {getLocalRaceDate(raceInfo.Sprint.date, raceInfo.Sprint.time)} -{\" \"}\r\n                {eventEndTime(raceInfo.Sprint.date, raceInfo.Sprint.time, 1)}:\r\n                {eventEndMinutes(raceInfo.Sprint.time)}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"row-stats\">FREE PRACTICE 2: </td>\r\n              <td className=\"text-end row-stats\">\r\n                {eventStartDate(raceInfo.SecondPractice.date)}{\" \"}\r\n                {eventMonth(raceInfo.SecondPractice.date)}{\" \"}\r\n                {getLocalRaceDate(\r\n                  raceInfo.SecondPractice.date,\r\n                  raceInfo.SecondPractice.time\r\n                )}{\" \"}\r\n                -{\" \"}\r\n                {eventEndTime(\r\n                  raceInfo.SecondPractice.date,\r\n                  raceInfo.SecondPractice.time,\r\n                  1\r\n                )}\r\n                :{eventEndMinutes(raceInfo.SecondPractice.time)}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"row-stats\">QUALIFYING: </td>\r\n              <td className=\"text-end row-stats\">\r\n                {eventStartDate(raceInfo.Qualifying.date)}{\" \"}\r\n                {eventMonth(raceInfo.Qualifying.date)}{\" \"}\r\n                {getLocalRaceDate(\r\n                  raceInfo.Qualifying.date,\r\n                  raceInfo.Qualifying.time\r\n                )}{\" \"}\r\n                -{\" \"}\r\n                {eventEndTime(\r\n                  raceInfo.Qualifying.date,\r\n                  raceInfo.Qualifying.time,\r\n                  1\r\n                )}\r\n                :{eventEndMinutes(raceInfo.Qualifying.time)}\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )}\r\n        <tr>\r\n          <td className=\"row-stats\">FREE PRACTICE 1: </td>\r\n          <td className=\"text-end row-stats\">\r\n            {eventStartDate(raceInfo.FirstPractice.date)}{\" \"}\r\n            {eventMonth(raceInfo.FirstPractice.date)}{\" \"}\r\n            {getLocalRaceDate(\r\n              raceInfo.FirstPractice.date,\r\n              raceInfo.FirstPractice.time\r\n            )}{\" \"}\r\n            -{\" \"}\r\n            {eventEndTime(\r\n              raceInfo.FirstPractice.date,\r\n              raceInfo.FirstPractice.time,\r\n              1\r\n            )}\r\n            :{eventEndMinutes(raceInfo.FirstPractice.time)}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default FutureRaceDetails;\r\n","import React from \"react\";\r\nimport RaceClassification from \"../Classifications/RaceClassification\";\r\nimport QualifyingClassification from \"../Classifications/QualifyingClassification\";\r\nimport RaceInformation from \"./RaceInformation\";\r\nimport Circuit from \"../Circuit/Circuit\";\r\nimport Laps from \"../Laps/Laps\";\r\nimport FutureRaceDetails from \"../Race/FutureRaceDetails\";\r\n\r\nconst Event = ({\r\n  raceInfo,\r\n  raceClassification,\r\n  qualifyingClassification,\r\n  sprintClassification,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ul\r\n        className=\"nav nav-pills nav-fill mb-2\"\r\n        id=\"myTab\"\r\n        role=\"tablist\"\r\n        style={{ marginTop: \"10px\" }}\r\n      >\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            className=\"nav-link active\"\r\n            id=\"race-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#race\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"race\"\r\n            aria-selected=\"true\"\r\n          >\r\n            RACE\r\n          </button>\r\n        </li>\r\n\r\n        {raceClassification != null && raceInfo.season >= 1996 ? (\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"laps-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#laps\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"laps\"\r\n              aria-selected=\"false\"\r\n            >\r\n              LAPS\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n\r\n        {qualifyingClassification != null ? (\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"qualifying-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#qualifying\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"qualifying\"\r\n              aria-selected=\"false\"\r\n            >\r\n              QUALIFYING\r\n            </button>\r\n          </li>\r\n        ) : null}\r\n\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            className=\"nav-link\"\r\n            id=\"circuit-tab\"\r\n            data-bs-toggle=\"tab\"\r\n            data-bs-target=\"#circuit\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"circuit\"\r\n            aria-selected=\"false\"\r\n          >\r\n            CIRCUIT\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"tab-content\">\r\n        <div\r\n          className=\"tab-pane fade show active\"\r\n          id=\"race\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"race-tab\"\r\n        >\r\n          <RaceInformation\r\n            raceInfo={raceInfo}\r\n            eventCountryCode={raceInfo.Circuit.Location.country}\r\n          />\r\n\r\n          {raceClassification != null ? (\r\n            <RaceClassification raceClassification={raceClassification} />\r\n          ) : (\r\n            <FutureRaceDetails raceInfo={raceInfo} />\r\n          )}\r\n        </div>\r\n\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"laps\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"laps-tab\"\r\n        >\r\n          {raceClassification != null && raceInfo.season >= 1996 ? (\r\n            <>\r\n              <RaceInformation\r\n                raceInfo={raceInfo}\r\n                eventCountryCode={raceInfo.Circuit.Location.country}\r\n              />\r\n              <div style={{ minHeight: \"300px\" }}>\r\n                <Laps season={raceInfo.season} round={raceInfo.round} />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"qualifying\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"qualifying-tab\"\r\n        >\r\n          {qualifyingClassification != null ? (\r\n            <>\r\n              <RaceInformation\r\n                raceInfo={raceInfo}\r\n                eventCountryCode={raceInfo.Circuit.Location.country}\r\n              />\r\n\r\n              <QualifyingClassification\r\n                qualifyingClassification={qualifyingClassification}\r\n                sprintClassification={sprintClassification}\r\n              />\r\n            </>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"circuit\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"circuit-tab\"\r\n        >\r\n          <Circuit\r\n            raceInfo={raceInfo}\r\n            eventCountryCode={raceInfo.Circuit.Location.country}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Event from \"./Event\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst FutureRace = ({ season, round }) => {\r\n  const [raceInfo, setRaceInfo] = useState(null);\r\n  const [qualifying, setQualifying] = useState(null);\r\n  const [loadingRaceInfo, setLoadingRaceInfo] = useState(true);\r\n  const [loadingQualifying, setLoadingQualifying] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchRaceInfo = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (\r\n            result.MRData.RaceTable.Races[parseInt(round) - 1] !== undefined\r\n          ) {\r\n            setRaceInfo(result.MRData.RaceTable.Races[parseInt(round) - 1]);\r\n          }\r\n        });\r\n\r\n      setLoadingRaceInfo(false);\r\n    };\r\n\r\n    const fetchQualifying = async () => {\r\n      await fetch(\r\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setQualifying(result.MRData.RaceTable.Races[0].QualifyingResults);\r\n          }\r\n        });\r\n\r\n      setLoadingQualifying(false);\r\n    };\r\n\r\n    fetchRaceInfo();\r\n    fetchQualifying();\r\n  }, [season, round]);\r\n\r\n  return (\r\n    <div style={{ minHeight: \"600px\" }}>\r\n      {loadingRaceInfo || loadingQualifying ? null : raceInfo === null ? (\r\n        <Redirect to=\"/error\" />\r\n      ) : (\r\n        <Event\r\n          season={season}\r\n          round={round}\r\n          raceInfo={raceInfo}\r\n          qualifyingClassification={qualifying}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FutureRace;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Event from \"./Event\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FutureRace from \"./FutureRace\";\r\n\r\nconst Race = ({ season, round }) => {\r\n  const [raceInfo, setRaceInfo] = useState(null);\r\n  const [raceClassification, setRaceClassification] = useState(null);\r\n  const [qualifying, setQualifying] = useState(null);\r\n  const [sprintQualifying, setSprintQualifying] = useState(null);\r\n  const [loadingRaceResult, setLoadingRaceResult] = useState(true);\r\n  const [loadingQualifying, setLoadingQualifying] = useState(true);\r\n  const [loadingSprintQualifying, setLoadingSprintQualifying] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchRaceResult = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/results.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setRaceInfo(result.MRData.RaceTable.Races[0]);\r\n            setRaceClassification(result.MRData.RaceTable.Races[0].Results);\r\n          }\r\n        });\r\n\r\n      setLoadingRaceResult(false);\r\n    };\r\n\r\n    const fetchRaceQualifying = async () => {\r\n      await fetch(\r\n        `https://ergast.com/api/f1/${season}/${round}/qualifying.json`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setQualifying(result.MRData.RaceTable.Races[0].QualifyingResults);\r\n          }\r\n        });\r\n\r\n      setLoadingQualifying(false);\r\n    };\r\n\r\n    const fetchRaceSprintQualifying = async () => {\r\n      await fetch(`https://ergast.com/api/f1/${season}/${round}/sprint.json`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          if (result.MRData.RaceTable.Races[0] !== undefined) {\r\n            setSprintQualifying(result.MRData.RaceTable.Races[0].SprintResults);\r\n          }\r\n        });\r\n\r\n      setLoadingSprintQualifying(false);\r\n    };\r\n\r\n    fetchRaceResult();\r\n    fetchRaceQualifying();\r\n    fetchRaceSprintQualifying();\r\n  }, [season, round]);\r\n\r\n  return (\r\n    <Container fluid=\"md\" style={{ minHeight: \"600px\" }}>\r\n      {loadingRaceResult || loadingQualifying || loadingSprintQualifying ? (\r\n        <Container style={{ marginTop: \"5%\", minHeight: \"500px\" }}>\r\n          <Row className=\"justify-content-center text-center\">\r\n            <Spinner animation=\"border\" />\r\n          </Row>\r\n        </Container>\r\n      ) : raceClassification == null ? (\r\n        <FutureRace season={season} round={round} />\r\n      ) : (\r\n        <Event\r\n          raceInfo={raceInfo}\r\n          raceClassification={raceClassification}\r\n          qualifyingClassification={qualifying}\r\n          sprintClassification={sprintQualifying}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Race;\r\n","import React from \"react\";\r\nimport NavBar from \"../components/Navbar/Navbar\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Race from \"../components/Race/Race\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst RaceResult = () => {\r\n  const { season } = useParams();\r\n  const { round } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Race season={season} round={round} />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceResult;\r\n"],"names":["Container","Row","className","xs","id","Col","size","md","style","textAlign","href","color","useContext","ThemeContext","theme","setTheme","useEffect","localStorage","setItem","Navbar","bg","variant","minHeight","to","textDecoration","Brand","Collapse","marginTop","onChange","toggle","themeToggler","checked","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","toro_rosso","force_india","sauber","manor","lotus_f1","marussia","caterham","constructorId","height","width","display","margin","borderRadius","backgroundColor","hasOwnProperty","CountriesCodeNationality","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysia","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","Argentina","UAE","Australia","Austria","Azerbaijan","Bahrain","Brazil","Canada","China","France","Germany","Hungary","India","Italy","Japan","Malyasia","Malaysian","Mexico","Monaco","Morocco","Netherlands","Portugal","Singapore","Spain","Sweden","Switzerland","Turkey","UK","USA","Qatar","Chinese","getLocalRaceDate","date","time","raceDate","Date","getHours","getMinutes","convertDate","dateToConvert","split","boldFont","fontWeight","padding","raceClassification","history","useHistory","Table","responsive","overflow","map","driver","index","cursor","onClick","driverId","Driver","push","position","number","TeamColor","Constructor","givenName","familyName","toUpperCase","name","laps","undefined","Time","status","FastestLap","rank","points","grid","qualifyingClassification","sprintClassification","rowClick","code","substring","Q1","Q2","Q3","raceInfo","eventCountryCode","url","raceName","round","countryCode","toLowerCase","coordinates","circuitName","useState","setMap","setInterval","invalidateSize","MapContainer","center","zoom","scrollWheelZoom","whenCreated","TileLayer","attribution","Marker","Popup","firstGP","lastGP","lastGPDetails","fastestLap","raceRowClick","season","window","location","reload","calculateCircuitLength","speed","timeSplitted","secondsSplitted","timeInSeconds","parseInt","parseFloat","length","Math","Results","AverageSpeed","wikiConstructorLink","open","setFirstGP","setLastGP","setLastGPDetails","setFastestLap","wikiPageId","setWikiPageId","circuitInformation","setCircuitInformation","loadingWikiData","setLoadingWikiData","loadingFirstGP","setLoadingFirstGP","loadingFastestLap","setLoadingFastestLap","loadingLastGPDetails","setLoadingLastGPDetails","fetch","Circuit","circuitId","then","res","json","result","bestLap","MRData","RaceTable","Races","forEach","lap","method","Object","keys","query","pages","Location","country","locality","lat","long","mapHeight","Spinner","animation","LineColors","labels","datasets","data","setData","loadingLaps","setLoadingLaps","fetchLaps","lapsPerDriver","Laps","options","plugins","legend","scales","y","reverse","ticks","font","stepSize","x","optionsMobile","lapsObj","lapsNumber","Timings","entries","label","fill","borderColor","minWidth","maxWidth","eventMonth","toLocaleString","month","eventStartDate","eventEndTime","timeSpan","splittedTime","endDate","eventEndMinutes","Sprint","Qualifying","ThirdPractice","SecondPractice","FirstPractice","role","type","setRaceInfo","qualifying","setQualifying","loadingRaceInfo","setLoadingRaceInfo","loadingQualifying","setLoadingQualifying","fetchRaceInfo","fetchQualifying","QualifyingResults","setRaceClassification","sprintQualifying","setSprintQualifying","loadingRaceResult","setLoadingRaceResult","loadingSprintQualifying","setLoadingSprintQualifying","fetchRaceResult","fetchRaceQualifying","fetchRaceSprintQualifying","SprintResults","fluid","useParams","Footer"],"sourceRoot":""}