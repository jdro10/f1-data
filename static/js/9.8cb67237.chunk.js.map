{"version":3,"sources":["components/Stats/Standings/DriversStandings.js","components/Stats/Standings/ConstructorsStandings.js","components/Stats/Standings/Standings.js","pages/StandingsPage.js","data/CountryCodeNationality.js","data/TeamColors.js","components/TeamColor/TeamColor.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["DriversStandings","style","driversStandings","responsive","className","map","driver","index","position","Driver","permanentNumber","xs","countryCode","CountriesCodeNationality","nationality","toLowerCase","height","constructorId","Constructors","familyName","toUpperCase","givenName","fontSize","name","wins","points","ConstructorsStandings","constructorsStandings","constructor","Constructor","md","Standings","useState","season","setSeason","seasonsYearsList","setSeasonsYearsList","setDriversStandings","setConstructorsStandings","loadingTeamsStandings","setLoadingTeamsStandings","loadingDriversStandings","setLoadingDriversStandings","useEffect","start","end","fetchConstructorsStandings","a","fetch","then","res","json","result","undefined","MRData","StandingsTable","StandingsLists","ConstructorStandings","fetchDriversStandings","DriverStandings","Date","getFullYear","Array","fill","_","i","reverse","Container","minHeight","Row","marginBottom","Spinner","animation","Col","Dropdown","Toggle","variant","id","Menu","maxHeight","overflowY","Item","onClick","e","text","target","textContent","StandingsPage","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","TeamColors","red_bull","williams","mercedes","mclaren","aston_martin","alphatauri","alpine","ferrari","haas","alfa","renault","racing_point","TeamColor","width","backgroundColor","hasOwnProperty","Table","React","ref","bsPrefix","striped","bordered","borderless","hover","size","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"mappings":"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","file":"static/js/9.8cb67237.chunk.js","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst DriversStandings = ({ style, driversStandings }) => {\n  return (\n    <div style={style}>\n      <Table responsive=\"xs\">\n        <thead>\n          <tr>\n            <th>Pos</th>\n            <th className=\"hideXS\">No</th>\n            <th>Name/Team</th>\n            <th className=\"hideXS\">Wins</th>\n            <th>Points</th>\n          </tr>\n        </thead>\n        <tbody>\n          {driversStandings.map((driver, index) => (\n            <tr key={index} className=\"align-middle\">\n              <td>{driver.position}</td>\n              <td className=\"hideXS\">{driver.Driver.permanentNumber}</td>\n              <td>\n                <Row className=\"g-0\">\n                  <Col xs={2} className=\"align-self-center\">\n                    <CircleFlag\n                      countryCode={CountriesCodeNationality[\n                        driver.Driver.nationality\n                      ].toLowerCase()}\n                      height={20}\n                    />\n                  </Col>\n                  <Col xs={1}>\n                    <TeamColor\n                      constructorId={driver.Constructors[0].constructorId}\n                      height=\"42px\"\n                    />\n                  </Col>\n                  <Col xs={8} className=\"text-start\">\n                    <Row>\n                      <Col className=\"showXS\">\n                        <b>{driver.Driver.familyName.toUpperCase()}</b>\n                      </Col>\n                      <Col className=\"hideXS\">\n                        {driver.Driver.givenName}{\" \"}\n                        <b>{driver.Driver.familyName.toUpperCase()}</b>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col style={{ fontSize: \"13px\" }}>\n                        {driver.Constructors[0].name}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </td>\n              <td className=\"hideXS\">{driver.wins}</td>\n              <td>{driver.points}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default DriversStandings;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { CountriesCodeNationality } from \"../../../data/CountryCodeNationality\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../Styles/Table.css\";\nimport TeamColor from \"../../TeamColor/TeamColor\";\n\nconst ConstructorsStandings = ({ style, constructorsStandings }) => {\n  return (\n    <div style={style}>\n      {constructorsStandings !== null ? (\n        <Table responsive=\"sm\">\n          <thead>\n            <tr>\n              <th>Pos</th>\n              <th>Name</th>\n              <th className=\"hideXS\">Wins</th>\n              <th>Points</th>\n            </tr>\n          </thead>\n          <tbody>\n            {constructorsStandings.map((constructor, index) => (\n              <tr key={index}>\n                <td>{constructor.position}</td>\n                <td>\n                  <Row>\n                    <Col xs={2}>\n                      <CircleFlag\n                        countryCode={CountriesCodeNationality[\n                          constructor.Constructor.nationality\n                        ].toLowerCase()}\n                        height={20}\n                      />\n                    </Col>\n                    <Col xs={1}>\n                      <TeamColor\n                        constructorId={constructor.Constructor.constructorId}\n                      />\n                    </Col>\n                    <Col xs={8} className=\"text-start\">\n                      {constructor.Constructor.name.toUpperCase()}\n                    </Col>\n                  </Row>\n                </td>\n                <td className=\"hideXS\">{constructor.wins}</td>\n                <td>{constructor.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ) : (\n        <Row className=\"justify-content-center text-center\">\n          <Col md=\"auto\">\n            <h3>\n              There's no constructors' standings data available for this season.\n            </h3>\n            <br />\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default ConstructorsStandings;\n","import React, { useState, useEffect } from \"react\";\nimport ConstructorsStandings from \"./ConstructorsStandings\";\nimport DriversStandings from \"./DriversStandings\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nconst Standings = () => {\n  const FIRST_SEASON = 1950;\n  const [season, setSeason] = useState(\"2021\");\n  const [seasonsYearsList, setSeasonsYearsList] = useState(null);\n  const [driversStandings, setDriversStandings] = useState(null);\n  const [constructorsStandings, setConstructorsStandings] = useState(null);\n  const [loadingTeamsStandings, setLoadingTeamsStandings] = useState(true);\n  const [loadingDriversStandings, setLoadingDriversStandings] = useState(true);\n\n  useEffect(() => {\n    const fetchConstructorsStandings = async () => {\n      setLoadingTeamsStandings(true);\n      await fetch(\n        `https://ergast.com/api/f1/${season}/constructorStandings.json`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          if (result.MRData.StandingsTable.StandingsLists[0] !== undefined) {\n            setConstructorsStandings(\n              result.MRData.StandingsTable.StandingsLists[0]\n                .ConstructorStandings\n            );\n          } else {\n            setConstructorsStandings(null);\n          }\n        });\n\n      setLoadingTeamsStandings(false);\n    };\n\n    const fetchDriversStandings = async () => {\n      setLoadingDriversStandings(true);\n      await fetch(`https://ergast.com/api/f1/${season}/driverStandings.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          setDriversStandings(\n            result.MRData.StandingsTable.StandingsLists[0].DriverStandings\n          );\n          setLoadingDriversStandings(false);\n        });\n    };\n\n    const fillArrayBetweenTwoNumbers = (start, end) => {\n      setSeasonsYearsList(\n        Array(end - start + 1)\n          .fill()\n          .map((_, i) => start + i)\n          .reverse()\n      );\n    };\n\n    fetchConstructorsStandings();\n    fetchDriversStandings();\n    fillArrayBetweenTwoNumbers(FIRST_SEASON, new Date().getFullYear());\n  }, [season]);\n\n  const seasonYearChange = (text) => {\n    setSeason(text);\n  };\n\n  return (\n    <Container>\n      {loadingTeamsStandings || loadingDriversStandings ? (\n        <Container style={{ minHeight: \"500px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <h1 style={{ marginBottom: \"3%\" }}>Formula One</h1>\n            <Spinner animation=\"border\" />\n          </Row>\n        </Container>\n      ) : (\n        <Container style={{ minHeight: \"700px\" }}>\n          <Row className=\"justify-content-center text-center\">\n            <Col>\n              <h1>{season} Formula One season</h1>\n            </Col>\n          </Row>\n          <Row\n            className=\"justify-content-center text-center\"\n            style={{ marginBottom: \"2%\" }}\n          >\n            <Col>\n              <Dropdown>\n                <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                  {season}\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  style={{ maxHeight: \"500px\", overflowY: \"scroll\" }}\n                >\n                  {seasonsYearsList.map((season, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      onClick={(e) => seasonYearChange(e.target.textContent)}\n                    >\n                      {season}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col md=\"auto\">\n              <h1>Constructors' standings</h1>\n            </Col>\n            <Row>\n              <Col>\n                <ConstructorsStandings\n                  constructorsStandings={constructorsStandings}\n                />\n              </Col>\n            </Row>\n            <Col md=\"auto\">\n              <h1>Drivers' standings</h1>\n            </Col>\n            <Row>\n              <Col>\n                <DriversStandings driversStandings={driversStandings} />\n              </Col>\n            </Row>\n          </Row>\n        </Container>\n      )}\n    </Container>\n  );\n};\n\nexport default Standings;\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Standings from \"../components/Stats/Standings/Standings\";\n\nconst StandingsPage = () => {\n  return (\n    <div>\n      <NavBar />\n      <Standings />\n      <Footer />\n    </div>\n  );\n};\n\nexport default StandingsPage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DN\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea:  \"KR\"\n};\n","export const TeamColors = {\n  red_bull: \"#0000FF\",\n  williams: \"#1E90FF\",\n  mercedes: \"#7FFFD4\",\n  mclaren: \"#FFA500\",\n  aston_martin: \"#008000\",\n  alphatauri: \"#778899\",\n  alpine: \"#4169E1\",\n  ferrari: \"#FF0000\",\n  haas: \"#FFFFFF\",\n  alfa: \"#8B0000\",\n  renault: \"#FFFF00\",\n  racing_point: \"#FFC0CB\"\n};\n","import React from \"react\";\nimport { TeamColors } from \"../../data/TeamColors\";\n\nconst TeamColor = ({ constructorId, height = \"27px\" }) => {\n  return (\n    <div\n      style={{\n        width: \"3px\",\n        height: height,\n        backgroundColor: TeamColors.hasOwnProperty(constructorId)\n          ? TeamColors[constructorId]\n          : \"#000000\",\n      }}\n    />\n  );\n};\n\nexport default TeamColor;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}