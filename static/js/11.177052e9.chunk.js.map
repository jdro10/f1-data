{"version":3,"sources":["components/Driver/Driver.js","pages/DriverPage.js","data/CountryCodeNationality.js","components/Navbar/Navbar.js","components/Footer/Footer.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["boldFont","fontWeight","fontSize","Driver","driverId","useState","lastGP","setLastGP","firstGP","setFirstGP","loading","setLoading","wikiPageId","setWikiPageId","driverRaces","setDriverRaces","driverPhoto","setDriverPhoto","driverNationality","setDriverNationality","driverInformation","setDriverInformation","loadingDriverRaces","setLoadingDriverRaces","loadingDriverStats","setLoadingDriverStats","wins","podiums","poles","totalPoints","totalFastestLaps","totalLapsRaced","totalGrandPrix","driverStats","setDriverStats","useEffect","fetchDriverInformation","a","fetch","then","res","json","result","driverName","MRData","DriverTable","Drivers","url","split","nationality","method","Object","keys","query","pages","replace","catch","error","console","log","fetchDriverResults","RaceTable","Races","parseInt","total","filter","race","Results","position","length","includes","grid","reduce","acc","current","points","FastestLap","rank","laps","driversPodiumPlaces","Container","style","minHeight","Row","className","Spinner","animation","Col","xs","lg","marginBottom","countryCode","CountriesCodeNationality","toLowerCase","height","hasOwnProperty","borderRadius","src","width","alt","size","textAlign","href","Table","responsive","margin","raceName","season","undefined","DriverPage","useParams","Footer","British","Finnish","Dutch","Mexican","Spanish","Australian","Monegasque","French","German","Japanese","Canadian","Italian","Russian","Austrian","Swiss","American","Thai","Swedish","Portuguese","Brazilian","Hungarian","Argentine","Belgian","Belgium","Danish","Liechtensteiner","Irish","Chilean","Venezuelan","Colombian","Czech","Malaysian","Indian","Polish","Indonesian","Rhodesian","Russia","Korea","NavBar","bg","variant","Brand","to","textDecoration","Collapse","id","md","color","React","ref","bsPrefix","striped","bordered","borderless","hover","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"mappings":"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","file":"static/js/11.177052e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { CircleFlag } from \"react-circle-flags\";\nimport { BsPersonFill } from \"react-icons/bs\";\nimport { CountriesCodeNationality } from \"../../data/CountryCodeNationality\";\n\nconst boldFont = {\n  fontWeight: \"600\",\n  fontSize: \"25px\",\n};\n\nconst fontSize = {\n  fontSize: \"25px\",\n};\n\nconst Driver = ({ driverId }) => {\n  const [lastGP, setLastGP] = useState(null);\n  const [firstGP, setFirstGP] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [wikiPageId, setWikiPageId] = useState(null);\n  const [driverRaces, setDriverRaces] = useState(null);\n  const [driverPhoto, setDriverPhoto] = useState(null);\n  const [driverNationality, setDriverNationality] = useState(null);\n  const [driverInformation, setDriverInformation] = useState(null);\n  const [loadingDriverRaces, setLoadingDriverRaces] = useState(true);\n  const [loadingDriverStats, setLoadingDriverStats] = useState(true);\n  const [driverStats, setDriverStats] = useState({\n    wins: 0,\n    podiums: 0,\n    poles: 0,\n    totalPoints: 0,\n    totalFastestLaps: 0,\n    totalLapsRaced: 0,\n    totalGrandPrix: 0,\n  });\n\n  useEffect(() => {\n    const fetchDriverInformation = async () => {\n      await fetch(`https://ergast.com/api/f1/drivers/${driverId}.json`)\n        .then((res) => res.json())\n        .then((result) => {\n          const driverURL = result.MRData.DriverTable.Drivers[0].url;\n          const driverName = driverURL.split(\"/\")[4];\n          setDriverNationality(\n            result.MRData.DriverTable.Drivers[0].nationality\n          );\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=${driverName}&origin=*`,\n            { method: \"GET\" }\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setWikiPageId(Object.keys(result.query.pages));\n          setDriverInformation(result.query.pages);\n          const driverName = result.query.pages[\n            Object.keys(result.query.pages)\n          ][\"title\"].replace(\" \", \"_\");\n\n          return fetch(\n            `https://en.wikipedia.org/w/api.php?action=query&prop=pageimages&format=json&piprop=original&titles=${driverName}&origin=*`\n          );\n        })\n        .then((res) => res.json())\n        .then((result) => {\n          setDriverPhoto(result.query.pages);\n          setLoading(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    const fetchDriverResults = async () => {\n      await fetch(\n        `https://ergast.com/api/f1/drivers/${driverId}/results.json?limit=1000`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setDriverRaces(result.MRData.RaceTable.Races);\n          setFirstGP(result.MRData.RaceTable.Races[0]);\n          setLastGP(\n            result.MRData.RaceTable.Races[parseInt(result.MRData.total - 1)]\n          );\n          setLoadingDriverRaces(false);\n        });\n    };\n\n    const driversPodiumPlaces = () => {\n      if (!loadingDriverRaces) {\n        const wins = driverRaces.filter(\n          (race) => race.Results[0].position === \"1\"\n        ).length;\n\n        const podiums = driverRaces.filter((race) =>\n          [\"1\", \"2\", \"3\"].includes(race.Results[0].position)\n        ).length;\n\n        const poles = driverRaces.filter(\n          (race) => race.Results[0].grid === \"1\"\n        ).length;\n\n        const totalPoints = driverRaces.reduce(\n          (acc, current) => acc + parseInt(current.Results[0].points),\n          0\n        );\n\n        const totalFastestLaps = driverRaces.filter(\n          (race) =>\n            race.Results[0].FastestLap &&\n            race.Results[0].FastestLap.rank === \"1\"\n        ).length;\n\n        const totalLapsRaced = driverRaces.reduce(\n          (acc, current) => acc + parseInt(current.Results[0].laps),\n          0\n        );\n\n        setDriverStats({\n          wins: wins,\n          podiums: podiums,\n          poles: poles,\n          totalPoints: totalPoints,\n          totalFastestLaps: totalFastestLaps,\n          totalLapsRaced: totalLapsRaced,\n          totalGrandPrix: driverRaces.length,\n        });\n        setLoadingDriverStats(false);\n      }\n    };\n\n    if (loading) {\n      fetchDriverInformation();\n      fetchDriverResults();\n    }\n\n    driversPodiumPlaces();\n  }, [driverId, loading, driverRaces, loadingDriverRaces]);\n\n  return (\n    <Container style={{ minHeight: \"500px\" }}>\n      {loading ? (\n        <Row className=\"justify-content-center text-center\">\n          <Spinner animation=\"border\" />\n        </Row>\n      ) : (\n        <>\n          <Row className=\"justify-content-center text-center\">\n            <Col xs={12} lg=\"auto\">\n              <h1\n                style={{\n                  fontWeight: \"700\",\n                  fontSize: \"60px\",\n                }}\n              >\n                {driverInformation[wikiPageId][\"title\"]}{\" \"}\n              </h1>\n            </Col>\n            <Col xs={12} lg=\"auto\" style={{ marginBottom: \"20px\" }}>\n              <CircleFlag\n                countryCode={CountriesCodeNationality[\n                  driverNationality\n                ].toLowerCase()}\n                height={66}\n              />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center text-center\">\n            <Col xs={12} lg={3} style={{ marginBottom: \"10px\" }}>\n              {driverPhoto[wikiPageId].hasOwnProperty(\"original\") ? (\n                <img\n                  style={{ borderRadius: \"10px\" }}\n                  src={driverPhoto[wikiPageId][\"original\"][\"source\"]}\n                  width=\"250px\"\n                  alt=\"driver\"\n                />\n              ) : (\n                <BsPersonFill size={150} />\n              )}\n            </Col>\n            <Col xs={12} lg={9}>\n              <p style={{ textAlign: \"justify\" }}>\n                {driverInformation[wikiPageId][\"extract\"]} (Source:{\" \"}\n                <a\n                  href={`https://en.wikipedia.org/wiki/${driverInformation[wikiPageId][\"title\"]}`}\n                >\n                  Wikipedia)\n                </a>\n              </p>\n            </Col>\n          </Row>\n          {loadingDriverStats ? (\n            <Row className=\"justify-content-center text-center\">\n              <Spinner animation=\"border\" />\n            </Row>\n          ) : (\n            <Row className=\"justify-content-center\">\n              <Table responsive style={{ width: \"75%\", margin: \"auto\" }}>\n                <tbody>\n                  <tr>\n                    <td style={boldFont}>Wins</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.wins}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Podiums</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.podiums}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Fastest laps</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.totalFastestLaps}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Pole positions</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.poles}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Total points</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.totalPoints}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Total GPs entered</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.totalGrandPrix}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>First GP</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {firstGP.raceName} {firstGP.season}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Last GP</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {lastGP !== undefined\n                        ? lastGP.raceName + \" \" + lastGP.season\n                        : \"N/A\"}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={boldFont}>Total laps raced</td>\n                    <td className=\"text-end\" style={fontSize}>\n                      {driverStats.totalLapsRaced}\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Row>\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Driver;\n","import React from \"react\";\nimport Driver from \"../components/Driver/Driver\";\nimport NavBar from \"../components/Navbar/Navbar\";\nimport Footer from \"../components/Footer/Footer\";\nimport { useParams } from \"react-router-dom\";\n\nconst DriverPage = () => {\n  const { driverId } = useParams();\n\n  return (\n    <div>\n      <NavBar />\n      <Driver driverId={driverId} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default DriverPage;\n","export const CountriesCodeNationality = {\n  British: \"GB\",\n  Finnish: \"FI\",\n  Dutch: \"NL\",\n  Mexican: \"MX\",\n  Spanish: \"ES\",\n  Australian: \"AU\",\n  Monegasque: \"MC\",\n  French: \"FR\",\n  German: \"DE\",\n  Japanese: \"JP\",\n  Canadian: \"CA\",\n  Italian: \"IT\",\n  Russian: \"RU\",\n  Austrian: \"AT\",\n  Swiss: \"CH\",\n  American: \"US\",\n  Thai: \"TH\",\n  \"New Zealander\": \"NZ\",\n  \"New Zealand\": \"NZ\",\n  Swedish: \"SE\",\n  Portuguese: \"PT\",\n  Brazilian: \"BR\",\n  Hungarian: \"HU\",\n  Argentine: \"AR\",\n  Belgian: \"BE\",\n  Belgium: \"BE\",\n  \"South African\": \"ZA\",\n  Danish: \"DK\",\n  Liechtensteiner: \"LI\",\n  \"Hong Kong\": \"HK\",\n  Irish: \"IE\",\n  Chilean: \"CL\",\n  Venezuelan: \"VE\",\n  Colombian: \"CO\",\n  Czech: \"CZ\",\n  Malaysian: \"MY\",\n  Indian: \"IN\",\n  Polish: \"PL\",\n  Indonesian: \"ID\",\n  Rhodesian: \"ZW\",\n  Russia: \"RU\",\n  Korea:  \"KR\"\n};\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\n\nconst NavBar = () => {\n  return (\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand>\n          <GiCheckeredFlag size={30} />\n        </Navbar.Brand>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Home</Navbar.Brand>\n        </Link>\n        <Link to=\"/schedule\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Races</Navbar.Brand>\n        </Link>\n        <Link to=\"/standings\" style={{ textDecoration: \"none\" }}>\n          <Navbar.Brand>Standings</Navbar.Brand>\n        </Link>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Brand href=\"https://github.com/jdro10\" aria-label=\"Github\">\n            <AiFillGithub size={25} />\n          </Navbar.Brand>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./Footer.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { GiCheckeredFlag } from \"react-icons/gi\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { FaReact } from \"react-icons/fa\";\nimport { IoLogoJavascript } from \"react-icons/io\";\nimport { BsBootstrap } from \"react-icons/bs\";\nimport { SiVisualstudiocode } from \"react-icons/si\";\nimport { IoLogoNpm } from \"react-icons/io\";\nimport { FaHtml5 } from \"react-icons/fa\";\nimport { FaCss3Alt } from \"react-icons/fa\";\nimport { SiLeaflet } from \"react-icons/si\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row className=\"justify-content-center text-center\" xs=\"auto\" id=\"row\">\n          <Col>\n            <GiCheckeredFlag size={40} />\n          </Col>\n          <Col>\n            <FaGithub size={40} />\n          </Col>\n          <Col>\n            <FaReact size={40} />\n          </Col>\n          <Col>\n            <IoLogoJavascript size={40} />\n          </Col>\n          <Col>\n            <FaHtml5 size={40} />\n          </Col>\n          <Col>\n            <FaCss3Alt size={40} />\n          </Col>\n          <Col>\n            <BsBootstrap size={40} />\n          </Col>\n          <Col>\n            <SiLeaflet size={40} />\n          </Col>\n          <Col>\n            <IoLogoNpm size={40} />\n          </Col>\n          <Col>\n            <SiVisualstudiocode size={40} />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\" xs=\"auto\" id=\"lastRow\" />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>API</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            All racing data is obtained through{\" \"}\n            <a href=\"http://ergast.com/mrd/\" style={{ color: \"white\" }}>\n              Ergast API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Countries data is obtained through{\" \"}\n            <a href=\"https://restcountries.eu/\" style={{ color: \"white\" }}>\n              REST Countries API\n            </a>\n            .\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Some drivers, teams and circuits data are obtained through{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/wiki/Main_Page\"\n              style={{ color: \"white\" }}\n            >\n              Wikipedia API\n            </a>\n            .\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <h5>Disclaimer</h5>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            This website was developed for learning and educational purposes\n            only.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            Data displayed may be inaccurate. By using this website you\n            acknowledge this.\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            The author disclaims all responsibility for any loss or damage\n            arising from the use of this website.\n          </Col>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <Col md={7}>\n            <p style={{ textAlign: \"center\" }}>\n              This website is unofficial and is not associated in any way with\n              the Formula 1 companies. F1, FORMULA ONE, FORMULA 1, FIA FORMULA\n              ONE WORLD CHAMPIONSHIP, GRAND PRIX and related marks are trade\n              marks of Formula One Licensing B.V.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}